var swfobject = (function () {
    var D = "undefined",
        r = "object",
        S = "Shockwave Flash",
        W = "ShockwaveFlash.ShockwaveFlash",
        q = "application/x-shockwave-flash",
        R = "SWFObjectExprInst",
        x = "onreadystatechange",
        O = window,
        j = document,
        t = navigator,
        T = !1,
        U = [h],
        o = [],
        N = [],
        I = [],
        l,
        Q,
        E,
        B,
        J = !1,
        a = !1,
        n,
        G,
        m = !0,
        M = (function () {
            var aa = typeof j.getElementById != D && typeof j.getElementsByTagName != D && typeof j.createElement != D,
                ah = t.userAgent.toLowerCase(),
                Y = t.platform.toLowerCase(),
                ae = Y ? /win/.test(Y) : /win/.test(ah),
                ac = Y ? /mac/.test(Y) : /mac/.test(ah),
                af = /webkit/.test(ah) ? parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : !1,
                X = !+"\v1",
                ag = [0, 0, 0],
                ab = null;
            if (typeof t.plugins != D && typeof t.plugins[S] == r) {
                ab = t.plugins[S].description;
                if (ab && !(typeof t.mimeTypes != D && t.mimeTypes[q] && !t.mimeTypes[q].enabledPlugin)) {
                    T = !0;
                    X = !1;
                    ab = ab.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
                    ag[0] = parseInt(ab.replace(/^(.*)\..*$/, "$1"), 10);
                    ag[1] = parseInt(ab.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
                    ag[2] = /[a-zA-Z]/.test(ab) ? parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0;
                }
            } else {
                if (typeof O.ActiveXObject != D) {
                    try {
                        var ad = new ActiveXObject(W);
                        if (ad) {
                            ab = ad.GetVariable("$version");
                            if (ab) {
                                X = !0;
                                ab = ab.split(" ")[1].split(",");
                                ag = [parseInt(ab[0], 10), parseInt(ab[1], 10), parseInt(ab[2], 10)];
                            }
                        }
                    } catch (Z) {}
                }
            }
            return { w3: aa, pv: ag, wk: af, ie: X, win: ae, mac: ac };
        })(),
        k = (function () {
            if (!M.w3) {
                return;
            }
            if ((typeof j.readyState != D && j.readyState == "complete") || (typeof j.readyState == D && (j.getElementsByTagName("body")[0] || j.body))) {
                f();
            }
            if (!J) {
                if (typeof j.addEventListener != D) {
                    j.addEventListener("DOMContentLoaded", f, !1);
                }
                if (M.ie && M.win) {
                    j.attachEvent(x, function () {
                        if (j.readyState == "complete") {
                            j.detachEvent(x, arguments.callee);
                            f();
                        }
                    });
                    if (O == top) {
                        (function () {
                            if (J) {
                                return;
                            }
                            try {
                                j.documentElement.doScroll("left");
                            } catch (X) {
                                setTimeout(arguments.callee, 0);
                                return;
                            }
                            f();
                        })();
                    }
                }
                if (M.wk) {
                    (function () {
                        if (J) {
                            return;
                        }
                        if (!/loaded|complete/.test(j.readyState)) {
                            setTimeout(arguments.callee, 0);
                            return;
                        }
                        f();
                    })();
                }
                s(f);
            }
        })();
    function f() {
        if (J) {
            return;
        }
        try {
            var Z = j.getElementsByTagName("body")[0].appendChild(C("span"));
            Z.parentNode.removeChild(Z);
        } catch (aa) {
            return;
        }
        J = !0;
        var X = U.length;
        for (var Y = 0; Y < X; Y++) {
            U[Y]();
        }
    }
    function K(X) {
        if (J) {
            X();
        } else {
            U[U.length] = X;
        }
    }
    function s(Y) {
        if (typeof O.addEventListener != D) {
            O.addEventListener("load", Y, !1);
        } else {
            if (typeof j.addEventListener != D) {
                j.addEventListener("load", Y, !1);
            } else {
                if (typeof O.attachEvent != D) {
                    i(O, "onload", Y);
                } else {
                    if (typeof O.onload == "function") {
                        var X = O.onload;
                        O.onload = function () {
                            X();
                            Y();
                        };
                    } else {
                        O.onload = Y;
                    }
                }
            }
        }
    }
    function h() {
        if (T) {
            V();
        } else {
            H();
        }
    }
    function V() {
        var X = j.getElementsByTagName("body")[0];
        var aa = C(r);
        aa.setAttribute("type", q);
        var Z = X.appendChild(aa);
        if (Z) {
            var Y = 0;
            (function () {
                if (typeof Z.GetVariable != D) {
                    var ab = Z.GetVariable("$version");
                    if (ab) {
                        ab = ab.split(" ")[1].split(",");
                        M.pv = [parseInt(ab[0], 10), parseInt(ab[1], 10), parseInt(ab[2], 10)];
                    }
                } else {
                    if (Y < 10) {
                        Y++;
                        setTimeout(arguments.callee, 10);
                        return;
                    }
                }
                X.removeChild(aa);
                Z = null;
                H();
            })();
        } else {
            H();
        }
    }
    function H() {
        var ag = o.length;
        if (ag > 0) {
            for (var af = 0; af < ag; af++) {
                var Y = o[af].id;
                var ab = o[af].callbackFn;
                var aa = { success: !1, id: Y };
                if (M.pv[0] > 0) {
                    var ae = c(Y);
                    if (ae) {
                        if (F(o[af].swfVersion) && !(M.wk && M.wk < 312)) {
                            w(Y, !0);
                            if (ab) {
                                aa.success = !0;
                                aa.ref = z(Y);
                                ab(aa);
                            }
                        } else {
                            if (o[af].expressInstall && A()) {
                                var ai = {};
                                ai.data = o[af].expressInstall;
                                ai.width = ae.getAttribute("width") || "0";
                                ai.height = ae.getAttribute("height") || "0";
                                if (ae.getAttribute("class")) {
                                    ai.styleclass = ae.getAttribute("class");
                                }
                                if (ae.getAttribute("align")) {
                                    ai.align = ae.getAttribute("align");
                                }
                                var ah = {};
                                var X = ae.getElementsByTagName("param");
                                var ac = X.length;
                                for (var ad = 0; ad < ac; ad++) {
                                    if (X[ad].getAttribute("name").toLowerCase() != "movie") {
                                        ah[X[ad].getAttribute("name")] = X[ad].getAttribute("value");
                                    }
                                }
                                P(ai, ah, Y, ab);
                            } else {
                                p(ae);
                                if (ab) {
                                    ab(aa);
                                }
                            }
                        }
                    }
                } else {
                    w(Y, !0);
                    if (ab) {
                        var Z = z(Y);
                        if (Z && typeof Z.SetVariable != D) {
                            aa.success = !0;
                            aa.ref = Z;
                        }
                        ab(aa);
                    }
                }
            }
        }
    }
    function z(aa) {
        var X = null;
        var Y = c(aa);
        if (Y && Y.nodeName == "OBJECT") {
            if (typeof Y.SetVariable != D) {
                X = Y;
            } else {
                var Z = Y.getElementsByTagName(r)[0];
                if (Z) {
                    X = Z;
                }
            }
        }
        return X;
    }
    function A() {
        return !a && F("6.0.65") && (M.win || M.mac) && !(M.wk && M.wk < 312);
    }
    function P(aa, ab, X, Z) {
        a = !0;
        E = Z || null;
        B = { success: !1, id: X };
        var ae = c(X);
        if (ae) {
            if (ae.nodeName == "OBJECT") {
                l = g(ae);
                Q = null;
            } else {
                l = ae;
                Q = X;
            }
            aa.id = R;
            if (typeof aa.width == D || (!/%$/.test(aa.width) && parseInt(aa.width, 10) < 310)) {
                aa.width = "310";
            }
            if (typeof aa.height == D || (!/%$/.test(aa.height) && parseInt(aa.height, 10) < 137)) {
                aa.height = "137";
            }
            j.title = j.title.slice(0, 47) + " - Flash Player Installation";
            var ad = M.ie && M.win ? "ActiveX" : "PlugIn",
                ac = "MMredirectURL=" + O.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + ad + "&MMdoctitle=" + j.title;
            if (typeof ab.flashvars != D) {
                ab.flashvars += "&" + ac;
            } else {
                ab.flashvars = ac;
            }
            if (M.ie && M.win && ae.readyState != 4) {
                var Y = C("div");
                X += "SWFObjectNew";
                Y.setAttribute("id", X);
                ae.parentNode.insertBefore(Y, ae);
                ae.style.display = "none";
                (function () {
                    if (ae.readyState == 4) {
                        ae.parentNode.removeChild(ae);
                    } else {
                        setTimeout(arguments.callee, 10);
                    }
                })();
            }
            u(aa, ab, X);
        }
    }
    function p(Y) {
        if (M.ie && M.win && Y.readyState != 4) {
            var X = C("div");
            Y.parentNode.insertBefore(X, Y);
            X.parentNode.replaceChild(g(Y), X);
            Y.style.display = "none";
            (function () {
                if (Y.readyState == 4) {
                    Y.parentNode.removeChild(Y);
                } else {
                    setTimeout(arguments.callee, 10);
                }
            })();
        } else {
            Y.parentNode.replaceChild(g(Y), Y);
        }
    }
    function g(ab) {
        var aa = C("div");
        if (M.win && M.ie) {
            aa.innerHTML = ab.innerHTML;
        } else {
            var Y = ab.getElementsByTagName(r)[0];
            if (Y) {
                var ad = Y.childNodes;
                if (ad) {
                    var X = ad.length;
                    for (var Z = 0; Z < X; Z++) {
                        if (!(ad[Z].nodeType == 1 && ad[Z].nodeName == "PARAM") && !(ad[Z].nodeType == 8)) {
                            aa.appendChild(ad[Z].cloneNode(!0));
                        }
                    }
                }
            }
        }
        return aa;
    }
    function u(ai, ag, Y) {
        var X,
            aa = c(Y);
        if (M.wk && M.wk < 312) {
            return X;
        }
        if (aa) {
            if (typeof ai.id == D) {
                ai.id = Y;
            }
            if (M.ie && M.win) {
                var ah = "";
                for (var ae in ai) {
                    if (ai[ae] != Object.prototype[ae]) {
                        if (ae.toLowerCase() == "data") {
                            ag.movie = ai[ae];
                        } else {
                            if (ae.toLowerCase() == "styleclass") {
                                ah += ' class="' + ai[ae] + '"';
                            } else {
                                if (ae.toLowerCase() != "classid") {
                                    ah += " " + ae + '="' + ai[ae] + '"';
                                }
                            }
                        }
                    }
                }
                var af = "";
                for (var ad in ag) {
                    if (ag[ad] != Object.prototype[ad]) {
                        af += '<param name="' + ad + '" value="' + ag[ad] + '" />';
                    }
                }
                aa.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + ah + ">" + af + "</object>";
                N[N.length] = ai.id;
                X = c(ai.id);
            } else {
                var Z = C(r);
                Z.setAttribute("type", q);
                for (var ac in ai) {
                    if (ai[ac] != Object.prototype[ac]) {
                        if (ac.toLowerCase() == "styleclass") {
                            Z.setAttribute("class", ai[ac]);
                        } else {
                            if (ac.toLowerCase() != "classid") {
                                Z.setAttribute(ac, ai[ac]);
                            }
                        }
                    }
                }
                for (var ab in ag) {
                    if (ag[ab] != Object.prototype[ab] && ab.toLowerCase() != "movie") {
                        e(Z, ab, ag[ab]);
                    }
                }
                aa.parentNode.replaceChild(Z, aa);
                X = Z;
            }
        }
        return X;
    }
    function e(Z, X, Y) {
        var aa = C("param");
        aa.setAttribute("name", X);
        aa.setAttribute("value", Y);
        Z.appendChild(aa);
    }
    function y(Y) {
        var X = c(Y);
        if (X && X.nodeName == "OBJECT") {
            if (M.ie && M.win) {
                X.style.display = "none";
                (function () {
                    if (X.readyState == 4) {
                        b(Y);
                    } else {
                        setTimeout(arguments.callee, 10);
                    }
                })();
            } else {
                X.parentNode.removeChild(X);
            }
        }
    }
    function b(Z) {
        var Y = c(Z);
        if (Y) {
            for (var X in Y) {
                if (typeof Y[X] == "function") {
                    Y[X] = null;
                }
            }
            Y.parentNode.removeChild(Y);
        }
    }
    function c(Z) {
        var X = null;
        try {
            X = j.getElementById(Z);
        } catch (Y) {}
        return X;
    }
    function C(X) {
        return j.createElement(X);
    }
    function i(Z, X, Y) {
        Z.attachEvent(X, Y);
        I[I.length] = [Z, X, Y];
    }
    function F(Z) {
        var Y = M.pv,
            X = Z.split(".");
        X[0] = parseInt(X[0], 10);
        X[1] = parseInt(X[1], 10) || 0;
        X[2] = parseInt(X[2], 10) || 0;
        return Y[0] > X[0] || (Y[0] == X[0] && Y[1] > X[1]) || (Y[0] == X[0] && Y[1] == X[1] && Y[2] >= X[2]) ? true : !1;
    }
    function v(ac, Y, ad, ab) {
        if (M.ie && M.mac) {
            return;
        }
        var aa = j.getElementsByTagName("head")[0];
        if (!aa) {
            return;
        }
        var X = ad && typeof ad == "string" ? ad : "screen";
        if (ab) {
            n = null;
            G = null;
        }
        if (!n || G != X) {
            var Z = C("style");
            Z.setAttribute("type", "text/css");
            Z.setAttribute("media", X);
            n = aa.appendChild(Z);
            if (M.ie && M.win && typeof j.styleSheets != D && j.styleSheets.length > 0) {
                n = j.styleSheets[j.styleSheets.length - 1];
            }
            G = X;
        }
        if (M.ie && M.win) {
            if (n && typeof n.addRule == r) {
                n.addRule(ac, Y);
            }
        } else {
            if (n && typeof j.createTextNode != D) {
                n.appendChild(j.createTextNode(ac + " {" + Y + "}"));
            }
        }
    }
    function w(Z, X) {
        if (!m) {
            return;
        }
        var Y = X ? "visible" : "hidden";
        if (J && c(Z)) {
            c(Z).style.visibility = Y;
        } else {
            v("#" + Z, "visibility:" + Y);
        }
    }
    function L(Y) {
        var Z = /[\\\"<>\.;]/;
        var X = Z.exec(Y) != null;
        return X && typeof encodeURIComponent != D ? encodeURIComponent(Y) : Y;
    }
    var d = (function () {
        if (M.ie && M.win) {
            window.attachEvent("onunload", function () {
                var ac = I.length;
                for (var ab = 0; ab < ac; ab++) {
                    I[ab][0].detachEvent(I[ab][1], I[ab][2]);
                }
                var Z = N.length;
                for (var aa = 0; aa < Z; aa++) {
                    y(N[aa]);
                }
                for (var Y in M) {
                    M[Y] = null;
                }
                M = null;
                for (var X in swfobject) {
                    swfobject[X] = null;
                }
                swfobject = null;
            });
        }
    })();
    return {
        registerObject: function (ab, X, aa, Z) {
            if (M.w3 && ab && X) {
                var Y = {};
                Y.id = ab;
                Y.swfVersion = X;
                Y.expressInstall = aa;
                Y.callbackFn = Z;
                o[o.length] = Y;
                w(ab, !1);
            } else {
                if (Z) {
                    Z({ success: !1, id: ab });
                }
            }
        },
        getObjectById: function (X) {
            if (M.w3) {
                return z(X);
            }
        },
        embedSWF: function (ab, ah, ae, ag, Y, aa, Z, ad, af, ac) {
            var X = { success: !1, id: ah };
            if (M.w3 && !(M.wk && M.wk < 312) && ab && ah && ae && ag && Y) {
                w(ah, !1);
                K(function () {
                    ae += "";
                    ag += "";
                    var aj = {};
                    if (af && typeof af === r) {
                        for (var al in af) {
                            aj[al] = af[al];
                        }
                    }
                    aj.data = ab;
                    aj.width = ae;
                    aj.height = ag;
                    var am = {};
                    if (ad && typeof ad === r) {
                        for (var ak in ad) {
                            am[ak] = ad[ak];
                        }
                    }
                    if (Z && typeof Z === r) {
                        for (var ai in Z) {
                            if (typeof am.flashvars != D) {
                                am.flashvars += "&" + ai + "=" + Z[ai];
                            } else {
                                am.flashvars = ai + "=" + Z[ai];
                            }
                        }
                    }
                    if (F(Y)) {
                        var an = u(aj, am, ah);
                        if (aj.id == ah) {
                            w(ah, !0);
                        }
                        X.success = !0;
                        X.ref = an;
                    } else {
                        if (aa && A()) {
                            aj.data = aa;
                            P(aj, am, ah, ac);
                            return;
                        } else {
                            w(ah, !0);
                        }
                    }
                    if (ac) {
                        ac(X);
                    }
                });
            } else {
                if (ac) {
                    ac(X);
                }
            }
        },
        switchOffAutoHideShow: function () {
            m = !1;
        },
        ua: M,
        getFlashPlayerVersion: function () {
            return { major: M.pv[0], minor: M.pv[1], release: M.pv[2] };
        },
        hasFlashPlayerVersion: F,
        createSWF: function (Z, Y, X) {
            if (M.w3) {
                return u(Z, Y, X);
            } else {
                return undefined;
            }
        },
        showExpressInstall: function (Z, aa, X, Y) {
            if (M.w3 && A()) {
                P(Z, aa, X, Y);
            }
        },
        removeSWF: function (X) {
            if (M.w3) {
                y(X);
            }
        },
        createCSS: function (aa, Z, Y, X) {
            if (M.w3) {
                v(aa, Z, Y, X);
            }
        },
        addDomLoadEvent: K,
        addLoadEvent: s,
        getQueryParamValue: function (aa) {
            var Z = j.location.search || j.location.hash;
            if (Z) {
                if (/\?/.test(Z)) {
                    Z = Z.split("?")[1];
                }
                if (aa == null) {
                    return L(Z);
                }
                var Y = Z.split("&");
                for (var X = 0; X < Y.length; X++) {
                    if (Y[X].substring(0, Y[X].indexOf("=")) == aa) {
                        return L(Y[X].substring(Y[X].indexOf("=") + 1));
                    }
                }
            }
            return "";
        },
        expressInstallCallback: function () {
            if (a) {
                var X = c(R);
                if (X && l) {
                    X.parentNode.replaceChild(l, X);
                    if (Q) {
                        w(Q, !0);
                        if (M.ie && M.win) {
                            l.style.display = "block";
                        }
                    }
                    if (E) {
                        E(B);
                    }
                }
                a = !1;
            }
        },
    };
})();
function uppodEvent(playerID, event) {
    switch (event) {
        case "init":
            break;
        case "start":
            sof.tv.sendWatching();
            break;
        case "play":
            break;
        case "pause":
            break;
        case "stop":
            break;
        case "seek":
            break;
        case "loaded":
            break;
        case "end":
            break;
        case "download":
            break;
        case "quality":
            break;
        case "error":
            break;
        case "ad_end":
            break;
        case "pl":
            break;
    }
}
function uppodSend(playerID, com, callback) {
    callback = callback || function () {};
    document.getElementById(playerID).sendToUppod(com, callback);
}
function uppodGet(playerID, com, callback) {
    callback = callback || function () {};
    return document.getElementById(playerID).getUppod(com, callback);
}
var uppodvideo =
    "#07b02206306e07407206c05f06c06906e06502203a07b02206802203a03103202c02206207506606606c06906e06502203a03102c02206106c06c05f06102203a03002e03402c02206d06107206706906e06206f07407406f06d02203a03202c02206207506606606c06906e06506306f06c06f07202203a02206606606606606606602207d02c02206306e07407206c05f07006c06107902203a07b02206d06107206706906e06c06506607402203a03103002c02206d06107206706906e07206906706807402203a03103002c02207306306106c06502203a03102e03607d02c02207306d06f06f07406806906e06706d06506e07502203a03102c02206306e07407206c05f06207506606606507202203a07b02206306506e07406507202203a02203102202c02207306306106c06502203a03507d02c02206306e07407206c05f07606f06c07506d06502203a07b02206906306f06e02203a02203102202c02206d06107206706906e07206906706807402203a02d03407d02c02207406907006106c07006806102203a03002e03902c02207406907006206706306f06c06f07202203a02206603406603406603402202c02207007206f02203a03102c02206306e07407206c06f07507406806506906706807402203a03503002c02207406907002203a03102c02207307407206506106d02203a03102c02206306f06d06d06506e07406206706106c07006806103102203a03002e03602c02207406907006606f06e07406306f06c06f07202203a02203002202c02206c06106e06702203a02207207502202c02206306e07407206c06806906406502203a03102c02206306e07407206c06206706306f06c06f07202203a02203007c03002202c02206d02203a02207606906406506f02202c02207406907006206706f02203a03702c02207306906402203a02203002d03403203403602202c02206306e07407206c05f06607506c06c02203a07b02206d06107206706906e06c06506607402203a03402c02206d06107206706906e07206906706807402203a03103102c02206906306f06e02203a02203202207d02c02206306e07407206c05f07406906d06505f06106c06c02203a07b02206d06107206706906e07206906706807402203a03307d02c02206e06f07706802203a02203102202c02206306e07407206c05f07307406107207402203a07b02207306306106c06503202203a03302c02206206705f07306802203a02203002202c02206206702203a02203102202c02206306f06c06f07202203a02203002202c02206206705f06102203a03002e03507d02c02206e06f05f06802203a03303703502c02206107507406f02203a02206e06f06e06502202c02206306e07407206c06806906406506f07606507202203a03102c02206207506606606507207306506302203a03402c02206206706306f06c06f07202203a02206606606606606606602202c02206306e07407206c05f07606f06c06206107202203a07b02206d06107206706906e06c06506607402203a03502c02206d06107206706906e07206906706807402203a03502c02206906306f06e02203a02203302207d02c02206607306306106c06502203a02203202202c02206306e07407206c06206706106c07006806103202203a03002e03403502c02206e06f05f07702203a03503003002c02206306f06e07407206f06c07302203a02207006c06107902c07406906d06505f07006c06107902c06c06906e06502c07406906d06505f06106c06c02c07606f06c07506d06502c07606f06c06206107202c06607506c06c02c07307406107207402c06207506606606507202207d";
eval(
    (function (p, a, c, k, e, d) {
        e = function (c) {
            return (c < a ? "" : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36));
        };
        if (!"".replace(/^/, String)) {
            while (c--) {
                d[e(c)] = k[c] || e(c);
            }
            k = [
                function (e) {
                    return d[e];
                },
            ];
            e = function () {
                return "\\w+";
            };
            c = 1;
        }
        while (c--) {
            if (k[c]) {
                p = p.replace(new RegExp("\\b" + e(c) + "\\b", "g"), k[c]);
            }
        }
        return p;
    })(
        "J eb;J gs='';I 1c(3x){J 8Z=B;J ba=[];J C;J 7u;J bS='';J bH=U;J cK=U;J bq=U;J 4K=U;J 5e=U;J dA=U;J 6E=U;J hV=U;J 36=U;J 7R=U;J 21=U;J ch=U;J dY=U;J gD=0;J gG=0;J 7O=U;J dQ=U;J eU=U;J 8o=U;J e0=U;J iN=U;J fT=U;J jh=U;J cL=U;J 5y;J 8n;J 1n;J 9O;J jE;J 8C;J 1m;J 2H;J pl;J 5v;J 7l;J 1z;J 2Q;J 5a;J 9z;J 5Q;J v;J qq;J 4V;J 6k;J 5r;J 8O=4;J db=0;J 2r;J 1q;J il=0;J dZ=0;J 3j;J gy;J 5B;J 9K;J oo;J 3a;J 3p;J 3L;J 3D;J 3M;J 4P;J 4G;J 3u;J 3E;J 2b;J 5l;J 4j;J 4M;J 6q;J 5D;J 4c;J cp;J 2X;J a0;J 59;J 3C;J 34;J 2G;J 8e;J c4;J 2L;J 2P;J 6p;J 4v;J 4N;J 7a;J 5T;J 3w;J 3K;J 1G;J 3B;J 3s;J 3k;J 4b;J 7P;J 1M;J 5V=0;J aH=U;J 41;J 5C;J 92;J eN;J dj;J do;J ei=U;J 33=[];J 3i;J 1H;J 1T;J 2s;J 1n;J 6w=1o 1c.3W();J 3h;J 1i={ex:1U,aY:1U,8Q:1U,eu:1U,2Y:{},1s:{},P:{},ic:I(4Y){4Y.2U=I(){4x(4Y,4Y.7e)};4Y.2S=I(){4B(4Y)}},kR:I(){B.aY=1o 1c.2n({hp:C.m,2R:B.2R()});B.aY.aM.hf(I(){7n();fz()});M B.aY},62:I(){M B.aY},1n:I(){if(!B.ex){B.ex=1o 1c.4o()}M B.ex},gf:I(){M 1S},qp:I(){M B.8Q},2R:I(){if(!B.eu&&1c.j2){B.eu=1o 1c.j2({qr:1i.P.1S,qs:B.gf().c,qu:C.qt,qn:C.qm,qg:C.qf,qe:C.qh,qi:C.ql,qk:4S(C.qj)===1,qv:4S(C.qw)===1,qI:4S(C.qH)===1,})}M B.eu},C:I(){M C},dd:I(){M 8f.7I(B,8L)},dN:I(){M 21},};if(3x.7f){if(!eb){eb=[]}B.7f=3x.id=3x.7f};eb.4k(B);if(P.5N(3x.id)){bx()}O{P.4g('qG',bx)};I iS(){1S=1o 5f({w:C.sw,h:C.sh,5j:C.gk,9i:C.9i,er:C.kp,h0:(C.4I==1?C.sh-C.1J:0)-(C.pl&&C.1I==\"3f\"?C.4Q+20:0),a:(C.9t==1?-1:1)});1i.P.1S.1b(1S.c);K(1i.2Y.j5.1S,{'-6Z-6o-5u':'1D','-jo-6o-5u':'1D','-az-6o-5u':'1D','-o-6o-5u':'1D','6o-5u':'1D','7Z':'42','4r':'5J','1N':'5J','W':'1x%','1j':'1x%',});K(1S.c,{'S':'jF','Q':0,'1a':0})};I iT(){6F=1o 5f({w:C.6S,h:C.d2,5j:C.g9,o:(C.1N>0?C.o/2:0),a:(C.9t==1?-1:1)});1S.c.1b(6F.c);K(6F.c,{'S':'1e','Q':C.1N,'1a':C.1N,'3c':1})};I fu(){if(C.pl){if(2N(C.pl)=='5W'){bV()};if(2N(C.pl)=='6z'){J 1F;if(C.pl.R(\"{\")==0){1F=C.pl;1F=1F.2C(/'/g,'\"')}O{1F=cB(C.pl)};if(1F){if(1F.R('#')==0){1F=un(1F)};cO{if(1F.R(\"\\'\")>-1){1F=1F.2C(/\\\\'/g,\"'\")};C.pl=5M.bi(1F);C.pl.1m?C.pl=C.pl.1m:''}cT(cm){6s(C.2K.gx+' '+ci(C.pl),1g)}};bV()};if(C.1v==''){1z=0;if(C.7t==1){1z=9e(0,pl.1d-1);4z(2Q[0],C.d7);4z(2Q[1z],C.aB)}if(C.pl[1z].1m){if(C.pl[1z].1m[0].1m){bQ(C.pl[1z].1m[0].1m[0])}O{bQ(C.pl[1z].1m[0])}}O{bQ(C.pl[1z])}}}};I iV(){4e=P.1k('1y');4e.3v='1i-gp';K(4e,{'W':'1x%','S':'1e','Q':C.1N,'1a':C.1N,'1p':'#'+1B(C.fM),'3c':3});1S.c.1b(4e);C.9l.R('|')==-1?C.9l=C.9l+'|'+C.9l:'';dm=1o 5f({w:C.sw-C.1N*2,h:'20',o:0,5j:C.9l,7v:C.iL,7x:C.iI});4e.1b(dm.c);ck=P.1k('1y');4e.1b(ck);K(ck,{'S':'1e','Q':0,'1a':0,\"j6\":(C.d3+C.iH),\"qJ\":(C.d3+5),\"qK\":(C.d3*1.3),\"aO\":C.g5,\"9b\":C.aj,\"iD\":gS(C.a4),\"gc\":dL(C.a4)});8P=P.1k('1y');4e.1b(8P);K(8P,{'S':'1e','Q':0,'9k':0,\"j6\":5,\"qM\":10,\"1A\":\"1L\",\"1p\":\"#\"+C.fM});8P.2h='x';8P.2g=jf;4e.Y.1E='1D';l0(4e)}I jm(){if(C.1l==1){1l=1i.P.1k('1y');1l.3v='1i-1l';1i.P.1S.1b(1l);K(1l,{'S':'1e','Q':0,'1a':0,\"4l\":\"42\",\"1p\":\"#\"+1B(C.iF),\"4h\":C.ip/2,\"aO\":C.iG,\"9b\":C.iM,\"gc\":dL(C.a4),\"1N\":\"qL\",\"jn\":\"95\"});1l.Y.3c=9;5q(1l,C.iq)}}I iU(){if(C.3P!=2u&&C.3P!=''&&C.8v==1){if(C.9p==1){iE(C.3P);C.da==1&&C.cn==0?3t(5y):''}O{6s(C.3P,U)}}};I iO(fW){J 8Z=B;1i.2Y=P.1k('2Y');K(1i.2Y,{'W':'1x%','1j':'1x%','6j':'1D'});1i.2Y.e4=I(){1i.1s=1i.2Y.qF;1i.P=1i.2Y.j5;if(fW){fW.3Q(8Z)}};C.29.1b(1i.2Y)};I j8(){8C=P.1k('1y');8C.3v='1i-qE-qz-qy';K(8C,{1E:'1D','z-im':'mg',S:'1e',Q:'5J',1a:'5J',W:'1x%',1j:'1x%',});1S.c.1b(8C)};I jp(){iO(I(){iS();gZ();iT();fu();if(C.1v){if(C.1v&&C.hd){hK()}};iV();iU();j8();iu();bv();4o();kg();ht();jm();if(bS!=''){6s(bS,1g)}qD=6i(kY,1x)})}J g8=U;I 7n(){if(!g8&&3x.7n){g8=1g;5z(I(){3x.7n.3Q(8Z,8Z)},50)}}I qC(){C.29.2h='';K(C.29,{'jn':'1','jW':'1a','6I':(C.9t==1?'9t':'#'+1B(C.5s)),'3z-aA':'1a','-az-6o-5u':'-az-1D','-o-6o-5u':'1D','-jo-6o-5u':'1D','-6Z-6o-5u':'1D','6o-5u':'1D','7Z':'42'});jp()}I pO(){J ji={pN:\"1g\",pM:\"pP\"};3x.1v.2C(\"|\",\"or\");1o pQ.pS(C.nz,C.id,C.sw,C.sh,\"10.0.0\",U,3x,ji);7n()}I bx(){if(!3x.id){M}jc();C=1o lt();C.7f=3x.7f;C.cr.he(\"pR+pL=\")}J 1S;J 6F;J 4e;J 1l;I gR(){if(C.3P!=2u&&C.3P!=''&&C.8v==1){if(C.9p==1){iv((C.5A==1?'<5A>':'')+C.3P+(C.5A==1?'</5A>':''))}O{6s((C.5A==1?'<5A>':'')+C.3P+(C.5A==1?'</5A>':''),U)}}O{3t(4e)}}I jc(){7u=em.ek.oh();if(7u.R(\"bH\")>0||7u.R(\"pK\")>0){bH=1g;4K=1g}O{if(7u.R(\"6Z\")>-1){iN=1g}if(7u.R(\"fT\")>-1){fT=1g}if(7u.R(\"cK\")>-1){cK=1g;4K=1g}if(7u.R(\"cL\")>-1){cL=1g}if(7u.R(\"bq\")>-1){bq=1g}}if(em.jd){if(em.jd.R(\"pE\")>-1){jh=1g}}dA=!!P.1k('1W').7s;dA?dA=!!P.1k('5X').pD:''}I 6s(1F,x){if(4e){5w(4e);ck.2h=1F;K(dm.1W,{'1j':ck.2o,'W':(C.sw-C.1N*2)});if(x){5w(8P)}O{3t(8P)}}O{gp('1c iz: '+1F)}}I jf(){3t(4e)}I iE(1F){5y=P.1k('1y');K(5y,{'W':'1x%','S':'1e','Q':5+C.iX+C.1N,'1a':5+C.iR+C.1N,'1p':'#'+1B(C.iQ)});1S.c.1b(5y);8n=P.1k('1y');5y.1b(8n);K(8n,{'S':'1e','Q':0,'1a':0,'1N':C.fX/2+'px '+C.fX+'px',\"aO\":C.g5,\"9b\":C.aj+'px',\"iD\":gS(C.a4),\"gc\":dL(C.a4),'3c':2});8n.2h=(C.5A==1?'<5A>':'')+1F+(C.5A==1?'</5A>':'');J gd=1o 5f({w:8n.1Y,h:8n.2o,o:C.iP/2,5j:C.g4+'|'+C.g4,7v:C.ga,7x:C.ga});5y.1b(gd.c);K(gd.1W,{'3c':1})};I iv(1F){8n.2h=1F};I iu(1F){if(C.3h!=''){3h=P.1k('h1');3h.4E=C.3h;3h.e4=bn;1S.c.1b(3h);4z(3h,C.fV);if(C.g2!=''){3h.2U=I(e){4z(3h,1)};3h.2S=I(e){4z(3h,C.fV)};3h.2g=I(e){1s.9s(C.g2,C.j1)}};bn()}};I bn(){if(C.ax==1){K(3h,{'S':'1e','Q':C.at,'1a':C.aC})}if(C.ax==2){K(3h,{'S':'1e','Q':C.at,'9k':C.aC})}if(C.ax==3){K(3h,{'S':'1e','3f':(C.at+(C.4I==0?C.1J:0)),'1a':C.aC})}if(C.ax==4){K(3h,{'S':'1e','3f':(C.at+(C.4I==0?C.1J:0)),'9k':C.aC})}}I ht(){1i.P.1S.4g(\"pF\",kB);I iA(2D){if(dY){gG=gD-(2D.d4+2D.hb);if(gG!=0){e7();if(C.9G==1||(21&&C.9H==1)){4Z(6k);6k=6i(c6,eL)}}}gD=2D.d4+2D.hb};1S.c.9V=iA;1S.c.9I=I pG(e){2b?1q['44']=U:'';2L?2r['44']=U:''};1S.c.2U=I pJ(2D){dQ=1g;C.da==1?5w(5y):''};1S.c.2S=I pI(2D){dQ=U;C.da==1&&((C.cn==1&&36)||C.cn==0)?3t(5y):''};J gA='1c iz<br>0.5.23';if(gA!='pH'){1S.c.pT=I pU(e){if(!e)J e=1s.2D;e.q7=1g;if(e.kx)e.kx();if(5r){K(5r,{\"1E\":\"3b\",\"S\":\"1e\",\"Q\":e.8G,\"1a\":e.6d})}O{5r=P.1k('1y');5r.id=\"5r\";1i.P.1S.1b(5r);J gz=P.1k('1y');5r.1b(gz);gz.2h=gA;K(5r,{\"4h\":\"5J\",\"1A\":\"1L\",\"S\":\"1e\",\"Q\":e.8G,\"1a\":e.6d,\"6I\":\"#8d\",\"1p\":\"#7y\",\"q6\":\"8N\",\"jl\":\"#3F\",\"q5\":\"6c\",\"1N\":\"7o 6v hG 6v\",\"4R\":\"q8 mh\",\"1w\":\"1\"});5r.Y.3c=n8}5z(I(){1i.P.5N(\"5r\").Y.1E=\"1D\"},7F);M U}}P.4g(\"kA\",kz)}I kz(e){if(5r){3t(5r)}}I kB(2D){J 5O=2D.q9;if(5O==2u){5O=2D.5O}if(21&&5O==27){7S()}if(5O==38){if(1f){2D.dS();(1f.2v+0.1)<1?1f.2v+=0.1:1f.2v=1}}if(5O==40){if(1f){2D.dS();(1f.2v-0.1)>0?1f.2v-=0.1:1f.2v=0}}if(5O==39){if(1f&&5m()>0){J t=2P.w/5m();if(4v.1Y+t*C.cg<2P.w){5Z(4v.1Y+t*C.cg)}O{5Z(2P.w)}}}if(5O==37){if(1f&&5m()>0){J t=2P.w/5m();if(4v.1Y-t*C.cg>0){5Z(4v.1Y-t*C.cg)}O{5Z(0)}}}if(5O==68){b6()}if(5O==70){!21?8f():7S()}if(C.je==1&&5O==32){2D.dS();4a()}}I qa(t,i){}J 8T;J 9d;J 8X;J 8Y;J 6H;J 6L;J 1f;J 2V;J ep;I ff(){if(1f){if(1i.62()){1i.62().aW()}if(ep){4Z(ep);1f.7K('2B',6Q,U);1f.7K('4T',7r,U);1f.7K('kJ',cj,U);1f.7K('k0',i6,U)}or=[];8R=0;if(3o()){2V.jZ();eh 2V;J 2T=1i.P.5N('fx'+C.7f);2T.4w.5t(2T);C.4O=U;C.cI=U;!21&&3j?5w(3j):''}O{1f.4T();1f.4E='';6H.5t(1f)}eh 1f;1f=2u;C.6r=1o 3V();if(2L){K(4v,{'W':'0'});K(6p,{'W':'0'})}e0=U;6E=U;36=U;q4=0}}I bv(){1c.3J('bv');ff();C.cr.he(\"q3=\");if(C.1v.R('4O.gh/')>-1||C.1v.R('kV.be/')>-1){C.cw=C.1v.2I(/(kV.be\\/|v\\/|pW\\/|pV\\?|4O.gh\\/6o\\/[^#]*#([^\\/]*?\\/)*)\\??v?=?([^#\\&\\?]*)/)[3];if(C.cw.1d==11){C.4O=1g}}if(C.4O){if(jT()){bB()}O{1i.1s.pY=I(){bB()};J gn=P.1k('pZ');gn.4E=\"4n://q1.4O.gh/q0\";1S.c.1b(gn)}C.fF=1g}O{if(C.fF&&1G){C.hd='';C.5R=C.hd.2I(',');C.6h=1U;8I()}1f=1i.kR().1t;1f.4g('kJ',cj);1f.4g('2B',6Q);1f.4g('4T',7r);1f.3X(\"qN\",6Q);1i.62().av.hf(dg);6H.1b(1f);K(6H,{'W':C.sw-(!21?C.1N*2:0)+'px'});1f.3X('W','1x%');1f.3X('1j',(!21?C.ph:C.sh)-(!21?C.1N*2:0)-(C.4I==1?C.1J:0)+'px');1f.3X('x-6Z-ko','qO');1f.3X('6Z-rF','1');1f.1n=U;K(1f,{'S':'1e','Q':0,'1a':0});if(C.G==\"W\"){K(1f,{'5W-kH':'gq'})}if(C.G==\"rE\"){K(1f,{'5W-kH':'1X'})}if(C.m=='9h'){K(1f,{'W':'5J','1j':'5J'})}if(6w.ns&&C.3O==\"cJ\"){C.3O=\"1D\"}if(C.3O==\"1D\"||C.a6==1){if(C.a6==1&&C.nD==1&&C.1v){if(C.1v.R('?')>0){C.1v=C.1v+'&'+9e(1,1x)}O{C.1v=C.1v+'?'+9e(1,1x)}}}O{1f.rG='3O'}if(C.3O!='1D'){hY()}if(C.3O=='2B'){1i.62().2B()}5z(cS,1x)}if(C.aP!=''){C.aP=5S(C.aP);K(6F.c,{'W':C.sw,'1j':C.sh,'2y':'2q('+C.aP+') no-c9 6x 6x','2y-dc':'gq'})}if(C.3d!=''){I kG(){if(C.m=='9h'){M 1g}if(C.nC==1){M 1g}if(C.4O){if(6w.ed==U){M 1g}}O{if(6w.nA==U){M 1g}}M U}if(kG()){if(!6L){6L=P.1k('1y');6L.3v='1i-3d';6F.c.1b(6L)}C.3d=5S(C.3d);K(6L,{'S':'1e','1a':0,'Q':0,'W':C.sw,'1j':C.ph-C.1N*2-(C.4I==1?C.1J:0),'2y':'2q('+C.3d+') no-c9 6x 6x','2y-dc':'gq'})}O{if(1f){1f.3X('3d',C.3d)}21&&1m?bN():''}}if(C.m=='5X'&&4K&&1f){1f.jP=kL}if(!3j){fh();3o()?3t(3j):''}}I kL(){if(!5e){J 6f=C.9G==1&&C.4I==0;J 9r=21&&C.9H==1;if(6f||9r){e7();4Z(6k);6k=6i(c6,eL)}}}I fh(){if(!5e){if(3j){ce('3j')}3j=P.1k('1y');3j.3X('id','3j');1S.c.1b(3j);K(3j,{'W':'1x%','1j':'1x%','S':'1e','Q':0,'1a':0,'3c':2});if(C.m=='5X'){3j.2g=4a}3j.Y.3c=2;4e.Y.3c=3;5y?5y.Y.3c=4:'';1n?1n.Y.3c=5:'';3h?3h.Y.3c=6:''}}I kg(){if(C.o>0){oo=P.1k('1y');8T=P.1k('1W');J 2z=1;J H=8T.7s(\"2d\");if(H.fD<2){J 2z=1s.fC||1}8T.1j=C.o*2z;8T.W=C.o*2z;H.5G='#'+1B(C.5s);H.1K();H.G(2z,2z);H.1r(0,0);H.L(C.o/2,0);H.5i(0,0,0,C.o/2);H.1O();H.1X();oo.1b(8T);9d=P.1k('1W');J H=9d.7s(\"2d\");9d.1j=C.o*2z;9d.W=C.o*2z;H.5G='#'+1B(C.5s);H.1K();H.G(2z,2z);H.1r(0,0);H.5i(C.o/2,0,C.o/2,C.o/2);H.L(C.o/2,0);H.1O();H.1X();oo.1b(9d);8Y=P.1k('1W');J H=8Y.7s(\"2d\");8Y.1j=C.o*2z;8Y.W=C.o*2z;H.5G='#'+1B(C.5s);H.1K();H.G(2z,2z);H.1r(C.o/2,0);H.5i(C.o/2,C.o/2,0,C.o/2);H.L(C.o/2,C.o/2);H.1O();H.1X();oo.1b(8Y);8X=P.1k('1W');J H=8X.7s(\"2d\");8X.1j=C.o*2z;8X.W=C.o*2z;H.5G='#'+1B(C.5s);H.1K();H.G(2z,2z);H.1r(0,0);H.5i(0,C.o/2,C.o/2,C.o/2);H.L(0,C.o/2);H.1O();H.1X();oo.1b(8X);1S.c.1b(oo);K(oo,{'z-im':7,'S':'1e','Q':0,'1a':0,'1L-6r':'1D','1j':'3O','7Z':'42','W':'1x%','1j':'1x%'});oo.Y.3c=7;hw()}}I hw(){K(8T,{'S':'1e','Q':0,'1a':0,'W':C.o+'px','1j':C.o+'px'});K(9d,{'S':'1e','Q':0,'1a':1V.26(C.sw-C.o/2),'W':C.o+'px','1j':C.o+'px'});K(8Y,{'S':'1e','Q':1V.26(C.sh-C.o/2),'1a':1V.26(C.sw-C.o/2),'W':C.o+'px','1j':C.o+'px'});K(8X,{'S':'1e','Q':1V.26(C.sh-C.o/2),'1a':0,'W':C.o+'px','1j':C.o+'px'})}I hY(){if(C.1v!=''){if(C.1v.R(' or ')>-1){C.or=C.1v.2I(' or ');1u(J i=0;i<C.or.1d;i++){if(C.or[i].R(\" fe \")>-1){J eW=C.or[i].2I(\" fe \");C.or[i]=eW[9e(0,eW.1d-1)]}}C.8R=0;C.1v=C.or[0]}}1i.62().hi(C.1v)}I bV(){1m=P.1k('1y');1m.3v='1i-1m';2H=P.1k('1y');1m.1b(2H);pl=1o 3V();2Q=1o 3V();5a=1o 3V();9z=1o 3V();5Q=1o 3V();J bG=0;1u(i=0;i<C.pl.1d;i++){pl[i]=P.1k('1y');2H.1b(pl[i]);K(pl[i],{'1A':'1L','1p':'#'+1B(C.g1),'W':C.7G,'1j':C.4Q});if(C.1I=='3G'||C.1I=='3f'){K(pl[i],{'S':'1e','Q':(C.4Q*C.9U),'1a':(C.7G*i+C.7J*i-C.7G*bG)});if(C.g3>0){if(i%C.g3==0){C.pl[i]['jR']=1}}if(C.pl[i]['jR']==1){C.9U++;bG=i+1}}if(C.1I=='6l'){K(pl[i],{'S':'1e','Q':(C.4Q*i+C.7J*i),'1a':0,'W':C.sw-C.7J*2})}2H.1b(pl[i]);2Q[i]=P.1k('1y');pl[i].1b(2Q[i]);K(2Q[i],{'1j':C.4Q,'4h':(C.o>0?4:0)});4z(2Q[i],C.d7);5q(2Q[i],C.cy);if(C.1I=='3G'||C.1I=='3f'){K(2Q[i],{'W':C.7G})}if(C.1I=='jQ'){K(2Q[i],{'W':(C.sw-C.5o*2)})}if(C.pl[i]['3d']&&C.aQ==1){2Q[i].2h=\"<h1 4E='\"+C.pl[i]['3d']+\"' W='1x%' id='rs\"+i+\"' rw='1i-1m-\"+i+\"'>\";4z(2Q[i],1)}5a[i]=P.1k('1y');pl[i].1b(5a[i]);K(5a[i],{'1N':5,'S':'1e','Q':0,'1a':0,'aO':C.nw,'9b':C.nr});if(C.1I=='jQ'){K(5a[i],{'1j':C.4Q})}if(C.pl[i]['3P']){5a[i].2h=C.pl[i].3P}O{3t(5a[i])}if(C.pl[i]['3d']&&C.aQ==1){5q(5a[i],C.cy);K(2Q[i],{'2y':'1D'});i>0?3t(5a[i]):''}pl[i].3v='1i-1m-'+i;2Q[i].3v='1i-1m-'+i+'rA';5a[i].3v='1i-1m-'+i+'rz';if(4K){pl[i].2g=fy}O{pl[i].2U=k9;pl[i].2S=k8;pl[i].2g=fy}9z[i]=U;5Q[i]=i}if(4K){2H.jP=jO;2H.rK=jx;2H.rL=jw}1S.c.1b(1m);if(C.1I=='3G'||C.1I=='3f'){K(1m,{'S':'1e','W':(C.sw-C.5o*2),'1j':C.4Q*(C.9U+1)+10,'7Z':'42'});C.1I=='3f'?K(2H,{'S':'1e','Q':0,'1a':0}):K(2H,{'S':'1e','Q':10,'1a':10});5v=(C.pl.1d-bG)*C.7G+(C.pl.1d-bG-1)*C.7J;7l=C.4Q*(C.9U+1)+10}if(C.1I=='6l'){K(1m,{'S':'1e','W':(C.sw-C.5o*2),'1j':C.d6-C.7J-C.1N*2,'7Z':'42'});K(2H,{'S':'1e','Q':0,'1a':0});5v=C.sw-C.5o*2;7l=C.pl.1d*C.4Q+(C.pl.1d-1)*C.7J}1z=0;if(C.ah!=2u){K(2Q[1z],{\"2y-1p\":'#'+C.ah})}if(C.ag!=2u){K(pl[1z],{\"1p\":'#'+C.ag})}4z(2Q[1z],C.aB);1m.Y.3c=6;dI();if(C.1I==\"3G\"&&C.nv==0){dO(1m)}}I kj(){if(1m){C.1I=='3G'?dO(1m):''}O{bV()}}I f1(){if(1m){1m.5t(2H);1S.c.5t(1m)}}I dI(){if(C.1I=='3G'){K(1m,{'W':(C.sw-C.5o*2)});K(1m,{'Q':((21?C.sh:C.5Y)-C.4Q-C.1J-10)-C.4Q*C.9U,'1a':C.5o});if(2H.4u<-5v+1m.1Y){K(2H,{'S':'1e','Q':10,'1a':(-5v+1m.1Y)})}if(5v<=(C.sw-C.5o*2)){K(2H,{'S':'1e','Q':10,'1a':0})}if(1z!==1U){}}if(!21){if(C.1I=='6l'){K(1m,{'W':(C.sw-C.5o*2)});K(1m,{'S':'1e','Q':(C.ph+(C.4I==1?C.1J:0)+10+C.nx),'1a':C.5o});if(1z!==1U){eI(1z)}}if(C.1I=='3f'){K(1m,{'W':(C.sw-C.5o*2)});K(1m,{'S':'1e','Q':(C.ph+10),'1a':C.5o});if(1z!==1U){eI(1z)}}}}J fq;J fo;J bJ;J bF;J 9A;I jO(e){bJ=fq=e.9E[0].6d;bF=fo=e.9E[0].8G}I jx(e){J dx=e.9E[0].6d-bJ;J dy=e.9E[0].8G-bF;bJ=e.9E[0].6d;bF=e.9E[0].8G;if(C.1I=='3G'||C.1I=='3f'){J 2f=2H.4u+dx;if(2f<0&&2f>(-5v+1m.1Y)){K(2H,{'S':'1e','Q':(C.1I=='3f'?0:10),'1a':2f})}}if(C.1I=='6l'){J 2f=2H.5n+dy;if(2f<0&&2f>-7l+1m.2o-10){K(2H,{'S':'1e','Q':2f,'1a':0})}}e.dS()}I rV(e){9A=bC(e.4J)}I jw(e){J dx=bJ-fq;J dy=bF-fo;if(dx==0&&dy==0){if(9A!==1U&&9A!==2u){7b();1z=9A;bT();9A=1U}}O{jD(dx,dy)}}I bC(1t){M 1t.3v.2C('1i-1m-','').2I('of')[0]}I jD(dx,dy){if(C.1I=='3G'||C.1I=='3f'){J 2f=2H.4u+dx;2f>0?2f=0:'';2f<-5v+1m.1Y?2f=-5v+1m.1Y:'';4Z(6D);9X=2f;6D=6i(bb,20)}if(C.1I=='6l'){J 2f=2H.5n+dy;2f>0?2f=0:'';2f<-7l+1m.2o-10?2f=-7l+1m.2o-10:'';4Z(6D);9X=2f;6D=6i(bb,20)}}I k9(e){J 4d=bC(e.4J);4z(2Q[4d],1);eI(4d);if(C.pl[4d]['3d']&&C.pl[4d]['3P']){5w(5a[4d])}}I k8(e){J 4d=bC(e.4J);if(C.pl[4d]['3d']&&C.aQ==1){if(1z!=4d){3t(5a[4d]);4z(2Q[4d],(9z[4d]?0.5:1))}}O{if(1z!=4d){4z(2Q[4d],(9z[4d]?C.fY:C.d7))}O{4z(2Q[4d],C.aB)}}}I fy(e){if(1z!==1U&&1z!==2u){7b()}1z=bC(e.4J);bT()}I bT(){eK.bP(\"bT \"+1z+' '+C.pl.1d);if(C.pl[1z].1m){8p()}O{8p();C.1I==\"3G\"?3t(1m):'';if(!36){7R=1g;4a()}}dJ()}I bl(){if(1z<(pl.1d-1)){dn()}}I dn(){if(C.7t==1){if(5Q.1d>1){if(1z!==1U){7b()}1z=5Q[9e(0,5Q.1d-1)];8p();2e('7k')}O{dr();2G?K(2G.c,{'1w':1,'3e':'2F(1w=1x)','1A':'1L'}):''}}O{if(1z<(pl.1d-1)){if(1z!==1U){7b()}1z++;8p();2e('7k')}O{dr()}}dJ();!36?6Q():''}I dJ(){if(C.7t==0){if(1z==0){2G?K(2G.c,{'1w':0.3,'3e':'2F(1w=30)','1A':'5L'}):''}O{2G?K(2G.c,{'1w':1,'3e':'2F(1w=1x)','1A':'1L'}):''}if(1z==pl.1d-1){34?K(34.c,{'1w':0.3,'3e':'2F(1w=30)','1A':'5L'}):''}O{34?K(34.c,{'1w':1,'3e':'2F(1w=1x)','1A':'1L'}):''}}}I e2(){kf()}I kf(){if(C.7t==1){if(5Q.1d>1){if(1z!==1U){7b()}1z=5Q[9e(0,5Q.1d-1)];8p();2e('7D')}O{dr()}}O{if(1z>0){if(1z!==1U){7b()}1z--;8p();2e('7D');1z==0&&2G?K(2G.c,{'1w':0.3,'3e':'2F(1w=30)','1A':'5L'}):''}O{}}dJ()}I dr(){if(C.nu==1){hB()}O{if(C.7t==1){1u(p=0;p<pl.1d;p++){5Q[p]=p}dn()}O{7b();1z=0;8p();2e('7k')}}}I 7b(){if(C.pl[1z]['3d']&&C.aQ==1){3t(5a[1z]);4z(2Q[1z],0.5)}O{if(C.ah!=2u){K(2Q[1z],{\"2y-1p\":'#'+C.cy})}if(C.ag!=2u){K(pl[1z],{\"1p\":'#'+C.g1})}4z(2Q[1z],C.fY)}9z[1z]=1g;J f7=5Q.R(1z);if(f7!=-1)5Q.ez(f7,1)}I 8p(){if(C.pl[1z].1m){if(C.pl[1z].1m!=\"6t\"){C.9T.4k(C.pl);J k5=C.pl[1z].1m;C.pl=[{\"3P\":\"←\",\"1m\":\"6t\"}];C.pl=C.pl.kT(k5)}O{C.pl=C.9T[C.9T.1d-1];C.9T.ez(C.9T.1d-1,1)}f1();bV();C.1I==\"3G\"?5w(1m):''}O{f3();bQ(C.pl[1z]);hK();if(1i.2R()){1i.2R().rN()}8V(C.1v,1g);if(C.ah!=2u){K(2Q[1z],{\"2y-1p\":'#'+C.ah})}if(C.ag!=2u){K(pl[1z],{\"1p\":'#'+C.ag})}4z(2Q[1z],C.aB)}}I bQ(3I){1u(J V in 3I){if(3I[V].R('#')==0){3I[V]=un(3I[V])}if(V=='3d'&&C['3d']==2u){C['3d']=3I['3d']}O{C[V]=3I[V]}if(V=='jX'){C['3d']=3I['jX']}}}I eI(4d){if(C.1I==\"3G\"||C.1I==\"3f\"){if(5v>(C.sw-C.5o*2)){f2(4d)}}if(C.1I==\"6l\"){if(7l>C.d6){f2(4d)}}}J 6D;J 9X;I f2(i){4Z(6D);if(C.1I=='3G'||C.1I=='3f'){J 2f=-pl[i].4u+1m.1Y/2-C.7G/2;if(2f>0||5v<C.sw){2f=10}if(2f<0&&2f<-5v+1m.1Y-10){2f=-5v+1m.1Y-10}9X=2f;6D=6i(bb,20)}if(C.1I=='6l'){J 2f=-pl[i].5n+1m.2o/2-C.4Q/2;if(2f>0){2f=10}if(2f<-7l+1m.2o-10){2f=-7l+1m.2o-10}9X=2f;6D=6i(bb,20)}}I bb(){J 2f=9X;if(C.1I=='3G'||C.1I=='3f'){if(1V.kq((2H.4u-2f)/10)<=1){4Z(6D)}O{K(2H,{'S':'1e','Q':(C.1I=='3f'?0:10),'1a':2H.4u-(2H.4u-2f)/10})}}if(C.1I=='6l'){if(1V.kq((2H.5n-2f)/10)<=1){4Z(6D)}O{K(2H,{'S':'1e','Q':2H.5n-(2H.5n-2f)/10,'1a':0})}}}I f3(){if(1M){dw();1M=1U}}I 8V(s,8U){1c.3J('8V s='+s+' 8U='+8U);36=U;eU=U;C.1v=s;if(8U){C.3O='2B'}bv();gR();if(8U){6Q()}}I cS(){if(1f){if(1c.6w.nB==U||!C.1v||C.1v==''||C.3O!='2B'){7n()}if(1f.r1>0||C.4O){6E=1g;K(1f,{'1w':1,'3e':'2F(1w=1x)'});4z(1f,1);ep=6i(kZ,1x);1f.4g('4T',7r,U);1f.4g('jM',jN,U);1f.4g('jL',jK,U);1f.4g('k0',i6,U);I dN(){if(P.ds){P.ds}O if(P.hQ){P.hQ}O if(P.hR){P.hR}}I b8(){}P.4g(\"r0\",I(){!P.ds&&21&&!bq?7S():'';b8()},U);P.4g(\"qZ\",I(){!P.hR&&21?7S():'';b8()},U);P.4g(\"r2\",I(){!P.hQ&&21?7S():'';b8()},U);P.4g(\"r3\",I(){(P.r5!=2u)&&21?7S():'';b8()},U);4V||v==0?6P(0):(v>0?6P(-v):'');if(!hV){2e(\"6E\");hV=1g}}O{5z(cS,1x)}}}I 8l(){36=U;4a()}I af(){36=1g;4a()}I 4a(e){J 4X=U;if(1i.2R()){1i.2R().jG()?4X=1g:''}if(!4X){1c.3J(\"4a e=\"+e);if(C.3O=='1D'&&!C.4O){1f.8U=1g;hY();7R=1g}C.3O='2B';if(!C.1v||C.1v==''){2e('kF','qY')}7R=1g;if(!36){if(3o()){2V.jy();6Q()}O{1i.62().2B();6Q()}}O{if(3o()){2V.ju();7r()}O{1i.62().4T();7r()}}}}I jk(m){if(33[m.2p(11)]){J b9=33[m.2p(11)].s.5p;if(b9.R('4n')==0){cU(b9,(33[m.2p(11)].s.4J?33[m.2p(11)].s.4J:\"jV\"))}O{if(b9=='qX'){4a()}}2e('qR',b9)}}I cU(l,t){if(l){l=l.2C('(g0)',bj(C.g0));l=l.2C('(5p)',bj(C.5p));l=l.2C('(1v)',bj(C.1v));l=l.2C('(ha)',bj(C.ha));l=l.2C('(3P)',bj(C.3P));l=l.2C('(4L)',3N());if(l.2p(0,3)=='js:'){J 7B=l.2p(3).2I(',');eq(7B[0]+'('+(7B.1d>1?7B[1]:'')+(7B.1d>2?','+7B[2]:'')+(7B.1d>3?','+7B[3]:'')+');')}if(l.R('4n://')==0){1s.9s(l,t)}}}I 6O(){1c.3J('6O');if(36){4a();7r()}C.a6==0?5Z(0):'';4P?4P.c.2h=9M(0):'';C.3O='1D';if(3o()){2V.jZ()}bv();2e('4X');2L&&4c?8m(4c,2L,4v,2P,cp):'';1M?bf():''}I 8M(){36?4a():'';J jU=C.4i!=1&&C.4i!=''?C.4i:(1i.62()?1i.62().a1[0]:(C.1v.R(\"|\")>0?C.1v.2p(0,C.1v.R(\"|\")):C.1v));1s.9s(jU,\"jV\");2e('4i')}I cu(){if(1G){if(C.8K){C.3y=1f.7d;J dB=C.1v;8V(C.8K,1g);C.8K=dB;if(3s.c.Y.1E=='1D'){3t(1G.c);5w(3s.c);2e('6h','1')}O{3t(3s.c);5w(1G.c);2e('6h','0')}}}}I hK(){if(C.4O){}O{if(C.hd&&C.1v){if(C.hd.R('::')>0){C.8K=C.1v.2C(C.hd.2I('::')[0],C.hd.2I('::')[1]);J dC=U;if(3s){if(3s.c.Y.1E=='3b'){dC=1g}}O{if(C.6n==1){dC=1g}}if(dC){J dB=C.1v;C.1v=C.8K;C.8K=dB}}if(C.1v.R(\",\")>-1&&C.1v.R('[')==-1){C.1v='['+C.1v+']'}if(C.1v.R('[')>-1&&C.1v.R(']')>-1){J bp=C.1v.2p(C.1v.R('[')+1,C.1v.R(']')-C.1v.R('[')-1).2I(C.iC);J dE='';1u(h=0;h<bp.1d;h++){dE+=bp[h]!=''?C.1v.2p(0,C.1v.R('['))+bp[h]+C.1v.2p(C.1v.R(']')+1):'';h<bp.1d-1?dE+=',':''}C.5I=dE.2I(',');8I();if(3B){C.1v=3B.1P}O{1u(h=0;h<C.5I.1d;h++){if(C.5I[h]!=''){C.1v=C.5I[h];8a}}}}}}}I 8I(){if(1G){if(3B&&C.5I){J 3y=0;J a2=[];3B.2h='';C.6n==1?C.6h=C.5R[C.5R.1d-1]:'';1u(h=0;h<C.5R.1d;h++){if(C.5I[h]){if(C.5I[h]!=''){a2[h]=P.1k('hD');a2[h].1P=C.5I[h];a2[h].2h=C.5R[h];3B.1b(a2[h]);if(C.5R[h]==C.6h){3y=h;a2[h].3X(\"iW\",\"1g\");io(U)}}}}gm(3B.2m[3y].3z,1G)}}}I kl(){io(1g)}I io(dG){if(1G&&C.5I){if(C.4O){dG?C.3y=2V.kW():'';3o()?2V.qP(3B.1P):''}O{dG?C.3y=1f.7d:'';C.1v=3B.1P;8V(3B.1P,(4K?U:dG))}gm(3B.2m[3B.ee].3z,1G);C.6h=3B.2m[3B.ee].3z;2e('6h',C.6h)}}I 8f(re){if(!21||re=='re'){if(5e){if(!1f.1n){K(1n,{'4l':'42'});1f.1n=1g;ce('3j');6H.2g=1U}}O{if(C.nG==1&&1c.8i.mf(C.29)){ch=1g}1c.8i.m3(C.29);if(C.2Y!=''&&!ch){K(1s.2O.P.5N(C.2Y),{'W':1s.2O.cV,'1j':1s.2O.6G,'S':'ik','1a':0,'Q':0})}if(re!='re'){21=1g;C.7H=C.sw;C.5Y=C.sh;K(1S.1W,{'4l':'42','1j':(C.2Y!=''?1s.2O.6G:1s.6G)});5z(I(){K(1S.1W,{'4l':'42','1j':(C.2Y!=''?1s.2O.6G:1s.6G)})},bI);5z(I(){K(1S.1W,{'4l':'42','1j':(C.2Y!=''?1s.2O.6G:1s.6G)})},qS);K(6F.1W,{'4l':'42'});K(6H,{'6I':'#8d','S':'ik','1a':0,'Q':0})}8e.c.Y.1E='1D';c4.c.Y.1E='3b';if(C.cb=''&&C.29.Y.S){C.cb=C.29.Y.S}C.fO=C.29.Y.1a;C.fN=C.29.Y.Q;C.ia=C.29.Y['4r-Q'];K(C.29,{'W':'1x%','1j':'1x%','4r-Q':'5J','S':'ik','1a':'5J','Q':'5J','z-im':'qT','7Z':'42'});3j!=2u?3j.Y.1E='1D':'';oo?oo.Y.1E='1D':'';4Z(6k);6k=6i(c6,eL);if(re!='re'){2e('ds')}if(1l){if(1l.4w){1l.4w.5t(1l)}}}}O{7S()}5z(gT,1x);if(1m){K(1m,{'Q':-7F})}3h?bn():'';1M||41?5z(5g,bI):''}I 7S(){if(P.kd){P.kd()}O if(P.ke){P.ke()}O if(P.kb){P.kb()}O if(P.ka){P.ka()}O if(P.k6){P.k6()}O if(P.k7){P.k7()}21=U;if(C.2Y!=''&&!ch){K(1s.2O.P.5N(C.2Y),{'W':C.7H,'1j':C.5Y,'4r-Q':C.ia,'S':'jC','1a':0,'Q':0})}K(6H,{'6I':'9t','S':'1e','1a':0,'Q':0});K(C.29,{'W':C.7H,'1j':C.5Y,'4r-Q':C.ia,'S':(C.cb==''?'jC':C.cb),'1a':C.fO,'Q':C.fN});K(1S.1W,{'4l':'8y','1j':C.5Y});K(6F.1W,{'4l':'8y'});if(!3o()&&3j!=2u){3j.Y.1E='3b'}if(oo){oo.Y.1E='3b'}8e.c.Y.1E='3b';c4.c.Y.1E='1D';if(1m){dI()}3h?bn():'';1M||41?5z(5g,bI):'';if(1l){if(1l.4w){1l.4w.5t(1l)}}2e('r7')}J 4C;I cs(){if(4C){dO(4C)}O{4C=P.1k('1y');J 6J=C.6S<rk?C.6S-30:rj;J 8A=(C.4i!=''&&C.4i!=0?45:0)+(C.jj==1?0:45)+(C.5p!=''?45:0)+11;C.g6=6J;C.g7=8A;J h5=1o 5f({w:6J,h:8A,o:10,5j:'3F|3F',7v:0.5,7x:0.5});4C.1b(h5.c);K(h5.c,{'S':'jF','Q':'0','1a':'0'});if(C.4i!=''&&C.4i!=0){dP(\"fS\",(C.4i==1?C.1v:C.4i),6J,8A)}if(C.5p!=''){dP(\"fR\",C.5p,6J,8A)}K(4C,{'1p':'#3R','4R':'9m bM'});4C.Y.3c=6;dP(\"fL\",(C.fU!=''?'<2Y 7e=\"rm\" W=\"'+C.w+'\" 1j=\"'+C.h+'\" 4E=\"'+C.fU+'\" rn=\"0\" rp></2Y>':C.fK!=''?C.fK:''),6J,8A);J bo=P.1k('1y');bo.2h='&jB; x &jB;';4C.1b(bo);K(bo,{'S':'1e','Q':3,'1a':6J-25,'1A':'1L'});bo.2g=jv;1S.c.1b(4C);gT()}}J cv=0;I dP(fw,jA,6J,8A){J dU=P.1k('1y');dU.2h=C.2K[fw];4C.1b(dU);K(dU,{'S':'1e','Q':(5+cv*45),'1a':15});J hc=1o 5f({w:6J-20,h:23,o:5,5j:'3R'});K(hc.c,{'S':'1e','Q':(22+cv*45),'1a':10});4C.1b(hc.c);J ct=P.1k('dp');4C.1b(ct);K(ct,{'S':'1e','r8':'1D','4R':'9m bM','Q':(25+cv*45),'1a':13,'W':6J-28,'1j':15,'1p':'#3F','6j':0,'2y':'1D'});ct.1P=jA;ct.2g=I(){B.5u()};cv++}I jv(){if(4C){K(4C,{'1E':'1D'})}}I gT(){if(4C){K(4C,{'S':'1e','Q':((21?C.sh:C.5Y)-C.g7)/2,'1a':((21?C.sw:C.7H)-C.g6)/2})}}I c6(){J dM=U;if(1i.2R()){1i.2R().jG()?dM=1g:''}if((36&&3N()>0)||dM){J 6f=!dQ&&C.9G==1;J 9r=21&&C.9H==1;if(6f||9r||dM){4Z(6k);K(1n,{'4l':'42'});if(1m){K(1m,{'4l':'42'})}if(3o()){8C.Y.1E='3b'}dY=1g}}}I e7(){4Z(6k);8C.Y.1E='1D';if(!5e){K(1n,{'4l':'8y'});if(1m){K(1m,{'4l':'8y'})}dY=U}}I gZ(){C.6S=C.sw-C.1N*2;C.d2=C.ph-C.1N*2-(C.4I==1?C.1J:0)}I bN(){if(C.sw!=0&&C.sh!=0&&C.29.2o!=0&&C.29.1Y!=0){if(C.ph!=C.sh){C.ph=C.29.2o-(C.sh-C.ph)}O{C.ph=C.29.2o}C.sh=C.29.2o;C.sw=C.29.1Y;if(!21){C.7H=C.sw;C.5Y=C.sh}gZ();J nh=(!21?C.ph:C.sh)-C.1N*2-(C.4I==1?C.1J:0);if(!21){K(1S.1W,{'W':C.sw,'1j':C.sh});K(6F.1W,{'W':C.sw-C.1N*2,'1j':nh})}if(4e){K(dm.1W,{'W':''+C.sw-(21?0:C.1N*2)+'px'});if(C.1N>0){K(4e,{'Q':(21?0:C.1N),'1a':(21?0:C.1N)})}}if(6L){K(6L,{'W':C.sw,'1j':C.ph-C.1N*2-(C.4I==1?C.1J:0)})}K(6H,{'W':''+C.sw-(!21?C.1N*2:0)+'px','1j':''+nh+'px'});K(1f,{'W':''+C.sw-(!21?C.1N*2:0)+'px','1j':''+nh+'px'});if(3o()){K(1i.P.5N('fx'+C.7f),{'W':''+C.sw-(!21?C.1N*2:0)+'px','1j':''+nh+'px'})}C.o>0?hw():'';1i.1n().4t.mX();if(5B){K(5B.1W,{'W':''+(C.sw-(21?0:C.1N*2))+'px','1j':''+C.1J+'px'});9K?K(9K.1W,{'W':''+(C.sw-(21?0:C.1N*2))+'px'}):''}3M?K(3M.c,{'1a':C.sw/2-3M.w/2,'Q':(!21?C.ph:C.sh)/2-3M.h/2}):'';di();if(1m){dI()}if(1M){5g()}}}I a7(){5Z(0)}I b6(){if(3o()){if(!2V.oB()){2V.oA();4V=1g}O{2V.ox();4V=U}}O{if(1f.4V){1f.4V=U;4V=U}O{1f.4V=1g;4V=1g}}hT()}I hT(){if(3u){if(4V){3u.c.Y.1E='1D'}O{3u.c.Y.1E='3b'}}if(3E){if(4V){3E.c.Y.1E='3b'}O{3E.c.Y.1E='1D'}}}I 6Q(){1c.3J('6Q');if(!36){if(5e&&!1f.1n){K(1n,{'4l':'42'});1f.1n=1g;ce('3j');6H.2g=1U}if(6L&&C.m=='5X'){6L.Y.1E='1D'}if(3a!=2u){3a.c.Y.1E='1D';3p.c.Y.1E='3b'}36=1g;J 6f=C.9G==1&&C.4I==0;J 9r=21&&C.9H==1;if(6f||9r){4Z(6k);6k=6i(c6,eL)}if(C.3P!=2u&&C.3P!=''&&C.8v==1){C.9p==1?(C.cn==1?3t(5y):''):3t(4e)}if(C.1I==\"3G\"&&1m){3t(1m)}if(3M){3M.c.Y.1E='1D'}2e('2B');if(!eU){2e('3y');7R=1g;eU=1g}if(C.1M&&(C.3Y==1||(4K&&5e))){hN()}}}I jN(){2e('jM')}I jK(){2e('jL')}I 7r(){1c.3J('7r');if(36){if(3a!=2u){3a.c.Y.1E='3b';3p.c.Y.1E='1D'}36=U;if(C.3P!=2u&&C.3P!=''&&C.8v==1){C.9p==1?5w(5y):5w(4e)}3M?3M.c.Y.1E='3b':'';2e('4T')}}I 2e(s,kI){C.6r[s]=kI;J gV=P.oI('ht');gV.oj(s,1g,1g);C.29.os(gV)}I cj(){1c.3J('cj');if(C.3y>0){1c.3J('cj pk 7d to '+C.3y);1f.7d=C.3y;C.3y=0}7n()}I i6(){if(5l){C.8w?ab(1f.2v*1q['h']):ab(1f.2v*1q['w'])}if(4M){ab(1f.2v*C.1Q.w)}}I dg(){1c.3J('dg');if(1f.gX||3o()){2e('8F');if(C.a6==1){dX()}O{if(!3o()){a7()}if(C.nt==1&&pl){dn()}O{hB()}}}}I dX(){1c.3J('dX');6O();4a()}I kY(){if(C.29.1Y!=C.sw||C.29.2o<C.sh-5||C.29.2o>C.sh+5){bN()}}I kZ(){if(1f!=2u){kD();if(8o){J 4L=0;J 4f=0;4L=3N();4f=5m();if(3o()){K(6p,{'W':''+(2V.pe()*2P.w)+'px'})}O{if(1f.dt){if(1f.dt.1d>0){K(6p,{'W':''+(1f.dt.8F(1f.dt.1d-1)/1f.4f)*2P.w+'px'})}}}K(4v,{'W':''+(4L/4f)*2P.w+'px'});if(7O&&!e0){if(4L>0){i3();e0=1g}}if(36&&4L==il){if(dZ>5){!7O?kt():'';7O=1g}O{dZ++}}O{if(7O){7O=U;i3()}dZ=0}il=4L}if(36&&C.nK==1){if(3N()==C.gb){C.aT++;if(C.aT>1x&&1f.7d!=2u){C.aT=0;dX()}}O{C.aT=0}C.gb=3N()}if(C.8s!=0){if(36){if(eX(C.8s)){1u(i=0;i<C.8s.1d;i++){if(!C.6r['4L'+C.8s[i]]){if(3N()>C.8s[i]){2e('4L'+C.8s[i],3N())}}}}O{if(!C.6r['4L']){if(3N()>C.8s){2e('4L',3N())}}}}}if(C.7W!=0){if(36){if(eX(C.7W)){1u(i=0;i<C.7W.1d;i++){if(!C.6r['e1'+C.7W[i]]){if((3N()/5m())*1x>C.7W[i]){2e('e1'+C.7W[i],(3N()/5m())*1x)}}}}O{if(!C.6r['e1']){if((3N()/5m())*1x>C.7W){2e('e1',(3N()/5m())*1x)}}}}}2L&&4c?8m(4c,2L,4v,2P,cp):'';if(1M!=2u&&C.3Y==1){if(1M[5V]){if(1M[5V][1]){J t=4S(3N()*10);if(1M[5V][1][t]!=1U){J 1F='';if(C.cE==1&&ei){1u(J i=0;i<1M.1d;i++){1F+=1M[i][0][1M[i][1][t]]?1M[i][0][1M[i][1][t]]+(i<1M.1d-1?'<br>':''):''}}O{1F=1M[5V][0][1M[5V][1][t]]}if(1M){J 4X=U;if(do){do==1F?4X=1g:''}!aH?4X=U:'';!4X?iK(1F):''}}if(1M[5V][1][t]==2u&&aH){bf()}}}}}if(21&&!ch){if(C.2Y!=''){1s.2O.cV!=C.29.1Y||1s.2O.6G!=C.29.2o?8f('re'):''}O{1s.cV!=C.29.1Y||1s.6G!=C.29.2o?8f('re'):''}}}I 3N(){t=0;if(3o()){t=2V.kW()}O{1f?t=1f.7d:''}M t}I 5m(){t=0;if(3o()){t=2V.i5()}O{if(1f){if(1f.4f&&1f.4f!='pq'){t=1f.4f}}}M t}I fz(){if(C.or.1d>1){if(C.8R==C.or.1d-1){C.8R=-1}C.8R++;8V(C.or[C.8R])}O{af();if(C.kE==1){J kS=C.2K['1v']+' '+C.2K['bL'];6s(kS)}2e('kF','1v aE cz')}}I hB(){if(!5e){e7()}if(1f){if(!3o()){1f.7d=0;1f.4T()}O{2V.ju()}}if(C.jr==1&&3w){kr(4C)?'':cs()}}I kr(mc){J 3m=U;if(mc){mc.Y.8y!='1D'?3m=1g:''}M 3m}I gS(f){J 3m='95';if(f=='i'||f=='b><i'){3m='oZ'}M 3m}I dL(f){J 3m='95';if(f=='b'||f=='b><i'){3m='p7'}M 3m}I kt(){if(5T){1i.1n().dK.fp()}}I i3(){if(5T){1i.1n().dK.6f()}7O=U}I kD(){4P?4P.c.2h=9M(3N()):'';4G?4G.c.2h=9M(5m()):''}I 9M(6e,1l){J 6e=1V.26(6e);J 8c=1V.5F(6e/60);J e6=1V.5F(8c/60);8c=1V.5F(8c%60);6e=1V.5F(6e%60);(e6>0||8O>5)&&8c<10?8c=\"0\"+8c:\"\";6e=(6e>=10)?6e:\"0\"+6e;J 3m=(e6>0||8O>5?e6+\":\":\"\")+8c+\":\"+6e;if(3m.1d!=8O&&!1l){8O=3m.1d;di()}M 3m}I hN(){J ib=C.1M.2I(',');J 6a=C.aZ?C.aZ.2I(','):3V();1M=3V();1u(J i=0;i<ib.1d;i++){6a[i]==2u?6a[i]=i+1:'';ky(i,ib[i],6a[i]);6a[i]&&C.cQ?(6a[i]==C.cQ?5V=i:''):''}}I ky(l,2q,hW){if(2q){if(2q.R('#')==0){2q=un(2q)}J 9W=C.nF;if(2q.R('ku=')>0){9W=2q.2p(2q.R('ku=')+6)*1}if(4K&&5e){J 9q=P.1k('9q');9q.3X('4E',2q);9q.3X('hW',hW);C.3Y==1&&l==0?9q.3X('5L','1g'):'';1f.1b(9q)}O{J hI=cB(2q);if(hI){if(2q.R('.e8')>-1||2q.R('.ir')>-1||2q.R('.du')>-1||2q.R('.iy')>-1){1M[l]=9u();1M[l][0]=3V();1M[l][1]=3V();J 2Z=3V();2Z=hI.2I('\\n');J i8=1;J t1=0;J t2=0;1u(i=0;i<2Z.1d;i++){if(2q.R('.e8')>-1||2q.R('.iy')>-1){if(2Z[i].R('-->')>-1&&2Z[i].R(':')>-1){t1=b0(2Z[i].2p(0,2Z[i].R('-->')))*1+9W;t2=b0(2Z[i].2p(2Z[i].R('-->')+4,12))*1+9W;1M[l][0][t1]='';1u(J j=t1;j<t2;j++){1M[l][1][j]=t1}i8++}O{if(2Z[i]!=''&&2Z[i].1d>1&&2Z[i]!=i8){1M[l][0][t1]+=(1M[l][0][t1]!=''?'<br>':'')+2Z[i]}}}if(2q.R('.ir')>-1||2q.R('.du')>-1){if(2Z[i].R('om:')>-1){t1=b0(2Z[i].2p((2q.R('.du')>-1?2Z[i].R('=0')+3:12),12))*1+9W;t2=b0(2Z[i].2p((2q.R('.du')>-1?2Z[i].R('=0')+14:23),10))*1+9W;J p='';if(2Z[i].R('0,,')>0){p=2Z[i].2p(2Z[i].R('0,,')+3)}O{if(2Z[i].R('iJ,')>0){p=2Z[i].2p(2Z[i].R('iJ,')+6)}}if(1M[l][0][t1]!=2u){1M[l][0][t1]+='\\n'+p}O{1M[l][0][t1]=p}1M[l][0][t1]=1M[l][0][t1].2C(/{.*?}/,'');1M[l][0][t1]=1M[l][0][t1].2C(/\\\\\\\\N/,'\\n');1u(J j=t1;j<t2;j++){1M[l][1][j]=t1}}}}}}C.3Y=1}}}I iK(1F){if(4b){dw()}4b=P.1k('1y');7P=P.1k('1y');1S.c.1b(7P);1S.c.1b(4b);5w(4b);5w(7P);do=1F;4b.2h=1F;aH=1g;5g()}I bf(){if(4b){dw();aH=U}}I dw(){if(4b){4b.2h='';1S.c.5t(7P);1S.c.5t(4b);7P=1U;4b=1U}}I 5g(){J h=(!21?C.ph:C.sh)-(C.4I==1&&!21?C.1N/2:C.1J);if(4b){J W=C.sw-60;K(4b,{\"S\":\"1e\",\"1p\":(C.aS.1d==6?'#':'')+C.aS,'aO':C.nM,'9b':(C.7M*(21?1.5:1))+'%','3z-aA':'6x','3S-1j':'fv%','3z-oD':'6c 6c 6c 94(1,1,1,0.4)'});K(7P,{\"S\":\"1e\",\"6I\":(C.aJ.1d==6?'#':'')+C.aJ,'1w':C.cY,'4h':C.nI/2});K(4b,{'9g-W':W});J Q=h-C.de*(21?C.sh/C.5Y:1)-10-4b.2o-5;J 1a=(C.sw-(4b.1Y+20))/2;K(4b,{\"S\":\"1e\",\"Q\":Q,\"1a\":1a+10});K(7P,{\"W\":4b.1Y+20,\"1j\":4b.2o+10,\"S\":\"1e\",\"Q\":Q-5,\"1a\":1a})}if(41){J hg=(h-41.2o);J aV=3k.c.4u-41.1Y+3k.w+5;aV<0?aV=0:'';K(41,{\"S\":\"1e\",\"Q\":hg,\"1a\":aV});K(92,{\"S\":\"1e\",\"Q\":hg,\"1a\":aV})}}I b0(e8){J 8S=e8.2I(':');J 3m=0;8S[0]!='93'?3m+=8S[0]*p9:'';8S[1]!='93'?3m+=8S[1]*60:'';3m+=8S[2].2p(0,2)*1;3m=3m*10+8S[2].2p(3,1)*1;M 3m}I i7(){if(41){f0(92);f0(41);5g()}O{41=P.1k('1y');92=P.1k('1y');1S.c.1b(92);1S.c.1b(41);41.2h='<1y id=\"jb\" Y=\"W:p5;1j:j9;6j:6c 8N 94(9Q,9Q,9Q,0.5);6j-hz:jq;4r-3f:9m;1N:6c;1A:1L\"><1y id=\"j0\" Y=\"W:p2;1j:hs;2y:#7y;6j-hz:j9;1N:6c;\"><1y id=\"iZ\" Y=\"W:hs;1j:hs;2y:#8d;6j-hz:p1;1p:#8d;3z-aA:6x;'+(C.3Y==0?'7X:1a':'7X:9k')+'\"></1y></1y></1y>';1i.P.5N(\"jb\").2g=j4;J aD=P.1k('1y');41.1b(aD);K(aD,{\"9b\":\"80%\",\"S\":\"1e\",\"Q\":5,\"9k\":7,\"1p\":\"#7y\",\"1w\":0.5,\"4r-Q\":\"-7o\",\"1A\":\"1L\"});aD.2h='×';aD.2g=i7;K(41,{\"S\":\"1e\",\"Q\":0,\"1a\":0,\"1p\":\"#7y\",\"4R\":\"90% nN-nJ\",\"4h\":10,\"1N\":10,\"W\":mk});5C=P.1k('1y');hJ();41.1b(5C);J b1=P.1k('1y');9f(b1,U);b1.2h='+';K(b1,{\"4r\":\"0 6v 6v 0\"});J b2=P.1k('1y');9f(b2,U);b2.2h='-';K(b2,{\"4r\":\"0 jq 6v 0\"});b1.2g=I(){C.7M+=10;5g()};b2.2g=I(){C.7M-=10;5g()};J b3=P.1k('1y');9f(b3,U);b3.2h='∧';K(b3,{\"4r\":\"0 6v 6v 0\"});J b4=P.1k('1y');9f(b4,U);b4.2h='∨';K(b4,{\"4r\":\"0 0 6v 0\"});b3.2g=I(){C.de+=10;5g()};b4.2g=I(){C.de-=10;5g()};J s1=P.1k('br');5C.1b(s1);J c=3V();J eF=3V(\"gP\",\"3F\",\"nL\",\"oQ\",\"oU\",\"oX\",\"ps\",\"pr\");J eO=2;1u(J i=0;i<7;i++){c[i]=P.1k('1y');9f(c[i],1g);K(c[i],{\"6j\":\"6c 8N #\"+(i==1?'j7':eF[i]),\"1w\":0.7,\"1p\":\"#\"+(eF[i])});c[i].2g=I(){C.aS=B.Y.1p;eN.Y.1w=0.7;B.Y.1w=1;eN=B;5g()};C.aS==eF[i]?eO=i:''}c[eO].Y.1w=1;eN=c[eO];J s2=P.1k('br');5C.1b(s2);J 7N=3V();J eP=3V(\"gP\",\"3F\",\"ok\",\"ou\",\"oO\",\"oJ\",\"oL\",\"oN\");J eQ=1;1u(i=0;i<7;i++){7N[i]=P.1k('1y');9f(7N[i],1g);K(7N[i],{\"2y-1p\":\"#\"+(eP[i]),\"jl\":\"#\"+(i==1?'j7':eP[i]),\"1w\":0.7,\"1p\":\"#7y\"});i==0||i==2?K(7N[i],{\"1p\":\"#8d\"}):'';7N[i].2g=I(){C.aJ=B.Y.6I;dj.Y.1w=0.7;B.Y.1w=1;dj=B;5g()};C.aJ==eP[i]?eQ=i:''}7N[eQ].Y.1w=1;dj=7N[eQ];J s3=P.1k('br');5C.1b(s3);J eT=P.1k('1y');5C.1b(eT);K(eT,{\"7X\":\"1a\",\"4r\":\"0 7o 0 7o\",\"1A\":\"5L\"});eT.2h='-';J ca=P.1k('1y');K(ca,{\"W\":91,\"1j\":4,\"6j\":\"6c 8N #7y\",\"4h\":4,\"7X\":\"1a\",\"4r\":\"6v hG\",\"1A\":\"1L\"});5C.1b(ca);J h9=P.1k('1y');ca.1b(h9);K(h9,{\"W\":(C.cY*1x)+\"%\",\"1j\":4,\"4h\":4,\"2y\":\"#7y\"});J ey=P.1k('1y');5C.1b(ey);K(ey,{\"7X\":\"1a\",\"4r\":\"0 0 0 7o\",\"9b\":\"80%\",\"1A\":\"5L\"});ey.2h='+';ca.2g=I(e){J n=e.d4-8D(B);n<5?n=0:'';K(B.ec,{'W':n});C.cY=n/B.1Y;5g()};if(C.aZ){J 9v=P.1k('5u');J 6a=C.aZ.2I(',');1u(J l=0;l<6a.1d;l++){J cl=P.1k('hD');cl.2h=6a[l];9v.1b(cl);if(6a[l]==C.cQ){5V=l;cl.3X(\"iW\",\"1g\")}}if(C.cE==1&&6a.1d>1){J cl=P.1k('hD');cl.2h=C.2K['9n'];9v.1b(cl)}5C.1b(9v);9v.ks=I(){if(C.cE==1&&B.ee==B.1d-1){5V=0;ei=1g}O{ei=U;5V=B.ee}};K(9v,{'W':fv,'1A':'1L'})}K(92,{\"S\":\"1e\",\"Q\":0,\"1a\":0,\"2y\":\"#8d\",\"W\":41.1Y,\"1j\":41.2o,\"1w\":\"0.7\",\"4h\":10});5g();41.Y.3c=7;92.Y.3c=7}}I j4(){J el=41.ec.ec.ec;K(el,{\"7X\":(C.3Y==1?\"1a\":\"9k\")});if(1M){C.3Y==0?C.3Y=1:C.3Y=0}O{if(C.1M&&C.3Y==0){hN();C.3Y=1}O{C.3Y==0?C.3Y=1:C.3Y=0}}if(C.3Y==0){bf()}hJ()}I hJ(){C.3Y==0?K(5C,{\"4l\":\"42\"}):K(5C,{\"4l\":\"8y\"});K(P.5N(\"iZ\"),{\"2y\":(C.3Y==0?\"#7y\":\"#8d\")});K(P.5N(\"j0\"),{\"2y\":(C.3Y==0?0:\"#7y\")})}I 9f(b,8q){5C.1b(b);K(b,{\"7X\":\"1a\",\"jW\":\"6x\",\"W\":(8q?11:20),\"1j\":(8q?11:\"3O\"),\"6j\":\"6c 8N 94(9Q,9Q,9Q,0.5)\",\"4h\":(8q?11:20),\"4r\":(8q?\"hG 7o vE 7o\":0),\"1N\":(8q?\"0\":\"0 0 0 0\"),\"1A\":\"1L\"})}I 4o(){if(C.4O&&6w.ed){M}J 2w=1i.1n();2w.b7(1o 1c.4t(1i));1n=2w.4t.1t;5D=[];59=0;fi();1H=C.1n.2I(',');3i=0;1T=[];2s=[];1u(J i=0;i<1H.1d;i++){if(1H[i]=='2B'||1H[i]=='d8'){3a=1o 2M('2B',20,20);2w.3r('8l',3a);1n.1b(3a.c);K(3a.c,{'1A':'1L','S':'1e','Q':(C.1J-3a.h)/2+3a.s.2j-3a.s.2k});3a.c.2g=4a;if(C.1l==1&&3a.s.3A==0){3a.c.2U=I(){J 8b=3a.s.j3?3a.s.j3:C.2K['2B'];4x(3a.c,8b)};3a.c.2S=I(){4B(3a.c)}}3p=1o 2M((1H[i]=='d8'?'4X':'4T'),20,20,'','2B');2w.3r('af',3p);1n.1b(3p.c);K(3p.c,{'1A':'1L','1E':'1D','S':'1e','Q':(C.1J-3p.h)/2+3p.s.2j-3p.s.2k});1H[i]=='d8'?3p.c.2g=6O:3p.c.2g=4a;1T[i]=3p.w+C.2W;3i+=1T[i]+3a.s.2i+3a.s.2x;2s[i]=3a;if(C.1l==1&&3p.s.3A==0){3p.c.2U=I(){4x(3p.c,3p.s.iY?3p.s.iY:C.2K['4T'])};3p.c.2S=I(){4B(3p.c)}}}if(1H[i]=='6t'){3L=1o 2M('6t',30,20);2w.3r('a7',3L);1n.1b(3L.c);K(3L.c,{'1A':'1L','S':'1e','Q':(C.1J-3L.h)/2+3L.s.2j-3L.s.2k});3L.c.2g=a7;1T[i]=3L.w+C.2W;3i+=1T[i]+3L.s.2i+3L.s.2x;2s[i]=3L;if(C.1l==1&&3L.s.3A==0){3L.c.2U=I(){4x(3L.c,3L.s.1l?3L.s.1l:C.2K['6t'])};3L.c.2S=I(){4B(3L.c)}}}if(1H[i]=='4X'){3D=1o 2M('4X',20,20);2w.3r('6O',3D);1n.1b(3D.c);K(3D.c,{'1A':'1L','S':'1e','Q':(C.1J-3D.h)/2+3D.s.2j-3D.s.2k});3D.c.2g=6O;1T[i]=3D.w+C.2W;3i+=1T[i]+3D.s.2i+3D.s.2x;2s[i]=3D;if(C.1l==1&&3D.s.3A==0){3D.c.2U=I(){4x(3D.c,3D.s.1l?3D.s.1l:C.2K['4X'])};3D.c.2S=I(){4B(3D.c)}}}if(1H[i].R('my')==0){J m=1H[i].2p(2);33[m]=1o 2M('my'+m,20,20);1n.1b(33[m].c);K(33[m].c,{'1A':'1L','S':'1e','Q':(C.1J-33[m].h)/2+33[m].s.2j-33[m].s.2k});33[m].c.id='uP'+m;33[m].c.2g=I(){jk(B.id)};1T[i]=33[m].w+C.2W;3i+=1T[i]+33[m].s.2i+33[m].s.2x;2s[i]=33[m];if(C.1l==1&&33[m].s.3A==0&&33[m].s.1l){33[m].c.2U=I(){4x(33[m].c,33[m].s.1l)};33[m].c.2S=I(){4B(33[m].c)}}}if(1H[i]=='4i'){3C=1o 2M('4i',20,20);2w.3r('8M',3C);1n.1b(3C.c);K(3C.c,{'1A':'1L','S':'1e','Q':(C.1J-3C.h)/2+3C.s.2j-3C.s.2k});3C.c.2g=8M;1T[i]=3C.w+C.2W;3i+=1T[i]+3C.s.2i+3C.s.2x;2s[i]=3C;if(C.1l==1&&3C.s.3A==0){3C.c.2U=I(){4x(3C.c,3C.s.1l?3C.s.1l:C.2K['4i'])};3C.c.2S=I(){4B(3C.c)}}}if(1H[i]=='7k'){34=1o 2M('7k',20,20);2w.3r('bl',34);1n.1b(34.c);K(34.c,{'1A':'1L','S':'1e','Q':(C.1J-34.h)/2+34.s.2j-34.s.2k});34.c.2g=bl;1T[i]=34.w+C.2W;3i+=1T[i]+34.s.2i+34.s.2x;2s[i]=34;if(C.1l==1&&34.s.3A==0){34.c.2U=I(){4x(34.c,34.s.1l?34.s.1l:C.2K['7k'])};34.c.2S=I(){4B(34.c)}}}if(1H[i]=='7D'){2G=1o 2M('7D',20,20);2w.3r('e2',2G);1n.1b(2G.c);K(2G.c,{'1A':'1L','S':'1e','Q':(C.1J-2G.h)/2+2G.s.2j-2G.s.2k});if(C.7t==0){K(2G.c,{'1w':0.3,'3e':'2F(1w=30)','1A':'5L'})}2G.c.2g=e2;1T[i]=2G.w+C.2W;3i+=1T[i]+2G.s.2i+2G.s.2x;2s[i]=2G;if(C.1l==1&&2G.s.3A==0){2G.c.2U=I(){4x(2G.c,2G.s.1l?2G.s.1l:C.2K['7D'])};2G.c.2S=I(){4B(2G.c)}}}if(1H[i]=='c5'){4P=1o 2M('c5',30,20);2w.3r('ly',4P);1n.1b(4P.c);K(4P.c,{'1A':'5L','S':'1e','Q':(C.1J-4P.h)/2+3+4P.s.2j*1-4P.s.2k*1,'hh-7j':'h4'});1T[i]=4P.w+C.2W;3i+=1T[i]+4P.s.2i+4P.s.2x;2s[i]=4P;db++}if(1H[i]=='cX'){4G=1o 2M('cX',30,20);2w.3r('lz',4G);1n.1b(4G.c);K(4G.c,{'1A':'5L','S':'1e','Q':(C.1J-4G.h)/2+3+4G.s.2j*1-4G.s.2k*1,'hh-7j':'h4'});1T[i]=4G.w+C.2W;3i+=1T[i]+4G.s.2i+4G.s.2x;2s[i]=4G;db++}if(1H[i]=='|'){5D[59]=1o 2M('fm',5,20);2w.3r('lI',5D[59]);1n.1b(5D[59].c);K(5D[59].c,{'1A':'1L','S':'1e','Q':(C.1J-5D[59].h)/2+5D[59].s.2j-5D[59].s.2k});1T[i]=5D[59].w+C.2W;3i+=1T[i]+5D[59].s.2i+5D[59].s.2x;2s[i]=5D[59];59++}if(1H[i]=='uM'){J 2l=ak('3Z');4c=P.1k('1y');2w.7h('lH',4c);1n.1b(4c);J lh=C.bE['h'];if(C.3n){if(C.3n['h']){lh=C.3n['h']}}if(2l['S']==0){if(lh%2!=2l['h']%2){2l['h']++}if(2l['o']==1){2l['w']=2l['h']}}K(4c,{'1A':'1L','S':'1e','1a':0,'Q':2l['2j']*1-2l['2k']*1,'W':2l['w']+'px','1j':2l['h']+'px','4h':(2l['w']*2l['o'])+'px','1w(':2l['2F'],'3e':'2F(1w='+(2l['2F']*1x)+')'});5q(4c,2l['1p']);if(2l['X']){if(2A(2l['X']).R(\"4n://\")>-1){46(2l['X'],4c,0,2l['4D'],2l['4F'],2l['4W'])}}if(2l['bg']==1){K(4c,{'6j':'7o 8N #'+1B(2l['5s'])})}cp=2l['S'];if(C.1l==1&&2r['3A']==0){4c.2U=I(){1f.4f?4x(4c,'3S'):''};4c.2S=I(){4B(4c)}}}if(1H[i]=='jg'&&!4K){J 2l=ak('jg');2X=P.1k('1y');2w.7h('lF',2X);1n.1b(2X);K(2X,{'1A':'1L','S':'1e','1a':0,'Q':0,'W':2l['w']+'px','1j':2l['h']+'px','4h':(2l['w']*2l['o'])+'px','1w':2l['2F'],'3e':'2F(1w='+(2l['2F']*1x)+')'});5q(2X,2l['1p']);a0=2l['S'];if(C.8w){3t(2X)}if(2l['bg']==1){K(2X,{'6j':'7o 8N #'+1B(2l['5s'])})}}if(1H[i]=='fE'&&!4K){1H[i]='2v';C.kw=C.l2}if((1H[i]=='2v'||1H[i]=='9J')&&!4K){3u=1o 2M('2v',20,20);2w.3r('6P',3u);1n.1b(3u.c);K(3u.c,{'1A':'1L','S':'1e','Q':(C.1J-3u.h)/2+3u.s.2j-3u.s.2k});3u.c.2g=b6;3E=1o 2M('mY',20,20,'','2v');2w.3r('og',3E);1n.1b(3E.c);K(3E.c,{'1E':'1D','1A':'1L','S':'1e','Q':(C.1J-3E.h)/2+3E.s.2j-3E.s.2k});1T[i]=3E.w+C.2W;3i+=1T[i]+3E.s.2i+3E.s.2x;3E.c.2g=b6;2s[i]=3u;C.1l==1&&3u.s.3A==0?3u.c.7e=(3u.s.1l?3u.s.1l:C.2K['2v']):'';if(1H[i]=='9J'){C.8w=1g;2b=P.1k('1y');2w.7h('o8',2b);1n.1b(2b);C.kC.bg=0;K(2b,{'1A':'1L','S':'1e','Q':0});1q=ak('9J');5l=P.1k('1y');2b.1b(5l);K(5l,{'1A':'1L','S':'1e','1a':0,'Q':0,'W':1q['w'],'1j':1q['h'],'4h':((1q['h']/2)*1q['o'])+'px','1w':1q['4U'],'3e':'2F(1w='+(1q['4U']*1x)+')'});5q(5l,1q['6g']);1q['44']=U;K(2b,{'1E':'1D','1A':'1L','S':'1e','Q':(C.1J-1q['h'])-10});4j=P.1k('1y');2b.1b(4j);K(4j,{'1A':'1L','S':'1e','1a':0,'Q':0,'W':1q['w'],'1j':1q['h'],'4h':((1q['h']/2)*1q['o'])+'px','1w':1q['5k'],'3e':'2F(1w='+(1q['5k']*1x)+')'});5q(4j,1q['6N']);K(2b,{'1A':'1L','S':'1e','Q':(-1q['h'])});K(4j,{'1j':1q['h']*C.2v,'Q':1q['h']-1q['h']*C.2v});2b.ai=I vc(e){1q['44']=1g;if(!e)J e=1s.2D;hF(e)};2b.9V=I vd(e){if(!e)J e=1s.2D;hF(e)};2b.9I=I ve(e){1q['44']=U};2b.2U=I v7(e){1q['a5']=1g};2b.2S=I v1(e){1q['a5']=U};3E.c.2S=3u.c.2U=I jt(e){K(2b,{\"1E\":\"3b\"});if(2X){K(2X,{\"1E\":\"3b\"});2X.Y.3c=8;8m(2X,2b,4j,5l,a0)}1q['a5']=1g};3E.c.2U=3u.c.2U=I jt(e){K(2b,{\"1E\":\"3b\"});if(2X){K(2X,{\"1E\":\"3b\"});2X.Y.3c=8;8m(2X,2b,4j,5l,a0)}1q['a5']=1g};3E.c.2S=3u.c.2S=kc;2b.Y.3c=7;if(2X){3t(2X)}}}if(1H[i]=='v3'&&!4K){1H[i]='7T';C.a9=C.kv}if(1H[i]=='7T'&&!4K){2b=P.1k('1y');2w.7h('nU',2b);1n.1b(2b);1q=ak('7T');5l=P.1k('1y');2b.1b(5l);K(5l,{'1A':'1L','S':'1e','1a':0,'Q':0,'W':1q['w'],'1j':1q['h'],'4h':((1q['h']/2)*1q['o'])+'px','1w':1q['4U'],'3e':'2F(1w='+(1q['4U']*1x)+')'});5q(5l,1q['6g']);1q['44']=U;4j=P.1k('1y');2b.1b(4j);K(4j,{'1A':'1L','S':'1e','1a':0,'Q':0,'1j':1q['h'],'4h':((1q['h']/2)*1q['o'])+'px','1w':1q['5k'],'3e':'2F(1w='+(1q['5k']*1x)+')'});5q(4j,1q['6g']);K(2b,{'1A':'1L','S':'1e','Q':(C.1J-1q['h'])/2+1q['2j']-1q['2k']});1T[i]=1q['w']+C.2W+5;3i+=1T[i]+1q['2i']+1q['2x'];K(4j,{'W':1q['w']*(v?v:C.2v)});2b.ai=I(e){1q['44']=1g;if(!e)J e=1s.2D;ii(e)};2b.9V=I(e){if(!e)J e=1s.2D;ii(e)};2b.2S=I(e){if(!e)J e=1s.2D;jY(e)};2b.9I=I(e){1q['44']=U};2s[i]=2b}if(1H[i]=='fZ'&&!4K){4M=P.1k('1y');2w.7h('nY',4M);1n.1b(4M);6q=[];C.3H.4U?C.1Q.4U=C.3H.4U:'';C.3H.5k?C.1Q.5k=C.3H.5k:'';if(C.3H.X){if(C.3H.X==1){C.1Q.n=10;C.1Q.7p=1}if(C.3H.X==2){C.1Q.n=5;C.1Q.7p=0}if(C.3H.X==3){C.1Q.n=10;C.1Q.7p=0}}C.3H.n?C.1Q.n=C.3H.n:'';C.3H.7p?C.1Q.7p=C.3H.7p:'';C.3H.G?C.1Q.G=C.3H.G:'';C.3H.2j?C.1Q.2j=C.3H.2j:C.1Q.2j=0;C.3H.2k?C.1Q.2k=C.3H.2k:C.1Q.2k=0;C.1Q.w=C.1Q.n*5*C.1Q.G;C.1Q.h=10*C.1Q.G;1u(vb=0;vb<C.1Q.n;vb++){J aF=(C.1Q.7p==1?(10/C.1Q.n)*(vb+1):10*C.1Q.G);6q[vb]=1o 2M('fZ',3*C.1Q.G,aF);4M.1b(6q[vb].c);K(6q[vb].c,{'S':'1e','Q':10*C.1Q.G-aF*C.1Q.G,'1a':vb*5*C.1Q.G+10*(C.1Q.G-1),'1w':C.1Q.4U});if(C.3H.7p==1){6q[vb].c.2U=I(e){K(B,{'Q':aF-1})};6q[vb].c.2S=I(e){K(B,{'Q':aF})}}};4M.ai=I(e){4M.44=1g;if(!e)J e=1s.2D;hP(e)};4M.9V=I(e){if(!e)J e=1s.2D;hP(e)};4M.9I=I(e){4M.44=U};K(4M,{'1A':'1L','S':'1e','Q':(C.1J-C.1Q.h)/2+(C.1Q.h-10)*C.1Q.G+C.1Q.2j-C.1Q.2k,'W':C.1Q.w,'1j':C.1Q.h});1T[i]=(C.1Q.n+1)*5+C.2W;3i+=1T[i]+(C.1Q.2i?C.1Q.2i:0)+(C.1Q.2x?C.1Q.2x:0);2s[i]=4M;v!=0?ab(-v):''}if(1H[i]=='5E'){2w.b7(1o 1c.6T(1i));2w.b7(1o 1c.6R(1i));8e=1i.1n().gB.2m.2T;c4=1i.1n().ho.2m.2T;1T[i]=8e.w+C.2W;3i+=1T[i]+8e.s.2i+8e.s.2x;2s[i]=8e}if(1H[i]=='1M'){3k=1o 2M('1M',20,20);2w.3r('oe',3k);1n.1b(3k.c);K(3k.c,{'1A':'1L','S':'1e','Q':(C.1J-3k.h)/2+3k.s.2j-3k.s.2k});3k.c.2g=i7;1T[i]=3k.w+C.2W;3i+=1T[i]+3k.s.2i+3k.s.2x;2s[i]=3k;if(C.1l==1&&3k.s.3A==0){3k.c.2U=I(){4x(3k.c,3k.s.1l?3k.s.1l:C.2K['1M'])};3k.c.2S=I(){4B(3k.c)}}}if(1H[i]=='hd'){if(C.4O){C.5I='kO,kM,jJ,8q';C.hd='kP,kN,kh,jI';C.6X==60?C.6X=55:''}if(C.hd){if(C.hd.R('::')>-1){1G=1o 2M('hd',20,20);2w.3r('oa',1G);1n.1b(1G.c);K(1G.c,{'1A':'1L','1E':(C.6n==1?'1D':'3b'),'S':'1e','Q':1V.5F((C.1J-1G.h)/2+1G.s.2j-1G.s.2k)});if(1G.s.4s){if(1G.s.X==1G.s.4s){K(1G.c,{'1w':1G.s.gC})}}1T[i]=1G.w+C.2W;1G.c.2g=cu;3i+=1T[i]+1G.s.2i+1G.s.2x;2s[i]=1G;if(C.1l==1&&1G.s.3A==0){1G.c.2U=I(){4x(1G.c,1G.s.1l?1G.s.1l:C.2K['hd'])};1G.c.2S=I(){4B(1G.c)}}3s=1o 2M('6n',20,20,'','hd');2w.3r('od',3s);1n.1b(3s.c);K(3s.c,{'1A':'1L','1E':(C.6n==1?'3b':'1D'),'S':'1e','Q':1V.5F((C.1J-3s.h)/2+3s.s.2j-3s.s.2k)});3s.c.2g=cu;if(C.1l==1&&3s.s.3A==0){3s.c.2U=I(){4x(3s.c,1G.s.iw?1G.s.iw:C.2K['hd'])};3s.c.2S=I(){4B(3s.c)}}}O{if(C.hd.R(',')>-1){C.5R=C.hd.2I(',');if(C.6X==60){C.6X=0;1u(J h=0;h<C.5R.1d;h++){C.6X<6V(C.5R[h],12).W?C.6X=6V(C.5R[h],12).W:''}C.6X+=22}1G=1o 2M('3B',C.6X,20,'','hd');2w.3r('8I',1G);1n.1b(1G.c);K(1G.c,{'1A':'1L','S':'1e','Q':1V.5F((C.1J-1G.h)/2+1G.s.2j-1G.s.2k)});1T[i]=1G.w+C.2W;1G.c.2g=cu;3i+=1T[i]+1G.s.2i+1G.s.2x;2s[i]=1G;C.1l==1&&1G.s.3A==0?1G.c.7e=(1G.s.1l?1G.s.1l:C.2K['hd']):'';3B=P.1k('5u');1G.c.1b(3B);8I();K(3B,{'S':'1e','4r':'6c 5J 5J -6v','1w':0,'1A':'1L'});3B.ks=kl}}}}if(1H[i]=='1m'){if(C.pl!=''){3K=1o 2M('1m',20,20);2w.3r('gF',3K);1n.1b(3K.c);K(3K.c,{'1A':'1L','S':'1e','Q':(C.1J-3K.h)/2+3K.s.2j-3K.s.2k});3K.c.2g=kj;1T[i]=3K.w+C.2W;3i+=1T[i]+3K.s.2i+3K.s.2x;2s[i]=3K;if(C.1l==1&&3K.s.3A==0){3K.c.2U=I(){4x(3K.c,3K.s.1l?3K.s.1l:C.2K['am'])};3K.c.2S=I(){4B(3K.c)}}}}if(1H[i]=='9C'){3w=1o 2M('9C',20,20);2w.3r('cs',3w);1n.1b(3w.c);K(3w.c,{'1A':'1L','S':'1e','Q':(C.1J-3w.h)/2+3w.s.2j-3w.s.2k});3w.c.2g=cs;1T[i]=3w.w+C.2W;3i+=1T[i]+3w.s.2i+3w.s.2x;2s[i]=3w;if(C.1l==1&&3w.s.3A==0){3w.c.2U=I(){4x(3w.c,3w.s.1l?3w.s.1l:C.2K['9C'])};3w.c.2S=I(){4B(3w.c)}}}if(1H[i]=='aN'){if(2L){5T=1o 2M('aN',30,14);2w.3r('dK',5T);1n.1b(5T.c);K(5T.c,{'1A':'5L','S':'1e','hh-7j':'h4'});2s[i]=5T;1T[i]=0;5T.c.2h=C.2K['9Z']}}if(1H[i]=='3y'){if(v.m=='5X'&&5e){}O{3M=1o 2M('3y',20,20);2w.3r('gE',3M);1S.c.1b(3M.c);K(3M.c,{'1A':'1L','S':'1e','Q':(C.ph)/2-3M.h/2,'1a':(C.sw)/2-3M.w/2-(3M.s.4D>0?3M.s.4D/(3M.s.4W==1?4:2):0),'3c':7});3M.c.2g=4a;3M.c.Y.3c=7}}if(1H[i]=='7j'){7a=P.1k('1y');2w.7h('o1',7a);1n.1b(7a);K(7a,{'S':'1e','Q':(C.1J-20)/2});2s[i]=7a}if(1H[i]=='3S'){8o=1g;2L=P.1k('1y');2w.7h('o7',2L);1n.1b(2L);2r=ak('3S');2P=P.1k('1y');2L.1b(2P);K(2P,{'S':'1e','1a':0,'Q':0,'W':'1x%','1j':2r['h'],'4h':((2r['h']/2)*2r['o'])+'px','1w':2r['4U'],'3e':'2F(1w='+(2r['4U']*1x)+')'});5q(2P,2r['6g']);6p=P.1k('1y');2L.1b(6p);K(6p,{'S':'1e','1a':0,'Q':0,'W':'1x%','1j':2r['h'],'6I':'#'+1B(2r['bY']),'4h':((2r['h']/2)*2r['o'])+'px','1w':2r['gI'],'3e':'2F(1w='+(2r['gI']*1x)+')'});5q(6p,2r['bY']);4v=P.1k('1y');2L.1b(4v);K(4v,{'S':'1e','1a':0,'Q':0,'W':'1x%','1j':2r['h'],'6I':'#'+1B(2r['6N']),'4h':((2r['h']/2)*2r['o'])+'px','1w':2r['5k'],'3e':'2F(1w='+(2r['5k']*1x)+')'});5q(4v,2r['6N']);K(2L,{'S':'1e','Q':(C.1J-2r['h'])/2+2r['2j']*1-2r['2k']*1,'1A':'1L'});K(4v,{'W':'0'});K(6p,{'W':'0'});2r['44']=U;4N=P.1k('1y');2w.7h('nV',4N);1n.1b(4N);K(4N,{'S':'1e','1j':(2r['h']<10?20:2r['h']*2),'1A':'1L'});4N.ai=I(e){1c.3J('4N.ai');if(!7R){4a()}2r['44']=1g;if(!e)J e=1s.2D};4N.9I=I(e){1c.3J('4N.9I');if(7R){gl(e);2r['44']=U}};if(C.1l==1&&2r['3A']==0){4N.2U=I(){4x(4N,'3S')};4N.2S=I(){4B(4N)}}2s[i]=2L}}4G&&C.4L>0?4G.c.2h=9M(C.4L):'';di()}I fi(){if(5B){ce('5B')}if(C.4I!=1&&C.kn==1){C.6U.R('|')==-1?C.6U=C.6U+'|'+C.6U:'';5B=1o 5f({w:C.6S,h:C.1J,9x:(C.1J==C.h?0:1),5j:C.6U,7v:C.km,7x:C.ki,o:(C.1N>0?C.o/2:C.gK)})}if(C.4I==1&&C.1N==0){C.6U.R('|')==-1?C.6U=C.6U+'|'+C.6U:'';5B=1o 5f({w:C.6S,h:C.1J,o:C.o/2-C.1N,9x:(C.1J==C.h?0:1),5j:C.gk,7v:1,7x:1,o:(C.1N>0?C.o/2:C.gK)})}if(5B){5B.c.3X('id','5B');1n.1b(5B.c);if(C.iB==1){9K=1o 5f({w:C.6S,h:C.1J/2,o:C.o/2-C.1N,5j:(C.cq.R('|')==-1?C.cq+'|'+C.cq:C.cq),7v:C.ix,7x:C.it});5B.c.1b(9K.c);K(9K.1W,{\"S\":\"1e\",\"Q\":0,\"1a\":0,\"1j\":C.1J/2,\"W\":C.6S})}}}I di(){J 8j=C.sw-3i-C.gJ*2-C.2W*2-(!21?C.1N*2:0)-C.gM-C.kk-(8O-4)*4*db;J 5d=C.gJ+C.gM;J 2i;J 2x;1u(i=0;i<1H.1d;i++){if(2s[i]){2i=0;2x=0;if(2s[i].s){2i=4S(2s[i].s.2i);2x=4S(2s[i].s.2x)}if(1H[i]=='7T'){2i=(C.a9.2i?C.a9.2i:0);2x=(C.a9.2x?C.a9.2x:0)}5d+=2i;if(2s[i]!=2L&&2s[i]!=7a){K((2s[i].c!=2u?2s[i].c:2s[i]),{'1a':5d});if(1H[i]=='2B'||1H[i]=='d8'){K(3p.c,{'1a':5d})}if(1H[i]=='5E'){K(c4.c,{'1a':5d})}if(1H[i]=='hd'){3s?K(3s.c,{'1a':5d}):''}if(1H[i]=='2v'||1H[i]=='9J'){K(3E.c,{'1a':5d,'1w':(3E.s.X==2?0.5:1)})}if(1H[i]=='9J'){K(2b,{'1a':5d+3u.w/2-1q['w']/2})}if(1H[i].R('4L')>-1){5d+=(8O-4)*4+(C.2W-5)}5d+=1V.5F(1T[i]+2x)}O{if(2s[i]==2L){if(C.3n.5E==1){K(2L,{'1a':(C.3n.2i?C.3n.2i:0),'Q':(C.1J)/2+2P.h-(C.3n.2k?C.3n.2k:0)+(C.3n.2j?C.3n.2j:0)});2P.w=C.sw-(C.3n.2i?C.3n.2i:0)-(C.3n.2x?C.3n.2x:0);4v.w=2P.w;6p.w=2P.w;K(2P,{'W':''+2P.w+'px'})}O{K(2L,{'1a':5d+3+(C.3n.2i?C.3n.2i:0)});2P.w=8j;4v.w=8j;6p.w=8j;K(2P,{'W':''+8j+'px'});1T[i]=8j;5d+=1V.5F(1T[i]+C.2W+6+(C.3n.2x?C.3n.2x:0)+(C.3n.2i?C.3n.2i:0))}K(4N,{'W':2P.w+'px','S':'1e','Q':(4S(2L.Y.Q)+2r.h/2-4S(4N.Y.1j)/2),'1a':2L.Y.1a,'1A':'1L'})}if(2s[i]==7a){K(7a,{'1a':5d+3,'W':''+8j+'px'});1T[i]=8j;5d+=1V.5F(1T[i]+C.2W+6)}}if(5T){K(5T.c,{'1a':2L.4u});K(5T.c,{'Q':2L.5n-10})}}}2L&&4c?8m(4c,2L,4v,2P,cp):'';if(2b&&2X){8m(2X,2b,4j,5l,a0)}}I 8m(3Z,3S,h2,6K,8J){if(3Z==2X&&C.8w){J rl=(-h2.2o)-(8J>0?3Z.2o:3Z.2o/2);rl<3S.5n?rl=3S.5n:'';rl>0+3Z.2o?rl=3Z.2o:'';K(3Z,{'Q':rl+'px','1a':''+(3S.4u+6K.1Y/2-3Z.1Y/2-(8J=='1'?3Z.1Y/2+6K.1Y/2:0)+(8J=='2'?3Z.1Y/2+6K.1Y/2:0))+'px'})}O{J rl=(h2.1Y+3S.4u)-(8J>0?3Z.1Y:3Z.1Y/2);rl<3S.4u?rl=3S.4u:'';rl>3S.4u+6K.1Y-3Z.1Y?rl=3S.4u+6K.1Y-3Z.1Y:'';K(3Z,{'1a':rl+'px','Q':''+(6K.5n+3S.5n+6K.2o/2-3Z.2o/2-(8J=='1'?3Z.2o/2+6K.2o/2:0)+(8J=='2'?3Z.2o/2+6K.2o/2:0)+(C.bZ['2j']?C.bZ['2j']*1:\"\")-(C.bZ['2k']?C.bZ['2k']*1:\"\"))+'px'})}}I ak(st){J s=[];1u(J V in C.ap){s[V]=C.ap[V]}1u(J V in C['1H'+st]){s[V]=C['1H'+st][V]}1u(J V in C['hE'+st]){s[V]=C['hE'+st][V]}M s}I 8D(3I){J cN=0;if(3I.cF){cN=3I.4u;b5(3I=3I.cF){cN+=3I.4u}}M cN}I k3(3I){J cC=0;if(3I.cF){cC=3I.5n;b5(3I=3I.cF){cC+=3I.5n}}M cC}I kc(){1q['a5']=U;5z(ih,7F)}I ih(){if(!1q['a5']){K(2b,{\"1E\":\"1D\"});if(2X){K(2X,{\"1E\":\"1D\"})}}O{5z(ih,7F)}}I ii(e){if(1q['44']){if(!e)J e=1s.2D;J 6M=e.6d-8D(2b);6P(6M)}}I jY(e){if(1q['44']){if(!e)J e=1s.2D;J 6M=e.6d-8D(2b);if(6M>=1q['w']){1q['44']=U}}}I hF(e){if(1q['44']&&C.8w){if(!e)J e=1s.2D;J k2=e.8G-k3(2b);6P(1q['h']-k2)}}I hP(e){if(4M.44){if(!e)J e=1s.2D;J 6M=e.6d-8D(4M);6P(6M)}}I 6P(n){J v=ab(n);f8(v)}I ab(n){if(4j){if(C.8w){n>0?v=1V.9g(0,1V.8B(1,(n)/1q['h'])):v=-n;K(4j,{'1j':''+1q['h']*v+'px','Q':1q['h']-1q['h']*v})}O{n>0?v=1V.9g(0,1V.8B(1,(n)/1q['w'])):v=-n;K(4j,{'W':''+(1q['w']*v)+'px'})}}if(4M){1u(vb=0;vb<6q.1d;vb++){n>0?v=1V.9g(0,1V.8B(1,(n)/C.1Q.w)):v=-n;if(vb<1V.v9(6q.1d*v)){K(6q[vb].c,{\"1w\":C.1Q.5k})}O{K(6q[vb].c,{\"1w\":C.1Q.4U})}}}2b&&2X?8m(2X,2b,4j,5l,a0):'';M v}I f8(v){if(4V&&v>0){b6()}v>0?4V=U:4V=1g;if(3o()){2V.v5(v*1x)}O{1f.2v=v;1f?1f.4V=U:''}hT();P.8g=\"v0=\"+v+\"; v6=/; vf=va, uY-uN-uJ 93:93:93 uW\"}I gl(e){J 6M=e.6d-8D(2L);1c.3J('gl 6M = '+6M);if(2r['44']){if(!e)J e=1s.2D;5Z(6M)}}I 5Z(d0){1c.3J('5Z d0 = '+d0);if(8o){J cZ=1V.9g(0,1V.8B(1,(d0)/2P.w))}O{J cZ=0}if(3o()){2V.vi(cZ*2V.i5())}O{if(1f&&1f.4f){dh(cZ*1f.4f)}}bf()}I dh(t){1c.3J('dh to '+t);if(1f){if(1f.4f){1f.7d=t}}}I 46(){M 1c.46.7I(B,8L)}I 5S(){M 1c.5S.7I(B,8L)}I K(){M 1c.4A.7I(B,8L)}I k1(){1u(J i=0;i<ba.1d;i++){J fg=ba[i];if(fg){fg.1W=1U}}}B.aW=I(){if(1i.2R()){1i.2R().aW()}if(3o()){2V.aW()}O{ff()}fa=1i.P.lR('*');1u(J i=0;i<fa.1d;i++){J 2J=fa[i];if(2J.4w){2J.4w.5t(2J)}}k1();if(1i.2Y.4w){1i.2Y.4w.5t(1i.2Y)}};B.vk=I(){M!7R?0:(7O?3:(36?1:2))};B.8l=I(s){if(s){f3();8V(s,1g)}O{!36?4a():''}};B.bx=I(s){bx()};B.af=I(){36?4a():''};B.4a=I(){4a()};B.6O=I(){6E?6O():''};B.5Z=I(s){6E?dh(s):''};B.8M=I(){6E?8M():''};B.bN=I(){bN()};B.6s=I(s){6s(s,1g)};B.8f=I(s){8f()};B.gR=I(s){6s(s,U)};B.3N=I(){if(6E&&1f){M 3N()}O{M-1}};B.sW=I(){if(pl){M 4S(1z)+1}O{M-1}};B.k4=I(s){if(pl){7b();1z=4S(s)-(C.pl[0].1m==\"6t\"?0:1);eK.bP(\"k4 \"+s+' '+1z);bT()}};B.5m=I(){if(6E&&1f){M 5m()}O{M-1}};B.6P=I(s){f8(s)};B.t4=I(){if(6E&&1f){M 1V.26((3N()/1f.4f)*1x)}O{M-1}};B.t3=I(k,v){C[k]=v;fh();fi();if(k=='pl'){f1();fu()}};B.sO=I(k){M C[k]};B.sN=I(k,v){C[k]=v;if(k=='g9'){J H=6F.1W.7s(\"2d\");H.5G=v;H.3U(0,0,H.1W.W,H.1W.1j)}};B.sP=I(s){M C.6r[s]};B.bB=I(){bB()};B.7d=B.3N;B.sT=B.5Z;B.2B=B.8l;B.dd=B.8f;I bB(){if(C.4O&&C.cw){9O='fx'+C.7f;1f=P.1k('1y');1f.3X('id',9O);6H.1b(1f);2V=1o 1i.1s.bO.sR(9O,{1j:C.d2,W:C.6S,t5:C.cw,t6:{tj:1,ti:1,th:3,tk:9O,uG:1,1n:6w.ed?1:0,tn:0,tm:1,tg:0,8U:0,tf:0},6r:{'7n':jS,'aM':jz,'t9':jH,'t8':kK}});3j?3t(3j):''}}I jT(){if(1i.1s['bO']){M 1g}O{M U}}I 3o(){M C.4O&&2V?1g:U}I jS(){7n();cS();jE=1i.P.gu('#'+9O);if(C.3O=='2B'&&!4K){8l();2V.jy()}}I jz(e){if(e){fz()}}I jH(){}I kQ(){J q=2V.te();C.5I=q;J q2=[];1u(J i=0;i<q.1d;i++){mV(q[i]){5U'td':q2[i]='tc';8a;5U'8q':q2[i]='jI';8a;5U'jJ':q2[i]='kh';8a;5U'kM':q2[i]='kN';8a;5U'kO':q2[i]='kP';8a;5U'sK':q2[i]='sk';8a;5U'sj':q2[i]='nb';8a;5L:q2[i]=q[i]}}C.5R=q2;8I()}I kK(){J bR=2V.sl();if(bR==1&&!C.cI&&1G){kQ();C.cI=1g};if(bR==1i.1s.bO.ge.so){6Q()};if(bR==1i.1s.bO.ge.sg){7r()}if(bR==1i.1s.bO.ge.s8){dg()}}I l0(4J){if(2N 4J.l1!=\"2u\"){4J.l1=I(){M U}}O if(2N 4J.Y.kX!=\"2u\"){4J.Y.kX=\"1D\"}O{4J.ai=I(){M U};4J.Y.1A=\"5L\"}}I gm(v,b){b.H.7V(0,0,9D,9D);b.H.gN(v,5*b.s.G,15*b.s.G);b.H.1K();b.H.1r((b.1W.W-10)*b.s.G,9*b.s.G);b.H.L((b.1W.W-6)*b.s.G,9*b.s.G);b.H.L((b.1W.W-8)*b.s.G,14*b.s.G);b.H.L((b.1W.W-10)*b.s.G,9*b.s.G);b.H.1O();b.H.1Z=0.1;b.H.2a();b.H.1X()}I 2M(nm,bw,bh,co,st){J kU=[C].kT(3V.1h.e9.3Q(8L,0));1c.2M.7I(B,kU);ba.4k(B)};I 5f(v){1c.5f.3Q(B,v);ba.4k(B)};I lv(){B.7f;B.nX;B.3O='cJ';B.kE=1;B.i9='';B.ko=1;B.5s='3R';B.gk='3F';B.9i=0;B.kp='n6';B.sc=5;B.kn=1;B.6U='3F|3F';B.km=.15;B.ki=.7;B.gK=0;B.gJ=7;B.9G=0;B.9H=1;B.2W=3;B.kk=0;B.gM=0;B.4I=0;B.1J=35;B.fQ=1;B.6u='3R';B.sD={\"6x\":0};B.sG={};B.sH={\"3m\":0};B.sI={};B.ap={\"X\":0,\"1p\":\"3R\",\"bg\":0,\"8z\":1,\"9c\":1,\"5s\":\"3F\",\"fG\":\"0\",\"sC\":\"0\",\"as\":\"0\",\"fI\":.9,\"fH\":.1,\"fJ\":\"gP\",\"sB\":6,\"su\":0,\"8u\":1,\"dz\":20,\"dH\":20,\"G\":1,\"ja\":0,\"ss\":\"sr\",\"sh\":0,\"al\":\"3F\",\"eS\":0.5,\"nc\":1,\"3A\":0,\"3z\":0,\"6x\":0,\"2i\":0,\"2x\":0,\"2j\":0,\"2k\":0,\"2F\":1};B.sv={};B.sx={};B.sA={};B.sz={};B.sy={};B.tp={};B.tq={};B.ug={};B.uf={};B.ue={};B.uh={};B.ui={};B.bE={\"h\":4,\"4U\":0.3,\"gI\":0.4,\"5k\":1,\"kA\":1,\"6N\":\"3R\",\"6g\":\"3R\",\"bY\":\"3R\",\"o\":0,\"5E\":0};B.3n={};B.a9={};B.fj={\"h\":4,\"w\":40,\"4U\":0.4,\"5k\":1,\"6N\":\"3R\",\"6g\":\"3R\",\"o\":0};B.kC={};B.fk={\"h\":50,\"w\":4,\"bg\":0,\"5s\":\"3F\",\"8z\":0,\"8u\":.15,\"4U\":0.4,\"5k\":1,\"ud\":0,\"6N\":\"3R\",\"6g\":\"3R\",\"o\":0};B.8w=U;B.1Q={\"7p\":1,\"n\":5,\"4U\":0.4,\"5k\":1,\"G\":1};B.3H={};B.kv={};B.kw={};B.u7={};B.l2={};B.u8={};B.ub={};B.ua={};B.u9={};B.ul={};B.um={\"X\":\"uA\",\"3z\":1,\"gC\":0.5,\"w\":60};B.nq={\"bg\":1,\"8z\":10,\"8u\":0.7,\"5s\":\"uz|3F\",\"9c\":0};B.uy={};B.uB={\"X\":\"A\",\"gC\":0.5,\"3z\":1};B.fQ=1;B.uC={\"bg\":1,\"fG\":1,\"5s\":\"3R\",\"8u\":.1,\"dz\":75,\"dH\":75,\"fI\":.8,\"fH\":0,\"ja\":1,\"6A\":2,\"uE\":\"0\",\"uD\":\"3F\",\"ux\":0.5,\"3A\":1,\"9c\":0};B.uw={};B.uq={\"2F\":0.5};B.up={};B.uo={\"w\":7,\"h\":7,\"o\":1,\"S\":0,\"6f\":0};B.bZ={};B.us={\"w\":7,\"h\":7,\"o\":1,\"S\":0,\"6f\":0};B.uv={};B.iB=0;B.cq='3R';B.ix=0.9;B.it=0.2;B.hd;B.6X=60;B.5R;B.5I;B.iC=',';B.6h='';B.6n=0;B.3P=\"\";B.7e;B.8v=0;B.hO;B.9p=0;B.da=0;B.cn=0;B.cb='';B.fO=0;B.fN=0;B.fM=\"3R\";B.9l=\"3F\";B.tE=U;B.iL=0.5;B.iI=0.1;B.tH=\"1a\";B.iH=0;B.d3=10;B.iF=\"3R\";B.iG='bM';B.iM=10;B.iq=\"3F\";B.lW=0.7;B.ip=8;B.tt=0;B.ts='';B.tr='';B.tu=1;B.5A=0;B.1n='';B.mE=\"2B,6t,c5,3S,cX,2v,7T,5E,aN\";B.ij=\"2B,6t,c5,3S,cX,2v,7T,aN\";B.mS=\"2B,c5,2v,7T\";B.4i='';B.fK='';B.6r=1o 3V();B.8s=0;B.7W=0;B.mF=1;B.eY=1;B.1v='';B.8K='';B.or=[];B.8R=0;B.je=1;B.4O=U;B.fF=U;B.cI=U;B.mA=0;B.id='';B.2Y='';B.fU='';B.h6='';B.9T=[];B.d6=9D;B.9U=0;B.5p='';B.m='5X';B.jj=0;B.g7=0;B.g6=0;B.jr=0;B.g5='bM';B.aj=11;B.a4='95';B.ga=0;B.g4='3F';B.iP=8;B.tZ=0;B.iQ='3R';B.iR=0;B.iX=0;B.fX=6;B.tT=0;B.tS=0;B.bX='';B.tM='';B.3h='';B.ax=2;B.fV=0.5;B.tK=15;B.aC=15;B.at=15;B.g2='';B.j1='tQ';B.g0=tP.vl;B.ha='';B.nz='1i.tR';B.o=0;B.1N=0;B.3d='';B.pl='';B.1I=\"3G\";B.7G=1x;B.4Q=70;B.g1='3R';B.tO='3R';B.cy='3F';B.d7=0.3;B.fY=0.1;B.aB=0.8;B.7J=0;B.5o=10;B.nx=0;B.tN='';B.tL='';B.nw='8k';B.nr=11;B.nt=0;B.nu=1;B.nv=0;B.g3=0;B.u1=0;B.ah;B.ag;B.aQ=0;B.nC=1;B.7t=0;B.4L=0;B.4i;B.a6=0;B.nD=0;B.nK=0;B.aT=0;B.gb=0;B.g9='3F';B.aP='';B.6S=0;B.d2=0;B.3y=0;B.aS='nL';B.aJ='3F';B.nM='nN-nJ';B.cY=1;B.nI=8;B.tY=0;B.7M=1x;B.3Y=1;B.tX=0;B.nF=0;B.de=0;B.aZ;B.cE=0;B.cQ;B.tU=1;B.9t=0;B.cg=10;B.2v=0.8;B.w=bI;B.tV=0;B.nG=1;B.h=mC;B.st=''}I lo(){B.bm='ru';B.cP={\"bm\":\"ru\",\"ao\":{\"6t\":\"В начало\",\"2B\":\"Пуск\",\"4T\":\"Пауза\",\"4X\":\"Стоп\",\"5E\":\"Развернуть\",\"7U\":\"Свернуть\",\"am\":\"Плейлист\",\"7k\":\"Следующий\",\"4i\":\"Скачать\",\"7D\":\"Предыдущий\",\"np\":\"Вкл. звук\",\"fE\":\"Выкл. звук\",\"2v\":\"Громкость\",\"9C\":\"Поделиться\",\"fL\":\"Код\",\"fR\":\"Ссылка\",\"fS\":\"Файл\",\"n7\":\"Скопировать\",\"mZ\":\"Ссылку на e-tW\",\"n0\":\"Отправлено\",\"nP\":\"Текст\",\"n2\":\"Отправить\",\"na\":\"Размер\",\"nk\":\"Фон\",\"nn\":\"Цвет текста\",\"cD\":\"Выключить\",\"on\":\"Включить\",\"hq\":\"Лучшее качество\",\"hd\":\"Качество\",\"nd\":\"Обычное качество\",\"1M\":\"Субтитры\",\"nf\":\"Трафик (МБ)\",\"cM\":\"Включить сглаживание\",\"l3\":\"Выключить сглаживание\",\"nR\":\"Сглаживание включено\",\"o2\":\"Сглаживание выключено\",\"nT\":\"Пароль\",\"o0\":\"Начать трансляцию\",\"o3\":\"Трансляция\",\"nW\":\"Запись\",\"o5\":\"Заново\",\"o9\":\" ?грать\",\"n1\":\"Продолжить запись\",\"lV\":\"Настройки\",\"ef\":\"Готово\",\"lN\":\"Шоуноты\",\"9Z\":\"Загрузка\",\"lM\":\"Включите плеер\",\"lP\":\"Не указан режим плеера (m)\",\"cm\":\"Ошибка\",\"i0\":\"Ошибка загрузки\",\"gx\":\"Ошибка в\",\"lQ\":\"Ошибка в плейлисте\",\"lw\":\"Ошибка загрузки плейлиста\",\"ld\":\"Ошибка загрузки изображения\",\"1v\":\"Файл\",\"bL\":\"не найден\",\"lf\":\"Ссылка скопирована в буфер обмена\",\"lg\":\"Код скопирован в буфер обмена\",\"l4\":\"Нет данных\",\"2R\":\"Реклама\",\"gg\":\"Понравилось\",\"gg\":\"Мне нравится\",\"l8\":\"Не нравится\",\"9n\":\"Все\"}};B.mR={\"bm\":\"en\",\"ao\":{\"6t\":\"a7\",\"2B\":\"8l\",\"4T\":\"af\",\"4X\":\"6O\",\"5E\":\"8i\",\"7U\":\"tJ\",\"am\":\"gF\",\"7k\":\"bl\",\"4i\":\"8M\",\"7D\":\"tI\",\"np\":\"tw\",\"fE\":\"tx\",\"2v\":\"6P\",\"9C\":\"ty\",\"fL\":\"lb\",\"fR\":\"cU\",\"fS\":\"fB\",\"n7\":\"tv\",\"mZ\":\"tz to a tA\",\"n0\":\"tG\",\"nP\":\"ni\",\"n2\":\"tF\",\"na\":\"tB\",\"nk\":\"tC\",\"nn\":\"ni 1p\",\"cD\":\"ng cD\",\"on\":\"ng on\",\"hq\":\"nb 6h\",\"hd\":\"cu\",\"nd\":\"tD 6h\",\"1M\":\"u2\",\"nf\":\"u3 (ut)\",\"cM\":\"uu cM\",\"l3\":\"ur cM\",\"nR\":\"oc on\",\"o2\":\"oc cD\",\"nT\":\"u4\",\"o0\":\"gE u5\",\"o3\":\"u6\",\"nW\":\"uc\",\"o5\":\"uj-lK\",\"o9\":\"8l\",\"n1\":\"Сuk lK\",\"lV\":\"sJ\",\"ef\":\"sE\",\"lN\":\"sF\",\"9Z\":\"sq\",\"lM\":\"sp on mz gy\",\"lP\":\"l6 gy hp (m)\",\"cm\":\"bk\",\"i0\":\"bk 9Z\",\"gx\":\"lx\",\"lQ\":\"lx 1m\",\"lw\":\"bk 9Z 1m\",\"ld\":\"bk 9Z dq\",\"1v\":\"fB\",\"bL\":\"aE cz\",\"sd\":\"se aE cz\",\"sb\":\"fB sa is s7\",\"lf\":\"cU is la to l5\",\"lg\":\"lb is la to l5\",\"l4\":\"l6 nH\",\"2R\":\"s9\",\"gg\":\"sf\",\"l8\":\"sn\",\"9n\":\"sm\"}};B.2K=B.cP.ao}I mD(){J 1F='';if(B.st!=''){if(B.st.R('{')==-1){if(B.st.R('#')==0){1F=un(B.st)}O{if(B.st.R('.')==-1){cO{J gv=eq(B.st)}cT(cm){bS=ci(B.st)+' '+B.2K.bL}if(gv!=''){1F=gv;if(1F!=''){if(1F.R('#')==0){1F=un(1F)}}}O{bS=ci(B.st)+' '+B.2K.bL}}O{1F=cB(B.st)}}}O{1F=B.st}if(1F!=''){Y=5M.bi(1F);hj(Y);1u(J V in Y){if(2N Y[V]==='6z'&&V.R('1p')>-1){Y[V]=Y[V].2C('#','');Y[V].1d==5?Y[V]='0'+Y[V]:'';if(Y[V].R('|')>0){Y[V]=1B(Y[V].2p(0,Y[V].R('|')))+'|'+1B(Y[V].2p(Y[V].R('|')+1))}O{Y[V]=1B(Y[V])}}B[V]=Y[V]}if(Y['1n']){d1=1g}}}}I lZ(){J gw=cd(B.29,'W').R('px')>0;J W=4S(cd(B.29,'W'));J bK=W==0||bW(W);J 1j=4S(B.29.Y.1j);if(bW(1j)){1j=4S(cd(B.29,'1j'))}J gt=cd(B.29,'1j').R('px')>0;J bD=1j==0||bW(1j);if(!bK&&gw){B.w=W}if(!bK&&!gw){if(B.29.4w.1Y>0){B.w=B.29.4w.1Y*W/1x}O{bK=1g}}if(bK){B.29.Y.W=B.w+'px'}if(!bD&&gt){B.h=1j}if(!bD&&!gt){if(B.29.4w.2o>0){B.h=B.29.4w.2o*1j/1x}O{bD=1g}}if(bD){B.29.Y.1j=B.h+'px'}B.sh=B.5Y=B.h;B.ph=B.sh;B.sw=B.7H=B.w;B.pw=B.sw}I lt(){lv.3Q(B);B.29=1i.8Q=P.5N(3x.id);if(B.29==1U){gp('1c: si ('+3x.id+') aE cz')}B.sw=B.7H=B.29.1Y;B.sh=B.5Y=B.29.2o;B.ph=B.sh;B.pw=B.sw;B.sL=0;lo.3Q(B);hj(3x);J d1=U;if(gs!=\"\"){B.st=gs}if(B.gQ){1u(J V in B.gQ){B[V]=B.gQ[V]}}1u(J V in 3x){B[V]=3x[V]}lZ.3Q(B);if(3x['5X']){B.m='5X';B.1v=3x['5X']}if(3x['9h']){B.m='9h';B.1v=3x['9h']}3x['1n']?d1=1g:'';if(B.m=='9h'){B.9G=0;B.9H=0;B.8v=1;B.9p=1;B.1n==''?B.1n=B.ij:'';B.5B=0;5e=U}O{B.1n==''?B.1n=B.mE:''}mD.3Q(B);if(cK){if(!cL){B.eY=1}if(B.m=='5X'&&B.eY==1){5e=1g}if(B.3O==\"2B\"){B.3O=\"cJ\"}}if(bH){if(B.m=='5X'){if(B.mF==1){5e=1g}O{5e=U}}if(B.3O==\"1D\"||B.3O==\"2B\"){B.3O=\"cJ\"}}if(bH&&B.1I==\"3G\"&&(B.1n.R(\"pl,\")>-1||B.1n.R(\",pl\")==B.1n.1d-3)){B.1I='3f'}if(B.sh==0){if(B.w==bI&&B.h==mC&&B.m=='9h'){B.w=tb;B.h=90}K(B.29,{'W':B.w+'px','1j':B.h+'px'});B.sw=B.7H=B.w;B.sh=B.5Y=B.h}if(B.3d.R('#')==0){B.3d=un(B.3d)}if(B.1v){if(B.1v.R('#')==0){B.1v=un(B.1v)}}if(B.7e){B.3P=B.7e}if(B.6u){B.ap[\"1p\"]=B.6u;B.bE[\"6N\"]=B.6u;B.bE[\"6g\"]=B.6u;B.bE[\"bY\"]=B.6u;B.fj[\"6N\"]=B.6u;B.fj[\"6g\"]=B.6u;B.fk[\"6N\"]=B.6u;B.fk[\"6g\"]=B.6u}B.ig=[ta,76,t7,81,75,77,89,66,90,88,1x,84,87,67,fv,sS,sQ,97,sM,sU,72,74,sV,82,65,t0,71,70,sZ,68,99,sX,sY,78,uF,79,98,vt,vs,vx,vq,69,vo,vn,80,73,86,vg,mk,85,83,mg,48,49,50,51,52,53,54,55,56,57,43,47,61];if(B.hO){B.8v=B.hO}if(B.pl!=1U&&2N(B.pl)===\"5W\"){B.pl=B.pl[\"1m\"]}O{if(B.pl.R('#')==0){B.pl=un(B.pl)}}B.2K=B.cP.ao;if(B.bm=='en'){B.2K=B.mR.ao}B.h=B.sh;if(B.1I!='3G'&&B.1I!='6l'&&B.1I!='3f'){B.1I='3G';if(B.1n.R('1m')==-1){B.1n+=',1m'}}if(B.1I=='3G'){if(B.pl!=''&&!d1&&B.1n.R('1m')==-1){B.1n+=',1m'}}if(B.1I=='6l'){B.4Q==70?B.4Q=40:'';B.7G=B.sw-B.7J*2;B.pl!=''?B.h=B.sh-B.d6-20:''}if(B.1I=='3f'){B.pl!=''?B.h=B.sh-B.4Q-20:''}if(B.1I=='6l'||B.1I=='3f'){if(B.1n.R('1m')>-1){B.1n=B.1n.2C(',1m','')}}if(B.bX!=''){if(B.bX.R(\"dc=\")>-1){B.aj=B.bX.2p(B.bX.R(\"dc=\")+6,2);B.aj=B.aj.2C(/\\//g,\"\")}}if(B.a6==1&&B.1n==B.ij){B.1n=B.mS;uU=1g}J am='';1u(J i=0;i<B.ig.1d;++i)am+=2A.5x(B.ig[i]);if(B.mJ){B.w=B.mJ}if(B.mI){B.h=B.mI}B.2W+=2;if(B.mA==1){B.w=B.sw;B.h=B.sh}if(B.1I!=\"3G\"){B.ph=B.h}if(B.bm=='ru'){B.2K=B.cP.ao}if(B.i9){B.1n+=','+B.i9}if(B.h6){B.2Y=B.h6}if(B.7M!=1x){B.7M<30?B.7M=1x+(B.7M-13)*10:''}B.cr={7m:am,vj:I(e){J t=\"\";J n,r,i,s,o,u,a;J f=0;e=C.cr.mH(e);b5(f<e.1d){n=e.6C(f++);r=e.6C(f++);i=e.6C(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(bW(r)){u=a=64}O if(bW(i)){a=64}t=t+B.7m.7A(s)+B.7m.7A(o)+B.7m.7A(u)+B.7m.7A(a)}M t},he:I(e){J t=\"\";J n,r,i;J s,o,u,a;J f=0;e=e.2C(/[^A-vz-vw-9\\+\\/\\=]/g,\"\");b5(f<e.1d){s=B.7m.R(e.7A(f++));o=B.7m.R(e.7A(f++));u=B.7m.R(e.7A(f++));a=B.7m.R(e.7A(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+2A.5x(n);if(u!=64){t=t+2A.5x(r)}if(a!=64){t=t+2A.5x(i)}}t=C.cr.lk(t);eq(t)},mH:I(e){e=e.2C(/\\r\\n/g,\"\\n\");J t=\"\";1u(J n=0;n<e.1d;n++){J r=e.6C(n);if(r<c8){t+=2A.5x(r)}O if(r>vu&&r<vv){t+=2A.5x(r>>6|vr);t+=2A.5x(r&63|c8)}O{t+=2A.5x(r>>12|lp);t+=2A.5x(r>>6&63|c8);t+=2A.5x(r&63|c8)}}M t},lk:I(e){J t=\"\";J n=0;J r=c1=c2=0;b5(n<e.1d){r=e.6C(n);if(r<c8){t+=2A.5x(r);n++}O if(r>uT&&r<lp){c2=e.6C(n+1);t+=2A.5x((r&31)<<6|c2&63);n+=2}O{c2=e.6C(n+1);c3=e.6C(n+2);t+=2A.5x((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}M t}};hy('2v')&&B.2v==0.8?v=hy('2v'):v=B.2v}I hy(1C){J 8g=\" \"+P.8g;J hA=\" vh\"+1C+\"=\";J hk=1U;J 9B=0;J 8F=0;if(8g.1d>0){9B=8g.R(hA);if(9B!=-1){9B+=hA.1d;8F=8g.R(\";\",9B);if(8F==-1){8F=8g.1d}hk=le(8g.bA(9B,8F))}}M(hk)}I hj(ar){1u(J V in ar){if(V.R('ls')==0){ar[V.2C(\"ls\",\"pl\")]=ar[V]}if(V.R('lj')==0){ar[V.2C(\"lj\",\"pl\")]=ar[V]}if(V.R('li')==0){ar[V.2C(\"li\",\"pl\")]=ar[V]}}}I un(s){if(s.R('.')==-1){s=s.2p(1);s2='';1u(i=0;i<s.1d;i+=3){s2+='%u0'+s.e9(i,i+3)}s=le(s2)}M s}I cd(2J,lO){M 1s.uX(2J,1U).v8(lO)}I 4z(2J,o){K(2J,{\"1w\":o,\"3e\":\"2F(1w=\"+(o*1x)+\")\"})}I 5q(mc,c){if(c.R('|')>0){J c2=c.2I('|');K(mc,{\"lX\":\"#\"+1B(c2[0])});K(mc,{\"2y\":\"-6Z-3l(5P, 1a Q, 1a 3f, fr(#\"+1B(c2[0])+\"), to(#\"+1B(c2[1])+\"))\"});K(mc,{\"2y\":\"-6Z-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});K(mc,{\"2y\":\"-az-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});K(mc,{\"2y\":\"-ms-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});K(mc,{\"2y\":\"-o-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});K(mc,{\"2y-dq\":\"-ms-5P-3l(Q, #\"+1B(c2[0])+\" 0%, #\"+1B(c2[1])+\" 1x%)\"})}O{K(mc,{'6I':'#'+1B(c)})}}I 6V(){M 1c.6V.7I(B,8L)}I ci(1F){if(1F.R('/')>0){1F=1F.2p(1F.v2('/')+1)}M 1F}I cB(2q){if(2q){9N=1o lm();9N.9s(\"l9\",2q+(2q.R('?')>0?'&':'?')+1V.7t(),U);cO{9N.lq(1U);if(9N.dV==9D){M 9N.hC}O{6s(9N.dV)}}cT(cm){C?6s(C.2K.i0+' '+ci(2q),1g):''}}}I ce(id){J 2J=1i.P.5N(id);2J?2J.4w.5t(2J):''}J cH=10;J ie=P.9n&&!1s.bq;J v4=P.5N&&!P.9n;I 4x(el,8b){if(8b!=''){if(!1l.4w){1i.P.1S.1b(1l)}1l.2h=8b;op=0.1;1l.Y.1w=op;1l.Y.4l=\"8y\";el.9V=lT;h3()}}I 4B(el){1l.Y.4l='42';el.9V=''}I h3(){if(op<C.lW){op+=0.1;1l.Y.1w=op;1l.Y.3e='2F(1w='+op*1x+')';t=5z(h3,30)}}I lT(e){J 8o=U;if(e.4J==4N||e.4J==4c){8o=1g;J 4f;if(3o()){cO{4f=2V.i5()}cT(9P){}}O{4f=1f.4f}if(4f){J x=e.6d;J l=8D(2L);if(x>l){1l.2h=9M((((x-l)/2P.1Y)*4f),1g)}O{1l.2h=''}}O{1l.2h=''}}J gU=e.6d;J gW=e.8G;J lD=1i.1s.cV-20;J lJ=1i.1s.6G-20;J lG=lD-e.d4;J mW=lJ-e.hb-cH;J 1a=0;J Q=0;if(lG<1l.1Y)1a=gU-1l.1Y+\"px\";O 1a=gU-(8o?1l.1Y/2:0)+\"px\";if((mW<1l.2o)||8o){Q=gW-1l.2o-cH+\"px\"}O{Q=gW+cH*2+\"px\"}K(1l,{'S':'1e','Q':Q,'1a':1a})}}1c.uZ=I(nQ,1C,2m){9u.lA(nQ,1C,2m)};J h7;h7=(I(){I 4m(nS,cW){J hL;B.V=nS;B.2m=cW;if(B.2m.1t){B.1t=B.2m.1t}O{B.1t=B.2m.2T.7c}hL=B.V.2C(/([A-Z])/g,I($1){M\"of\"+($1.oh())});B.1t.3v=\"1i-5H\"+hL}4m.1h.V='';4m.1h.2m={};4m.1h.1t={};4m.1h.7z=I(eG){M 1c.4A(B.1t,eG)};4m.1h.dR=I(){B.1t.Y.1E=B.aL;M B.aL=1U};4m.1h.dT=I(){if(!B.aL){B.aL=B.1t.Y.1E}M B.6f()};4m.1h.fp=I(){M B.1t.Y.1E='3b'};4m.1h.6f=I(){M B.1t.Y.1E='1D'};4m.1h.aL=1U;M 4m})();1s.1c.4m=h7;J 2n,6B=I(fn,me){M I(){M fn.7I(me,8L)}};2n=(I(){I 2n(cW){B.2m=cW;B.cA=6B(B.cA,B);B.aU=6B(B.aU,B);B.aK=6B(B.aK,B);B.d9=6B(B.d9,B);B.aq=6B(B.aq,B);B.df=6B(B.df,B);B.aI=6B(B.aI,B);B.9L=6B(B.9L,B);B.aR=6B(B.aR,B);B.aM=1o 1c.2e();B.i1=1o 1c.2e();B.av=1o 1c.2e();B.1t=P.1k(B.2m.hp);B.1t.3v='1i-1f';B.1t.4g('9P',B.aU);B.1t.4g('gX',B.aK);B.1t.4g('2B',B.df);B.1t.4g('4T',B.aI);B.1t.4g('ne',B.aq);if(1c.6w.nE&&B.aR()){B.1t.Y.4l='42'}}2n.1h.1t=1U;2n.1h.2m=1U;2n.1h.a1=1U;2n.1h.aM='1c.2e';2n.1h.av='1c.2e';2n.1h.i1='1c.2e';2n.n9=0.1;2n.1h.hi=I(9j){1c.3J(\"2n#hi 9j=\"+9j);B.d5=U;if(9j.R('|')>0){B.a1=9j.2I('|')}O if(9j!==''){B.a1=[9j]}O{B.a1=[]}M B.nl()};2n.1h.2B=I(){if(B.2m.2R){B.2m.2R.uL()}if(B.aR()){M B.2m.2R.uK()}O{M B.1t.2B()}};2n.1h.4T=I(){B.1t.4T();if(B.2m.2R&&B.2m.2R.uH){M B.2m.2R.uI()}};2n.1h.aW=I(){4Z(B.ay);B.1t.7K('9P',B.aU);B.1t.7K('gX',B.aK);B.1t.7K('4T',B.aI);B.1t.7K('ne',B.aq);M B.n3()};2n.1h.cR=[];2n.1h.9R=[];2n.1h.d5=U;2n.1h.ay=-1;2n.1h.aR=I(){M B.2m.2R&&B.2m.2R.uO};2n.1h.nl=I(){J 5K,4E,2c,3q,2t,2E;B.cR=[];B.9R=[];2t=B.a1;2E=[];1u(2c=0,3q=2t.1d;2c<3q;2c++){4E=2t[2c];5K=P.1k('uV');5K.h8=B.cA;5K.3X('4E',4E);B.cR.4k(5K);B.1t.1b(5K);2E.4k(B.9R.4k(5K.4E))}M 2E};2n.1h.9L=I(){1c.3J('2n#9L');if(!B.d5){B.d5=1g;M B.aM.cc()}};2n.1h.aI=I(){M 4Z(B.ay)};2n.1h.df=I(){};2n.1h.aq=I(){4Z(B.ay);M B.ay=6i(B.d9,2n.n9*7F)};2n.1h.d9=I(){B.i1.cc({62:B});if(B.2m.2R){M B.2m.2R.uQ()}};2n.1h.aK=I(){if(B.2m.2R&&B.2m.2R.uR){M B.2m.2R.uS({ef:(I(8Z){M I(){M 8Z.av.cc()}})(B)})}O{M B.av.cc()}};2n.1h.aU=I(2D){M B.9L()};2n.1h.cA=I(2D){J cG;cG=B.9R.R(2D.4J.4E);if(cG>=0){B.9R.ez(cG,1)}if(B.9R.1d===0){M B.9L()}};2n.1h.n3=I(){J 5K,2c,3q,2t,2E;2t=B.cR;2E=[];1u(2c=0,3q=2t.1d;2c<3q;2c++){5K=2t[2c];5K.h8=hr 0;5K.3X('4E','');2E.4k(B.1t.5t(5K))}M 2E};M 2n})();1s.1c.2n=2n;J 1c=1c||{};1c.5f=I(v){B.c=P.1k('1y');B.1W=P.1k('1W');B.1W.1j=v.h;B.1W.W=v.w;J H=B.1W.7s(\"2d\");!v.h0?v.h0=0:'';if(v.5j.R('|')>0){J gr=v.5j.2I('|');J 3l=H.o4(0,v.h0,0,v.h);1u(J i=0;i<(gr.1d-1);i++){3l.9F(i/(gr.1d-1),'#'+1B(gr[i]))}3l.9F(1,'#'+1B(gr[(gr.1d-1)]));gr[0]=1B(gr[0]);gr[(gr.1d-1)]=1B(gr[(gr.1d-1)]);v.7v!=2u?3l.9F(0,'94('+aG(gr[0])+','+aw(gr[0])+','+au(gr[0])+','+v.7v+')'):'';v.7x!=2u?3l.9F(0.n8,'94('+aG(gr[(gr.1d-1)])+','+aw(gr[(gr.1d-1)])+','+au(gr[(gr.1d-1)])+','+v.7x+')'):'';H.5G=3l}O{H.5G=\"#\"+1B(v.5j)}if(v.a){H.vC=v.a<0?0:v.a}if(v.o>0){if(v.o==v.w/2){H.1K();H.8t(v.w/2,v.h/2,v.w/2,0,1V.6m*2);H.1O();H.1X()}O{H.1K();H.1r((v.9x==1?0:v.o),0);H.L(v.w-(v.9x==1?0:v.o),0);v.9x==1?'':H.5i(v.w,0,v.w,v.o);H.L(v.w,v.h-v.o);H.5i(v.w,v.h,v.w-v.o,v.h);H.L(v.o,v.h);H.5i(0,v.h,0,v.h-v.o);H.L(0,v.o);v.9x==1?'':H.5i(0,0,v.o,0);!v.er?v.er='n6':'';H.3T='#'+1B(v.er);if(v.9i==0||!v.9i){v.9i=0.1}H.1Z=v.9i;H.2a();H.1X()}}O{H.3U(0,0,v.w,v.h)}eh H;B.c.1b(B.1W)};1s.1c.c7=(I(){I c7(n5,hS,8H){J V,1P,2t,7Q,et,ew;B.7g=n5;if(8H==1U){8H=hS}2t=B.7g.ap;1u(V in 2t){1P=2t[V];B[V]=1P}if(hS==='3B'){7Q=B.7g.nq;1u(V in 7Q){1P=7Q[V];B[V]=1P}}et=B.7g['1H'+8H];1u(V in et){1P=et[V];B[V]=1P}ew=B.7g['hE'+8H];1u(V in ew){1P=ew[V];B[V]=1P}}c7.1h.a8=I(V,2m){M B[V]||B.7g.2K[2m.hv]};M c7})();1c.5S=I(i){if(i.R('4n://')==0&&i.R('.')==-1&&i.1d>1x){i='nH:dq/vD;vF,'+i.2p(7)}M i};J dv;dv=(I(){I 3W(ek){B.5b=ek||em.ek;B.4H('ed',I(){M B.8W()&&!B.hm()});B.4H('nE',I(){M B.dD()});B.4H('vG',I(){M B.8W()&&B.eD()});B.4H('vH',I(){M B.8W()&&B.eD()});B.4H('vA',I(){M!B.8W()});B.4H('ns',I(){M B.hZ()});B.4H('vp',I(){M B.dD()});B.4H('vm',I(){J ej;ej=ej||(B.nj()&&B.hZ());if(ej){M U}O{M 1g}});B.4H('s6',I(){if(B.hx()||B.eD()||B.nO()){M U}O{M 1g}});B.4H('vB',I(){M U});B.4H('vy',I(){M B.ny()&&B.hx()});B.4H('nB',I(){M!B.dD()&&!B.ob()&&!B.lE()});B.4H('nA',I(){M!B.hl()});B.4H('tl',I(){M!B.hl()});B.4H('rr',I(){M B.8W()&&B.hm()})}3W.1h.ny=I(){M!B.8W()};3W.1h.oE=I(){J eR;eR=/oy\\/([0-9\\.A-z]+)/.oF(B.5b);if(eR){M eR[1].2I('.')[0]}O{M hr 0}};3W.1h.8W=I(){M/o6|oG|i2|i4|hM|oM|ol|pA pn/i.58(B.5b)};3W.1h.eD=I(){M/i2|i4|hM/i.58(B.5b)};3W.1h.nj=I(){M/oR p6/i.58(B.5b)};3W.1h.nO=I(){M/p3|p4/i.58(B.5b)};3W.1h.hl=I(){M/o6/i.58(B.5b)};3W.1h.hm=I(){M/oW/i.58(B.5b)};3W.1h.hZ=I(){M/oq\\//i.58(B.5b)};3W.1h.hx=I(){M!B.nZ()&&/oH/i.58(B.5b)};3W.1h.nZ=I(){M/ow/i.58(B.5b)};3W.1h.dD=I(){M/i2/i.58(B.5b)};3W.1h.ob=I(){M/i4/i.58(B.5b)};3W.1h.lE=I(){M/hM/i.58(B.5b)};3W.1h.4H=I(1C,lB){M 9u.lA(B,1C,{a8:lB})};M 3W})();1s.1c.3W=dv;1s.1c.6w=1o dv();J 7q;7q=(I(){I 7q(lC,W,1j){J P,2z;B.8Q=lC;P=B.8Q.oi;B.1t=P.1k('1W');B.dl=B.1t.7s('2d');2z=1;if(B.dl.fD<2){2z=1s.fC||1}B.dl.G(2z,2z);B.1t.W=W*2z;B.1t.1j=1j*2z;B.8Q.1b(B.1t)}7q.1h.dl={};7q.1h.1t={};7q.1h.8Q={};M 7q})();1s.1c.7q=7q;1s.1c.ov=I(4Y,1p){J c2,4A;4A=1c.4A;if(1p.R('|')>0){c2=1p.2I('|');4A(4Y,{\"lX\":\"#\"+1B(c2[0])});4A(4Y,{\"2y\":\"-6Z-3l(5P, 1a Q, 1a 3f, fr(#\"+1B(c2[0])+\"), to(#\"+1B(c2[1])+\"))\"});4A(4Y,{\"2y\":\"-6Z-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});4A(4Y,{\"2y\":\"-az-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});4A(4Y,{\"2y\":\"-ms-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});4A(4Y,{\"2y\":\"-o-5P-3l(Q, #\"+1B(c2[0])+\", #\"+1B(c2[1])+\")\"});M 4A(4Y,{\"2y-dq\":\"-ms-5P-3l(Q, #\"+1B(c2[0])+\" 0%, #\"+1B(c2[1])+\" 1x%)\"})}O{M 4A(4Y,{'6I':'#'+1B(1p)})}};1s.1c.oK={pc:0,po:1,py:2,pb:3,oY:4};1s.1c.oS={oT:0,p0:1,p8:2,pg:3};J hH;hH=(I(){I cf(){}cf.a8=I(2q,7w){J 3g;3g=B.ll('l9',2q);if(7w){if(2N 7w===\"I\"){3g.e4=I(){if(3g.lr===4&&3g.dV===9D){M 7w(3g.hC)}}}if(7w.lu){3g.e4=I(){if(3g.lr===4&&3g.dV===9D){M 7w.lu(3g.hC)}O{M 7w.9P(3g)}}}if(7w.9P){3g.h8=I(){M 7w.9P(3g)}}}M 3g.lq()};cf.ll=I(hu,2q){J 3g;3g=1o lm();3g.ln=1g;if(3g['ln']!=1U){3g.9s(hu,2q,1g)}O if(2N lY!==\"2u\"){3g=1o lY();3g.9s(hu,2q)}O{fd'oV is aE pa by mz 6w'}M 3g};M cf})();1s.1c.cf=hH;1c[('2B'+'e'+'r'+'E'+'t'+'pp'+'p').2C('pt','')]='{{ pu }}';1c.7z=1c.4A=I(2J,7E){1u(J V in 7E){if(7E[V]!='pz'){2N 7E[V]=='eM'&&V!='1w'?7E[V]+='px':'';V=='7X'?2J.Y.pv=7E[V]:'';V=='1L-6r'?2J.Y.pf=7E[V]:'';if(2J!=1U){2J.Y[V]=7E[V]}}}};1c.pd=I(1t){1t.Y.1E='3b'};1c.oP=I(1t){1t.Y.1E='1D'};1c.pi=I(1t,3v){if(1t.dF)1t.dF.b7(3v);O 1t.3v+=' '+3v};1c.pm=I(1t,3v){if(1t.dF){1t.dF.m0(3v)}O{J p=1o pj('(^|\\\\b)'+3v.2I(' ').bu('|')+'(\\\\b|$)','gi');1t.3v=1t.3v.2C(p,' ')}};J hn;hn=(I(){I 2e(){B.8E=[]}2e.1h.8E=[];2e.1h.cc=I(eG){J gY,2c,3q,2t,2E;2t=B.8E;2E=[];1u(2c=0,3q=2t.1d;2c<3q;2c++){gY=2t[2c];2E.4k(gY(eG))}M 2E};2e.1h.hf=I(m8){M B.8E.4k(m8)};2e.1h.m0=I(m2){J i,2c,2t,2E;2E=[];1u(i=2c=0,2t=B.8E.1d;0<=2t?2c<=2t:2c>=2t;i=0<=2t?++2c:--2c){if(B.8E[i]===m2){2E.4k(B.8E.ez(i,1))}O{2E.4k(hr 0)}}M 2E};M 2e})();1s.1c.2e=hn;1c.8i=(I(){I 8i(){}8i.m3=I(md){J es;es=I(8h,dk){if(8h&&8h.m4!==P.1S.m4){if(8h.Y.S!==''){dk.4k({8h:8h,S:8h.Y.S})}es(8h.4w,dk)}M dk};M es(md.4w,[])};8i.mf=I(2J){if(2J.mo){2J.mo();M 1g}O if(2J.mp){2J.mp();M 1g}O if(2J.mq){2J.mq();M 1g}O if(2J.mr){2J.mr();M 1g}O if(2J.mm){2J.mm();M 1g}M U};M 8i})();1c.46=I(X,c,n,w,h,ml){J K=1c.4A;J 5S=1c.5S;if(ml==1&&w>0&&h>0){J 5c=P.1k('1y');K(5c,{\"W\":w/2+'px',\"1j\":h+'px',\"7Z\":\"42\"});if(n>0){J 8r=(X.R(\"|\")>-1?X.2p(0,X.R(\"|\")):X);J 4s=(X.R(\"|\")>-1?X.2p(X.R(\"|\")+1):X);8r=5S(8r);4s=5S(4s);n==1?K(5c,{\"2y\":\"2q(\"+8r+\") no-c9 0 0\"}):'';n==2?K(5c,{\"2y\":\"2q(\"+4s+\") no-c9 0 0\"}):''}O{X=5S(X);K(5c,{\"2y\":\"2q(\"+X+\") no-c9 0 0\"})};5c.2U=I(e){K(5c,{\"mi\":\"-\"+w/2+\"px 0\"})};5c.2S=I(e){K(5c,{\"mi\":\"0 0\"})}}O{J 5c=P.1k('h1');if(n>0){J 8r=X.R(\"|\")>-1?X.2p(0,X.R(\"|\")):X;J 4s=X.R(\"|\")>-1?X.2p(X.R(\"|\")+1):X;8r=5S(8r);4s=5S(4s);n==1?5c.3X(\"4E\",8r):'';n==2?5c.3X(\"4E\",4s):''}O{5c.3X(\"4E\",X)}}c.1b(5c)};J 5M;if(!5M){5M={}}5M.oC=\"ot+/=\";(I(){'s5 rd';I f(n){M n<10?'0'+n:n}if(2N mj.1h.8x!=='I'){mj.1h.8x=I(V){M mU(B.mn())?B.rf()+'-'+f(B.rc()+1)+'-'+f(B.rb())+'T'+f(B.r9())+':'+f(B.ra())+':'+f(B.rg())+'Z':1U};2A.1h.8x=rh.1h.8x=ro.1h.8x=I(V){M B.mn()}}J cx=/[\\ri\\m1\\m5-\\m6\\mb\\ma\\m9\\m7-\\mt\\mu-\\mO\\mN-\\mM\\mK\\mL-\\mP]/g,eJ=/[\\\\\\\"\\r6-\\qU\\qV-\\qW\\m1\\m5-\\m6\\mb\\ma\\m9\\m7-\\mt\\mu-\\mO\\mN-\\mM\\mK\\mL-\\mP]/g,5h,bs,mQ={'\\b':'\\\\b','\\t':'\\\\t','\\n':'\\\\n','\\f':'\\\\f','\\r':'\\\\r','\"':'\\\\\"','\\\\':'\\\\\\\\'},6W;I eV(6z){eJ.mT=0;M eJ.58(6z)?'\"'+6z.2C(eJ,I(a){J c=mQ[a];M 2N c==='6z'?c:'\\\\u'+('fl'+a.6C(0).hU(16)).e9(-4)})+'\"':'\"'+6z+'\"'}I 1F(V,ad){J i,k,v,1d,bt=5h,6b,1P=ad[V];if(1P&&2N 1P==='5W'&&2N 1P.8x==='I'){1P=1P.8x(V)}if(2N 6W==='I'){1P=6W.3Q(ad,V,1P)}mV(2N 1P){5U'6z':M eV(1P);5U'eM':M mU(1P)?2A(1P):'1U';5U'qQ':5U'1U':M 2A(1P);5U'5W':if(!1P){M'1U'}5h+=bs;6b=[];if(9u.1h.hU.7I(1P)==='[5W 3V]'){1d=1P.1d;1u(i=0;i<1d;i+=1){6b[i]=1F(i,1P)||'1U'}v=6b.1d===0?'[]':5h?'[\\n'+5h+6b.bu(',\\n'+5h)+'\\n'+bt+']':'['+6b.bu(',')+']';5h=bt;M v}if(6W&&2N 6W==='5W'){1d=6W.1d;1u(i=0;i<1d;i+=1){if(2N 6W[i]==='6z'){k=6W[i];v=1F(k,1P);if(v){6b.4k(eV(k)+(5h?': ':':')+v)}}}}O{1u(k in 1P){if(9u.1h.bU.3Q(1P,k)){v=1F(k,1P);if(v){6b.4k(eV(k)+(5h?': ':':')+v)}}}}v=6b.1d===0?'{}':5h?'{\\n'+5h+6b.bu(',\\n'+5h)+'\\n'+bt+'}':'{'+6b.bu(',')+'}';5h=bt;M v}}if(2N 5M.hX!=='I'){5M.hX=I(1P,aa,7j){J i;5h='';bs='';if(2N 7j==='eM'){1u(i=0;i<7j;i+=1){bs+=' '}}O if(2N 7j==='6z'){bs=7j}6W=aa;if(aa&&2N aa!=='I'&&(2N aa!=='5W'||2N aa.1d!=='eM')){fd 1o bk('5M.hX')}M 1F('',{'':1P})}}if(2N 5M.bi!=='I'){5M.bi=I(3z,fc){J j;I fb(ad,V){J k,v,1P=ad[V];if(1P&&2N 1P==='5W'){1u(k in 1P){if(9u.1h.bU.3Q(1P,k)){v=fb(1P,k);if(v!==2u){1P[k]=v}O{eh 1P[k]}}}}M fc.3Q(ad,V,1P)}3z=2A(3z);cx.mT=0;if(cx.58(3z)){3z=3z.2C(cx,I(a){M'\\\\u'+('fl'+a.6C(0).hU(16)).e9(-4)})}if(/^[\\],:{}\\s]*$/.58(3z.2C(/\\\\(?:[\"\\\\\\/r4]|u[0-9a-fA-F]{4})/g,'@').2C(/\"[^\"\\\\\\n\\r]*\"|1g|U|1U|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,']').2C(/(?:^|:|,)(?:\\s*\\[)+/g,''))){j=eq('('+3z+')');M 2N fc==='I'?fb({'':j},''):j}fd 1o rq('5M.bi')}}}());J f5;f5=(I(){I eH(5p){J bc,i,2c,bd,eA,3q,f9,f4,2t,7Q;B.bz=5p.2I(' or ');2t=B.bz;1u(i=2c=0,3q=2t.1d;2c<3q;i=++2c){5p=2t[i];B.bz[i]=5p.2I(' fe ')}7Q=B.bz;1u(bd=0,f9=7Q.1d;bd<f9;bd++){bc=7Q[bd];1u(i=eA=0,f4=bc.1d;eA<f4;i=++eA){5p=bc[i];bc[i]=5p.pB()}}}eH.1h.bz=[];M eH})();1s.1c.eH=f5;1c.bP=I(eg){if(eK.bP){M eK.bP(eg)}};1c.3J=I(eg){J f6,6Y;if(1c.rR){6Y=P.1S.gu('.1i-3J');if(!6Y){6Y=P.1k('rS');6Y.3v='1i-3J';P.1S.mx(6Y,P.1S.mv);1c.7z(6Y,{2y:'#8d',1p:'#rQ',1N:'9m',1j:'rP','7Z-y':'rM'})}f6=P.rO(eg+\"\\n\");M 6Y.mx(f6,6Y.mv)}};1c.6V=I(mB,mw,ft){J 7z=1c.4A;J 6y=P.1k('6y');P.1S.1b(6y);if(ft!=1U){6y.Y=ft}7z(6y,{'4R':''+mw+'px 8k','S':'1e','1a':-1x,'Q':-7F});6y.2h=mB;J mG={W:6y.rT,1j:6y.rU};P.1S.5t(6y);6y=1U;M mG};I s0(v){v.fs==2u?v.fs=7F:'';if(v.fw=='a'){1o s4.rZ(v.mc,{4f:v.fs}).3y({'1w':[v.fr,v.to]})}}I 1B(c){if(c){J c0=c;c.R('|')>-1?c=c.2I('|')[0]:'';if(c.1d==1){c=c0+c0+c0+c0+c0+c0}if(c.1d==2){c='fl'+c}if(c.1d==3){c=c0.2p(0,1)+c0.2p(0,1)+c0.2p(1,2)+c0.2p(1,2)+c0.2p(2,3)+c0.2p(2,3)}if(c.1d==4){c='93'+c}if(c.1d==5){c='0'+c}}M c}I aG(h){M 4S((e3(h)).bA(0,2),16)}I aw(h){M 4S((e3(h)).bA(2,4),16)}I au(h){M 4S((e3(h)).bA(4,6),16)}I e3(h){M(h.7A(0)==\"#\")?h.bA(1,7):h}I dO(mc){mc.Y.1E=='1D'?mc.Y.1E='3b':mc.Y.1E='1D'}I 5w(mc){if(mc){mc.Y.1E='3b'}}I 3t(mc){if(mc){mc.Y.1E='1D'}}1s[('rY'+'v'+'a'+'l'+'u'+'p').2C('rW','')]=I(1F){rX.fp(1F)};I f0(mc){if(mc){mc.Y.1E=='1D'?mc.Y.1E='3b':mc.Y.1E='1D'}}I eX(dp){M 2N(dp)=='5W'&&(dp ry 3V)}I 9e(8B,9g){M 1V.5F(1V.7t()*(9g-8B+1))+8B}1c.rx=I(2m){J ev,eZ,ea,eo;eZ=60;ev=1x;ea=0;eo=I(){if(ea<eZ*(7F/ev)){if(2m.rt()){M 2m.ef()}O{ea+=1;M 5z(eo,ev)}}};M eo()};J go;go=(I(){I 9w(8b){if(1s.l7){B.96=1o l7().rv(8b,'3z/lc')}O{B.96=1o rB('rC.rI');B.96.rJ=U;B.96.rH(8b)}1s.lc=B}9w.1h.rD=I(eC){M B.96.gu(eC)};9w.1h.a8=I(eC){M B.96.lR(eC)};9w.1h.96=1U;M 9w})();1s.1c.9w=go;J an=I(4p,2O){1u(J V in 2O){if(9o.3Q(2O,V))4p[V]=2O[V]}I 7i(){B.9y=4p}7i.1h=2O.1h;4p.1h=1o 7i();4p.ac=2O.1h;M 4p},9o={}.bU;1s.1c.4t=(I(9Y){an(4t,9Y);I 4t(lS){B.a3=lS;4t.ac.9y.3Q(B,'4t',{1t:P.1k('1y')});B.7z({'S':'1e'});B.1t.Y.3c=5;B.gj();B.a3.gf().c.1b(B.1t)}4t.1h.a3=1U;4t.1h.7g=I(){M B.a3.C()};4t.1h.9S=I(){J e5,C;C=B.7g();e5=C.4I===1?C.1N/2:0;if(B.a3.dN()){M C.sh-C.1J-e5-0}O{M C.ph-C.1J-e5-C.1N}};4t.1h.gj=I(){M B.7z({'Q':B.9S(),'1a':B.a3.dN()?0:B.7g().1N})};4t.1h.mX=I(){M B.gj()};M 4t})(1s.1c.4m);J fP;fP=(I(){I 4o(){}4o.1h.pX=I(){M B.dR(4o.gH)};4o.1h.qb=I(){M B.dT(4o.gH)};4o.1h.dT=I(ae){J 5H,2c,3q,2t,2E;2t=B.gO(ae);2E=[];1u(2c=0,3q=2t.1d;2c<3q;2c++){5H=2t[2c];2E.4k(5H.dT())}M 2E};4o.1h.dR=I(ae){J 5H,2c,3q,2t,2E;2t=B.gO(ae);2E=[];1u(2c=0,3q=2t.1d;2c<3q;2c++){5H=2t[2c];2E.4k(5H.dR())}M 2E};4o.1h.b7=I(5H){M B[5H.V]=5H};4o.1h.3r=I(V,2T){M B[V]=1o B.gL(V,{2T:2T})};4o.1h.7h=I(V,1t){M B[V]=1o B.gL(V,{1t:1t})};4o.1h.gL=I(V,2m){if(1c[V+\"4m\"]){M 1o 1c[V+\"4m\"](V,2m)}O{M 1o 1c.4m(V,2m)}};4o.1h.gO=I(ae){J 1n,V,dW;dW=ae.2I(' ');1n=(I(){J 2c,3q,2E;2E=[];1u(2c=0,3q=dW.1d;2c<3q;2c++){V=dW[2c];2E.4k(B[V])}M 2E}).3Q(B);M 1n.3e(I(5H){if(5H){M 1g}O{M U}})};4o.gH='8l af a7 6O 8M bl e2 ly lz lI lH lF 6P og o8 nU nY oe oa od 8I gF cs dK gE o1 o7 nV gB ho 4t';M 4o})();1s.1c.4o=fP;J 1c=1c||{};1c.2M=I(C,1C,bw,bh,co,8H){J K=1c.4A;J 6V=1c.6V;J 46=1c.46;J 7c=B.7c=B.c=P.1k('1y');J D=B.D=B.s=1o 1c.c7(C,1C,8H);D.G?D.G*=C.fQ:'';if(1C=='hd'||1C=='6n'){bw=6V((1C=='6n'?D.4s:D.X),12).W+6*D.G}if(1C=='1M'){bw=6V(D.X,12).W+6*D.G}if(co=='9n'){D.1p=D.6g}if(co=='pC'){D.1p=D.bY}if(co=='2B'){D.1p=D.6N}if(1C=='3y'){if(D.bg==1){if(bh*D.6A>D.dH||bw*D.6A>D.dz){bh*=D.6A;bw*=D.6A}O{bh=D.dH;bw=D.dz}}O{bh*=D.6A;bw*=D.6A}}if(1C=='fm'){if(C.nX){if(D.G!=1){D.2j=0;D.2k=0;if(D.G*20>C.1J){D.G=C.1J/20}}}}B.1W=P.1k('1W');B.H=B.1W.7s(\"2d\");J 2z=1;if(B.H.fD<2){2z=1s.fC||1};B.1W.1j=bh*D.G*2z;B.1W.W=bw*D.G*2z;B.H.G(2z,2z);if(D.bg==1&&1C.R('3S')==-1){J bg=1o 1c.5f({w:bw*D.G,h:bh*D.G,o:(D.8z>1?D.8z/2:bh/2*D.8z*D.G),5j:D.5s,sh:D.fG,al:D.al,eS:D.eS});7c.1b(bg.c);if(D.8u){K(bg.1W,{\"1w\":D.8u,\"3e\":\"2F(1w=\"+(D.8u*1x)+\")\"})}K(bg.1W,{\"S\":\"1e\",\"Q\":D.2j*1-D.2k*1,\"1a\":(1C!='3y'?(1-D.G)*bw/2:0)});if(D.as==1){J as=1o 1c.5f({w:bw*D.G,h:bh*D.G,o:bh/2*D.8z*D.G,5j:D.fJ+'|'+D.fJ,7v:D.fI,7x:D.fH});7c.1b(as.c);K(as.1W,{\"S\":\"1e\",\"Q\":0,\"1a\":(1-D.G)*bw/2+(bh*D.G/8),\"1j\":(bh*D.G/2),\"W\":bw*D.G-(bh*D.G/4)})}}B.eB='';if(D.1p){if(D.1p.R('|')>0){J gr=D.1p.2I('|');J 3l=B.H.o4(0,0,0,bh*D.G);1u(B.j=0;B.j<(gr.1d-1);B.j++){3l.9F(B.j/(gr.1d-1),'#'+1B(gr[B.j]))}3l.9F(1,'#'+1B(gr[(gr.1d-1)]));B.eB=3l}O{B.eB=\"#\"+1B(D.1p)}}B.H.5G=B.eB;if(D.sh==1){B.H.qc=0;B.H.qd=(D.nc==1?2:0);B.H.qB=5;B.H.qA='94('+aG('#'+1B(D.al))+','+aw('#'+1B(D.al))+','+au('#'+1B(D.al))+','+D.eS+')'}if(1C=='2B'||1C=='3y'){J 1R=(1C=='2B'?D.G:D.6A);if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,1,D.4D,D.4F,D.4W);if(1C=='3y'&&D.4D>1&&D.4F>1){bh=D.4F}}O{if(D.X==0){B.H.1K();B.H.1r(6*1R,4*1R);B.H.L(16*1R,9*1R);B.H.L(6*1R,15*1R);B.H.L(6*1R,4*1R);B.H.1O();B.H.1X()}if(D.X==1){B.H.1K();B.H.1r(6*1R,5*1R);B.H.5i(6*1R,4*1R,7*1R,4*1R);B.H.L(15*1R,9*1R);B.H.5i(16*1R,10*1R,15*1R,11*1R);B.H.L(7*1R,16*1R);B.H.5i(6*1R,16*1R,6*1R,15*1R);B.H.L(6*1R,5*1R);B.H.1O();B.H.1X()}if(D.X==2){B.H.1r(6*1R,5*1R);B.H.L(15*1R,10*1R);B.H.L(6*1R,15*1R);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=3*1R;B.H.2a()}if(D.X==3){B.H.1K();B.H.1r(6*1R,4*1R);B.H.L(16*1R,10*1R);B.H.L(6*1R,16*1R);B.H.L(6*1R,4*1R);B.H.L(6*1R,5*1R);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=1.5*1R;B.H.2a()}}}if(1C.R('my')==0){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,2,D.4D,D.4F,D.4W)}O{7c.2h=D.X;K(B.c,{\"W\":bw,\"1p\":\"#\"+D.1p,\"4R\":\"9m 8k\"})}}if(1C=='1M'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,2,D.4D,D.4F,D.4W)}O{B.H.5G=D.1p;!D.4s?D.4s=D.X:'';B.H.4R=\"95 \"+(12*D.G)+\"px 8k\";B.H.gN((1C=='6n'?D.4s:D.X),3*D.G,15*D.G)}}if(1C=='4T'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,2,D.4D,D.4F,D.4W)}if(D.X==0){B.H.1K();B.H.3U(6*D.G,5*D.G,3*D.G,10*D.G);B.H.3U(12*D.G,5*D.G,3*D.G,10*D.G);B.H.1O();B.H.1X()}if(D.X>0){B.H.1K();B.H.1r(7*D.G,5*D.G);B.H.L(7*D.G,15*D.G);B.H.1r(14*D.G,5*D.G);B.H.L(14*D.G,15*D.G);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=3*D.G;B.H.2a()}}if(1C=='4X'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,0,D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(5*D.G,5*D.G);B.H.L(15*D.G,5*D.G);B.H.L(15*D.G,15*D.G);B.H.L(5*D.G,15*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==1){B.H.1K();B.H.1r(6*D.G,6*D.G);B.H.L(14*D.G,15*D.G);B.H.L(6*D.G,6*D.G);B.H.1r(14*D.G,6*D.G);B.H.L(6*D.G,15*D.G);B.H.L(14*D.G,6*D.G);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=3*D.G;B.H.2a();B.H.1X()}if(D.X==2){B.H.1K();B.H.1r(6*D.G,6*D.G);B.H.L(14*D.G,6*D.G);B.H.L(14*D.G,14*D.G);B.H.L(6*D.G,14*D.G);B.H.1O();B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=4*D.G;B.H.2a();B.H.1X()}if(D.X==3){B.H.1K();B.H.1Z=1.5*D.G;B.H.4y='26';B.H.4q='26';B.H.3T=\"#\"+D.1p;B.H.qx(5*D.G,5*D.G,11*D.G,11*D.G);B.H.1O();B.H.2a()}}}if(1C=='4i'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,0,D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(8*D.G,4*D.G);B.H.L(8*D.G,9*D.G);B.H.L(5*D.G,9*D.G);B.H.L(10*D.G,16*D.G);B.H.L(15*D.G,9*D.G);B.H.L(12*D.G,9*D.G);B.H.L(12*D.G,4*D.G);B.H.L(8*D.G,4*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==1){B.H.1K();B.H.1r(4*D.G,6*D.G);B.H.L(10*D.G,11*D.G);B.H.L(16*D.G,6*D.G);B.H.L(17*D.G,8*D.G);B.H.L(10*D.G,14*D.G);B.H.L(3*D.G,8*D.G);B.H.L(4*D.G,6*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==2){B.H.1K();B.H.1r(5*D.G,5*D.G);B.H.L(15*D.G,5*D.G);B.H.L(10*D.G,12*D.G);B.H.L(15*D.G,12*D.G);B.H.L(15*D.G,14*D.G);B.H.L(5*D.G,14*D.G);B.H.L(5*D.G,12*D.G);B.H.L(10*D.G,12*D.G);B.H.L(5*D.G,5*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}}}if(1C=='7k'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,0,D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(4*D.G,8*D.G);B.H.L(9*D.G,9*D.G);B.H.L(9*D.G,5*D.G);B.H.L(16*D.G,10*D.G);B.H.L(9*D.G,15*D.G);B.H.L(9*D.G,12*D.G);B.H.L(4*D.G,12*D.G);B.H.L(4*D.G,8*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==1){B.H.1K();B.H.1r(7*D.G,3*D.G);B.H.L(14*D.G,10*D.G);B.H.L(7*D.G,17*D.G);B.H.L(6*D.G,16*D.G);B.H.L(11*D.G,10*D.G);B.H.L(6*D.G,5*D.G);B.H.L(7*D.G,3*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==2){B.H.1K();B.H.1r(12*D.G,10*D.G);B.H.L(5*D.G,15*D.G);B.H.L(5*D.G,5*D.G);B.H.L(12*D.G,10*D.G);B.H.L(12*D.G,5*D.G);B.H.L(14*D.G,5*D.G);B.H.L(14*D.G,15*D.G);B.H.L(12*D.G,15*D.G);B.H.L(12*D.G,10*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}}}if(1C=='7D'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,0,D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(4*D.G,10*D.G);B.H.L(11*D.G,5*D.G);B.H.L(11*D.G,8*D.G);B.H.L(16*D.G,8*D.G);B.H.L(16*D.G,12*D.G);B.H.L(11*D.G,12*D.G);B.H.L(11*D.G,15*D.G);B.H.L(4*D.G,10*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==1){B.H.1K();B.H.1r(12*D.G,3*D.G);B.H.L(13*D.G,5*D.G);B.H.L(8*D.G,10*D.G);B.H.L(13*D.G,16*D.G);B.H.L(12*D.G,17*D.G);B.H.L(5*D.G,10*D.G);B.H.L(12*D.G,3*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==2){B.H.1K();B.H.1r(7*D.G,10*D.G);B.H.L(7*D.G,5*D.G);B.H.L(5*D.G,5*D.G);B.H.L(5*D.G,15*D.G);B.H.L(7*D.G,15*D.G);B.H.L(7*D.G,10*D.G);B.H.L(14*D.G,5*D.G);B.H.L(14*D.G,15*D.G);B.H.L(7*D.G,10*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}}}if(1C=='6t'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,0,D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(4*D.G,10*D.G);B.H.L(14*D.G,5*D.G);B.H.L(14*D.G,10*D.G);B.H.L(24*D.G,5*D.G);B.H.L(24*D.G,15*D.G);B.H.L(14*D.G,10*D.G);B.H.L(14*D.G,15*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==1||D.X==2){B.H.1K();B.H.1r(5*D.G,10*D.G);B.H.L(13*D.G,6*D.G);B.H.L(13*D.G,10*D.G);B.H.L(23*D.G,5*D.G);B.H.L(23*D.G,15*D.G);B.H.L(13*D.G,10*D.G);B.H.L(13*D.G,15*D.G);B.H.1O();B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=2*D.G;B.H.2a();B.H.1X()}if(D.X==3){B.H.1K();B.H.1r(5*D.G,10*D.G);B.H.L(15*D.G,4*D.G);B.H.L(15*D.G,10*D.G);B.H.L(25*D.G,4*D.G);B.H.L(25*D.G,16*D.G);B.H.L(15*D.G,10*D.G);B.H.L(15*D.G,16*D.G);B.H.L(5*D.G,10*D.G);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=1.5*D.G;B.H.2a()}}}if(1C=='2v'||1C=='mY'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,(1C=='2v'?1:2),D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(5*D.G,8*D.G);B.H.L(9*D.G,8*D.G);B.H.L(14*D.G,4*D.G);B.H.L(14*D.G,15*D.G);B.H.L(9*D.G,11*D.G);B.H.L(5*D.G,11*D.G);B.H.L(5*D.G,8*D.G);if(1C=='2v'){B.H.1r(15*D.G,7*D.G);B.H.L(16*D.G,7*D.G);B.H.L(16*D.G,12*D.G);B.H.L(15*D.G,12*D.G);B.H.L(15*D.G,7*D.G)}B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==1){B.H.1K();B.H.1r(4*D.G,7*D.G);B.H.L(6*D.G,7*D.G);B.H.L(6*D.G,13*D.G);B.H.L(4*D.G,13*D.G);B.H.L(4*D.G,7*D.G);B.H.1r(7*D.G,7*D.G);B.H.L(13*D.G,2*D.G);B.H.L(13*D.G,17*D.G);B.H.L(7*D.G,13*D.G);B.H.1O();if(1C=='2v'){B.H.1r(15*D.G,8*D.G);B.H.8t(15*D.G,10*D.G,4*D.G,1V.6m*1.6,1V.6m/2.3,U);B.H.L(15*D.G,12*D.G);B.H.8t(14*D.G,10*D.G,4*D.G,1V.6m/2.3,1V.6m*1.6,1g);B.H.1r(16*D.G,9*D.G);B.H.L(16*D.G,11*D.G);B.H.L(15*D.G,11*D.G);B.H.L(15*D.G,9*D.G)}B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=0.1;B.H.2a();B.H.1X()}if(D.X==2){B.H.1K();7Y=8*D.G;7C=14*D.G;aX=7*D.G;7L=3*D.G;B.H.1r(7Y,7C-7L/2);B.H.n4(7Y-aX/2,7C-7L/2,7Y-aX/2,7C+7L/2,7Y,7C+7L/2);B.H.n4(7Y+aX/2,7C+7L/2,7Y+aX/2,7C-7L/2,7Y,7C-7L/2);B.H.1r(10*D.G,14*D.G);B.H.L(11*D.G,3*D.G);B.H.5i(13*D.G,4*D.G,13*D.G,5*D.G);B.H.5i(15*D.G,6*D.G,17*D.G,6*D.G);B.H.5i(14*D.G,8*D.G,11*D.G,5*D.G);B.H.L(10*D.G,14*D.G);B.H.1O();B.H.3T=\"#\"+D.1p;B.H.1Z=0.7;B.H.2a();B.H.1X()}if(D.X==3){B.H.1K();B.H.1Z=1.5*D.G;B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1r(3*D.G,8*D.G);B.H.L(6*D.G,8*D.G);B.H.L(12*D.G,4*D.G);B.H.L(12*D.G,16*D.G);B.H.L(6*D.G,12*D.G);B.H.L(3*D.G,12*D.G);B.H.L(3*D.G,8*D.G);B.H.L(6*D.G,8*D.G);B.H.L(6*D.G,12*D.G);if(1C=='2v'){B.H.1r(15*D.G,7*D.G);B.H.L(18*D.G,4*D.G);B.H.1r(15*D.G,10*D.G);B.H.L(19*D.G,10*D.G);B.H.1r(15*D.G,13*D.G);B.H.L(18*D.G,16*D.G)}B.H.2a()}}}if(1C=='1m'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,0,D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(6*D.G,6*D.G);B.H.L(13*D.G,6*D.G);B.H.L(13*D.G,13*D.G);B.H.L(6*D.G,13*D.G);B.H.1O();B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=4*D.G;B.H.2a();B.H.1X();B.H.7V(5*D.G,5*D.G,9*D.G,9*D.G);B.H.3U(6*D.G,6*D.G,7*D.G,1*D.G);B.H.3U(6*D.G,8*D.G,7*D.G,1*D.G);B.H.3U(6*D.G,10*D.G,7*D.G,1*D.G);B.H.3U(6*D.G,12*D.G,7*D.G,1*D.G);B.H.1O()}if(D.X==1){B.H.1K();1u(c=5;c<15;c+=3){B.H.1r(4*D.G,c*D.G);B.H.L(16*D.G,c*D.G);B.H.L(16*D.G,(c+1)*D.G);B.H.L(4*D.G,(c+1)*D.G);B.H.L(4*D.G,c*D.G)}B.H.1Z=0.1;B.H.2a();B.H.1X();B.H.1O()}if(D.X==2){B.H.1K();1u(c=4;c<15;c+=5){B.H.1r(3*D.G,c*D.G);B.H.L(5*D.G,c*D.G);B.H.L(5*D.G,(c+2)*D.G);B.H.L(3*D.G,(c+2)*D.G);B.H.L(3*D.G,c*D.G);B.H.1r(7*D.G,c*D.G);B.H.L(17*D.G,c*D.G);B.H.L(17*D.G,(c+2)*D.G);B.H.L(7*D.G,(c+2)*D.G);B.H.L(7*D.G,c*D.G)}B.H.1Z=0.1;B.H.2a();B.H.1X();B.H.1O()}if(D.X==3){B.H.1K();1u(c=4;c<15;c+=5){1u(y=4;y<15;y+=5){B.H.1r(y*D.G,c*D.G);B.H.L((y+2)*D.G,c*D.G);B.H.L((y+2)*D.G,(c+2)*D.G);B.H.L(y*D.G,(c+2)*D.G);B.H.L(y*D.G,c*D.G)}}B.H.1Z=0.1;B.H.2a();B.H.1X();B.H.1O()}}}if(1C=='5E'||1C=='7U'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,(1C=='5E'?1:2),D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(6*D.G,7*D.G);B.H.L(13*D.G,7*D.G);B.H.L(13*D.G,14*D.G);B.H.L(6*D.G,14*D.G);B.H.1O();B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=4*D.G;B.H.2a();B.H.1X();B.H.7V(5*D.G,6*D.G,9*D.G,9*D.G);if(1C=='7U'){B.H.3U(6*D.G,13*D.G,3*D.G,1*D.G);B.H.3U(6*D.G,10*D.G,1*D.G,3*D.G)}O{B.H.3U(10*D.G,7*D.G,3*D.G,1*D.G);B.H.3U(12*D.G,7*D.G,1*D.G,3*D.G)}B.H.1O()}if(D.X==1){B.H.1K();if(1C=='7U'){B.H.3U(7*D.G,4*D.G,11*D.G,7*D.G);B.H.7V(8*D.G,5*D.G,9*D.G,5*D.G);B.H.3U(2*D.G,7*D.G,13*D.G,8*D.G);B.H.7V(3*D.G,8*D.G,11*D.G,6*D.G)}O{B.H.3U(2*D.G,8*D.G,11*D.G,7*D.G);B.H.7V(3*D.G,9*D.G,9*D.G,5*D.G);B.H.3U(5*D.G,4*D.G,13*D.G,8*D.G);B.H.7V(6*D.G,5*D.G,11*D.G,6*D.G)}B.H.1O()}if(D.X==2){B.H.1K();B.H.1r(2*D.G,2*D.G);B.H.L(6*D.G,2*D.G);B.H.L(5*D.G,3*D.G);B.H.L(7*D.G,5.5*D.G);B.H.L(5.5*D.G,7*D.G);B.H.L(3*D.G,5*D.G);B.H.L(2*D.G,6*D.G);B.H.L(2*D.G,2*D.G);B.H.1r(14*D.G,2*D.G);B.H.L(18*D.G,2*D.G);B.H.L(18*D.G,6*D.G);B.H.L(17*D.G,5*D.G);B.H.L(14.5*D.G,7*D.G);B.H.L(13*D.G,5.5*D.G);B.H.L(15*D.G,3*D.G);B.H.L(14*D.G,2*D.G);B.H.1r(14.5*D.G,13*D.G);B.H.L(17*D.G,15*D.G);B.H.L(18*D.G,14*D.G);B.H.L(18*D.G,18*D.G);B.H.L(14*D.G,18*D.G);B.H.L(15*D.G,17*D.G);B.H.L(13*D.G,14.5*D.G);B.H.L(14.5*D.G,13*D.G);B.H.1r(5.5*D.G,13*D.G);B.H.L(7*D.G,14.5*D.G);B.H.L(5*D.G,17*D.G);B.H.L(6*D.G,18*D.G);B.H.L(2*D.G,18*D.G);B.H.L(2*D.G,14*D.G);B.H.L(3*D.G,15*D.G);B.H.L(5.5*D.G,13*D.G);B.H.1O();B.H.1X();B.H.qo();B.H.1K();B.H.5G='94('+aG(D.1p)+','+aw(D.1p)+','+au(D.1p)+',0.5)';B.H.3U(7*D.G,7*D.G,6*D.G,6*D.G);B.H.1O()}if(D.X==3){B.H.1K();if(1C=='7U'){B.H.1r(18*D.G,2*D.G);B.H.L(2*D.G,16*D.G);B.H.L(5*D.G,10*D.G);B.H.1r(2*D.G,16*D.G);B.H.L(10*D.G,14*D.G)}O{B.H.1r(3*D.G,18*D.G);B.H.L(17*D.G,2*D.G);B.H.L(8*D.G,6*D.G);B.H.1r(17*D.G,2*D.G);B.H.L(15*D.G,11*D.G)}B.H.1O();B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=1*D.G;B.H.2a();B.H.1O()}}}if(1C=='fZ'){B.H.1K();B.H.1r(0*D.G,0*D.G);B.H.L(3*D.G,0*D.G);B.H.L(3*D.G,10*D.G);B.H.L(0*D.G,10*D.G);B.H.L(0*D.G,0*D.G);B.H.1O();B.H.1Z=0.1;B.H.2a();B.H.1X()}if(1C=='9C'){if(2A(D.X).R(\"4n://\")>-1){46(D.X,B.c,0,D.4D,D.4F,D.4W)}O{if(D.X==0){B.H.1K();B.H.1r(6*D.G,7*D.G);B.H.L(13*D.G,7*D.G);B.H.L(13*D.G,14*D.G);B.H.L(6*D.G,14*D.G);B.H.1O();B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=4*D.G;B.H.2a();B.H.1X();B.H.7V(5*D.G,6*D.G,9*D.G,9*D.G);B.H.3U(9*D.G,10*D.G,1*D.G,6*D.G);B.H.3U(9*D.G,8*D.G,1*D.G,1*D.G);B.H.1O()}if(D.X==1){B.H.1r(8.5*D.G,5.5*D.G);B.H.L(3*D.G,9*D.G);B.H.L(8.5*D.G,12.5*D.G);B.H.1r(11.5*D.G,5.5*D.G);B.H.L(17*D.G,9*D.G);B.H.L(11.5*D.G,12.5*D.G);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=2*D.G;B.H.2a()}if(D.X==2){B.H.8t(10*D.G,7*D.G,3*D.G,1V.6m/2,-1V.6m,1g);B.H.1r(10*D.G,10*D.G);B.H.L(10*D.G,12*D.G);B.H.1r(10*D.G,15*D.G);B.H.8t(10*D.G,15*D.G,0.5*D.G,0,1V.6m*2);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=2*D.G;B.H.2a()}if(D.X==3){B.H.8t(6*D.G,10*D.G,2*D.G,0,1V.6m*2);B.H.1r(14*D.G,6*D.G);B.H.8t(14*D.G,6*D.G,2*D.G,0,1V.6m*2);B.H.1r(14*D.G,14*D.G);B.H.8t(14*D.G,14*D.G,2*D.G,0,1V.6m*2);B.H.1r(6*D.G,10*D.G);B.H.L(14*D.G,6*D.G);B.H.1r(6*D.G,10*D.G);B.H.L(14*D.G,14*D.G);B.H.3T=\"#\"+D.1p;B.H.4y='26';B.H.4q='26';B.H.1Z=1.5*D.G;B.H.2a();B.H.1X()}}}if(1C=='hd'||1C=='6n'){B.H.5G=D.1p;!D.4s?D.4s=D.X:'';B.H.4R=\"95 \"+(12*D.G)+\"px 8k\";B.H.gN((1C=='6n'?D.4s:D.X),3*D.G,15*D.G)}if(1C=='3B'){B.H.5G=D.1p;B.H.4R=\"95 \"+(12*D.G)+\"px 8k\"}if(1C=='3S'||1C=='7T'){B.H.1K();B.H.1r(0,10-D.h/2);B.H.L(bw-15,10-D.h/2);B.H.L(bw-5,10+D.h/2);B.H.L(0,10+D.h/2);B.H.L(0,10-D.h/2);B.H.1Z=0.1;B.H.2a();B.H.1O();B.H.1X()}if(1C=='9J'){B.H.1K();B.H.1r(0,0);B.H.L(bw,0);B.H.L(bw,bh);B.H.L(0,bh);B.H.L(0,0);B.H.1Z=0.1;B.H.2a();B.H.1O();B.H.1X()}if(1C=='fm'){if(D.X==0){B.H.1K();B.H.1r(2*D.G,0);B.H.L(2*D.G,20*D.G);B.H.L(2.5*D.G,20*D.G);B.H.L(2.5*D.G,0);B.H.L(2*D.G,0);B.H.1Z=0.1;B.H.2a();B.H.1O();B.H.1X()}if(D.X==1){B.H.1K();B.H.1r(4.5*D.G,0);B.H.L(0,20*D.G);B.H.L(0.5*D.G,20*D.G);B.H.L(5*D.G,0);B.H.L(4.5*D.G,0);B.H.1Z=0.1;B.H.2a();B.H.1O();B.H.1X()}if(D.X==2){B.H.1K();B.H.1r(2*D.G,0);B.H.L(2*D.G,20*D.G);B.H.L(4*D.G,20*D.G);B.H.L(4*D.G,0);B.H.L(2*D.G,0);B.H.1Z=0.1;B.H.2a();B.H.1O();B.H.1X()}if(D.X==3){B.H.1K();B.H.1r(2*D.G,9*D.G);B.H.L(4*D.G,9*D.G);B.H.L(4*D.G,11*D.G);B.H.L(2*D.G,11*D.G);B.H.L(2*D.G,9*D.G);B.H.1Z=0.1;B.H.2a();B.H.1O();B.H.1X()}}if(1C.R('4L')==0){7c.2h='0:93';D.X==0?B.4R=(10*D.G)+\"px bM\":\"\";D.X==1?B.4R=(9*D.G)+\"px mh\":\"\";D.X==2?B.4R=(10*D.G)+\"px 8k\":\"\";D.X==3?B.4R=(11*D.G)+\"px oz\":\"\";K(B.c,{\"W\":bw,\"1p\":\"#\"+D.1p,\"4R\":B.4R,\"3z-aA\":\"6x\",\"4r\":(10*D.G-10)/2+\"px 0 0 0\"})}if(1C=='aN'){7c.2h='';K(B.c,{1E:\"1D\",\"W\":bw,\"1p\":\"#\"+D.1p,\"4R\":\"9m 8k\",\"3z-aA\":\"1a\"})}7c.1b(B.1W);J lL=bw*D.G*(D.bg==1&&D.9c==1?0.8:1);J lU=bh*D.G*(D.bg==1&&D.9c==1?0.8:1);K(B.1W,{'W':lL,'1j':lU,'S':'1e','Q':1V.26(1C=='3y'?bh/2-10*D.6A+2*D.G:(D.bg==1&&D.9c==1?2*D.G:0)+D.2j*1-D.2k*1),'1a':1V.26(1C=='3y'?bw/2-10*D.6A+2*D.G:(D.bg==1&&D.9c==1?2*D.G:0)+(1-D.G)*bw/2),'1w':D.2F,'3e':'2F(1w='+(D.2F*1x)+')'});B.w=bw;B.h=bh*D.G};J 6T,an=I(4p,2O){1u(J V in 2O){if(9o.3Q(2O,V))4p[V]=2O[V]}I 7i(){B.9y=4p}7i.1h=2O.1h;4p.1h=1o 7i();4p.ac=2O.1h;M 4p},9o={}.bU;6T=(I(9Y){an(6T,9Y);I 6T(1i){B.2T=1o 1c.2M(1i.C(),'5E',20,20);6T.ac.9y.3Q(B,'gB',{2T:B.2T});B.1t.2g=1i.dd;B.7z({'1A':'1L','S':'1e','Q':B.9S(1i.C())});1i.1n().4t.1t.1b(B.1t);if(1i.C().1l===1&&B.2T.D.3A===0){B.1t.7e=B.2T.D.a8('1l',{hv:'5E'});1i.ic(B.1t)}}6T.1h.9S=I(C){M 1V.5F((C.1J-B.2T.h)/2+B.2T.D.2j-B.2T.D.2k)};M 6T})(1s.1c.4m);1s.1c.6T=6T;J 6R,an=I(4p,2O){1u(J V in 2O){if(9o.3Q(2O,V))4p[V]=2O[V]}I 7i(){B.9y=4p}7i.1h=2O.1h;4p.1h=1o 7i();4p.ac=2O.1h;M 4p},9o={}.bU;6R=(I(9Y){an(6R,9Y);I 6R(1i){B.2T=1o 1c.2M(1i.C(),'7U',20,20,'','5E');6R.ac.9y.3Q(B,'ho',{2T:B.2T});B.1t.2g=1i.dd;B.7z({'1A':'1L','1E':'1D','S':'1e','Q':B.9S(1i.C())});1i.1n().4t.1t.1b(B.1t);if(1i.C().1l===1&&B.2T.D.3A===0){B.1t.7e=B.2T.D.a8('1l',{hv:'7U'});1i.ic(B.1t)}}6R.1h.9S=I(C){M(C.1J-B.2T.h)/2+B.2T.D.2j-B.2T.D.2k};M 6R})(1s.1c.4m);1s.1c.6R=6R;",
        62,
        1966,
        "|||||||||||||||||||||||||||||||||||||this|vars|uppodStyle|||scale|ctx|function|var|CSS|lineTo|return||else|document|top|indexOf|position||false|key|width|icon|style||||||||||||left|appendChild|Uppod|length|absolute|media|true|prototype|uppod|height|createElement|tip|playlist|controls|new|color|volbarline_s|moveTo|window|dom|for|file|opacity|100|div|ipl|cursor|ReColor|name|none|display|str|hd_b|cntrl|plplace|cntrloutheight|beginPath|pointer|sub|padding|closePath|value|cntrlvolbar|playscl|body|cntrls|null|Math|canvas|fill|offsetWidth|lineWidth||ifull|||||round|||stg|stroke|volbarline_b|_i||Event|aim|onclick|innerHTML|marginleft|margintop|marginbottom|run_s|options|MediaW|offsetHeight|substr|url|line_s|cntrli|_ref|undefined|volume|controlsObj|marginright|background|ratio|String|play|replace|event|_results|alpha|prev_b|pl_mc|split|elem|lang2|line_b|Element|typeof|parent|line_all_b|plbg|ads|onmouseout|element|onmouseover|media_yt|cntrlmargin|runvolume_b|iframe|rows||||mybuts|next_b||iplay||||play_b|block|zIndex|poster|filter|bottom|xhr|logo|cntrlength|layer|sub_b|gradient|out|cntrl_line|isYoutube|pause_b|_len|addElement|hd1_b|Hide|volume_b|className|menu_b|loadvars|start|text|notip|hdselect|download_b|stop_b|volume_mute_b|000000|inside|cntrl_volbar|obj|trace|playlist_b|back_b|start_b|CurrentTime|auto|comment|call|ffffff|line|strokeStyle|fillRect|Array|Browser|setAttribute|substart|run||sub_menu|hidden||active||IconImg||||Toggle|sub_text|run_b|plid|alrt|duration|addEventListener|borderRadius|download|volbarline_play_b|push|visibility|Control|http|Controls|child|lineJoin|margin|icon2|ControlBar|offsetLeft|line_play_b|parentNode|ToolTip|lineCap|Opacity|setStyle|ToolTipHide|menu_big|pic_w|src|pic_h|time_all_b|_property|cntrlout|target|mobile|time|volbar_b|line_but_b|youtube|time_play_b|plth|font|parseInt|pause|all_a|muted|halficonisover|stop|domElment|clearInterval|||||||||test|sep|pltext|_userAgent|img_icon|cntrl_x|nativecontrols|Shaper2|PositionSub|gap|quadraticCurveTo|bgc|play_a|volbarline_all_b|Duration|offsetTop|plmargin_h|link|CheckGradiendDiv|rmenu|bgcolor|removeChild|select|plwidth|Show|fromCharCode|nametip|setTimeout|marquee|uibg|sub_menu2|sep_b|full|floor|fillStyle|control|hdlinks|0px|sourceDom|default|JSON|getElementById|keyCode|linear|plrandom|hda|CheckBase64|buffer_b|case|sub_lang|object|video|stageheight|Seek|||mediaW||||||||clangs|partial|1px|pageX|seconds|hide|color_all|quality|setInterval|border|hideInterval|bottomrow|PI|hd1|user|line_load_b|volbars|events|Alert|back|cntrlcolor|5px|browser|center|lDiv|string|scale2|__bind|charCodeAt|plInterval|init|scrn|innerHeight|media_mc|backgroundColor|mb_w|line_all|poster_mc|clickX|color_play|Stop|Volume|OnPlay|ExitFullscreenControl|scrn_w|EnterFullscreenControl|cntrlbgcolor|measureText|rep|hdsw|traceConsole|webkit|||||||||||space_b|PlClick0|selfDom|currentTime|title|uid|_vars|addDom|ctor|space|next|plheight|_keyStr|onReady|2px|bar|Canvas|OnPause|getContext|random|brw|bga1|callbacks|bga2|fff|css|charAt|myjsa|ovalY|prev|styleObj|1000|pltw|stagewidth|apply|plmargin|removeEventListener|ovalH|subsize|cbg|ibuff|sub_bg|_ref1|istart|FullOff|volbarline|full_back|clearRect|eventplayed|float|ovalX|overflow|||||||||||break|txt|minutes|000|full_b|Full|cookie|node|Fullscreen|line_w|Arial|Play|RunPos|name_txt|iline|PlClick1|small|icon1|eventtime|arc|bg_a|showname|ivolbar_v|toJSON|visible|bg_o|mb_h|min|mouseMoveCatcher|findLeft|listeners|end|pageY|uppodStyleName|HdSelect|pos|filehd|arguments|Download|solid|timelength|alrt_x|_parentDom|ori|tmp|o11|autoplay|NewFile|_mobile|o21|o22|_this|||sub_menu_bg|00|rgba|normal|_xml|||||fontSize|bg_smallicon|o12|getRandomInt|SetSubButStyle|max|audio|brd|filesStr|right|commentbgcolor|10px|all|__hasProp|shownameliketip|track|fullHide|open|transparent|Object|clang|Xml|onotop|constructor|plplayed|ipltouch|offset|menu|200|targetTouches|addColorStop|cntrlhide|fullcntrlhide|onmouseup|volbarline_v|uibg_gl|_onError|formatTime|req|youtubeElemId|error|255|_okSources|_calcTop|pl_history|pl_rows|onmousemove|url_shift|plaim|_super|loading|runvolume_pos|sources|hdselects|_uppod|namefontstyle|over|radio|Back|get|cntrl_volbarline|replacer|VolumeDraw|__super__|holder|controlKeys|Pause|plcolor_play|plbgcolor_play|onmousedown|namefontsize|Cntrl_Style|sh_c|list|__extends|localization|cntrlstyle|_onPlaying||bg_gl|logomargin_v|HTB|onEnded|HTG|logoplace|_intervalPlayProcess|moz|align|plalpha_play|logomargin_h|sub_menu_x|not|vbh|HTR|sub_showed|_onPause|subbgcolor|_onEnded|_beforeDeactivate|onError|buffer|fontFamily|screenposter|pltumbs|_isPreroll|subcolor|reloadercounter|_onVideoError|left2|destroy|ovalW|_mediaW|sublangs|TimerSub|||||while|Mute|add|FullscreenChange|act|canvasObjs|SlidePLProcess|andLinks|_j||StopSub|||parse|encodeURIComponent|Error|Next|lang|PositionLogo|mbx|hdf|opera||indent|mind|join|Media||Init||orLinks|substring|YoutubeInit|getPlaylistId|defaultHeight|cntrlline|touchLastY|droprow|ipad|500|touchLastX|defaultWidth|notfound|Verdana|Resize|YT|log|UpdatedVarsFromPlaylist|state|ierr|PlClickCont|hasOwnProperty|CreatePl|isNaN|nametags1|color_load|cntrl_run|||||full_back_b|time_play|CntrlHide|UppodStyle|128|repeat||stageposition|trigger|getCss|Remove|Cors|keyseek|irealfull|Filename|onCanPlay|alrt_txt||err|shownameonstop|nm2|run_pos|glasscolor|config|Menu|mbkode|Quality|menuitems|youtube_id||plbgcolor|found|_onSourceError|LoadFile|curtop|off|sublangsall|offsetParent|badIndex|tip_margin_y|youtube_quality_received|firstframe|android|chrome|smoothing|curleft|try|lang_ru|sublang|_sourcesDom|checkStart|catch|Link|innerWidth|_at_options|time_all|subbgalpha|percent|cursorX|isetcontrols|scrn_h|commentmargin|clientX|_onErrorOnce|bottomrowheight|plalpha|playstop|_onPlayProcess|shownameonover|timeitems|size|toogleFullscreen|submargin|_onPlay|OnEnded|SeekTime|PlaceControls|isub_menu_bgcolor|acum|context|alrt_bg|PlNext|sub_last|input|image|EndPl|fullscreen|buffered|ssa|UppodBrowser|KillSub|||bg_w|ihtml5|fileold|change|_iPhone|files|classList|autostart|bg_h|PlPlace|CheckPrevNext|Buffer|FontWeight|hide_force|isFullscreen|ShowHide|MenuBigItem|iover|activate|preventDefault|deactivate|mbkodt|status|keys|Reload|ihide|ltc|igo|played|Prev|cutHex|onload|controlBarPadding|hours|CntrlShow|srt|slice|tick_counter|uppod_players|firstElementChild|restrictMediaPlay|selectedIndex|done|mes|delete|sub_lang_all|doesNot|userAgent||navigator||waiter|playInterval|eval|brdc|savePositions|_ref2|_ads|TICK_MSEC|_ref3|_controls|ca1|splice|_k|fstyle|selector|_ios||ccolors|dataObj|LinkParser|SlidePLs|escapable|console|3000|number|isub_menu_color|c_def|cbgcolors|cbg_def|ver|sh_a|ca0|istartevnt|quote|_urls_and|is_array|androidplayer|TIMEOUT_SEC|ToggleView|RemovePl|SlidePL|ClearOldVars|_len2|UppodLinkParser|mesEl|idx|VolumeN|_len1|elems|walk|reviver|throw|and|DestroyMedia|canvasObj|Layer|CntrlBg|cntrlvolbarline|cntrlvolbarline_v|0000|separator||touchStartY|show|touchStartX|from|dur|pStyle|createPlaylists|120|what|yt_media_|PlClick|NotFound||File|devicePixelRatio|webkitBackingStorePixelRatio|sound|youtube_created|bg_sh|gl_a2|gl_a1|gl_color|embedcode|menu_code|commentcolor|stagetop|stageleft|UppodControls|cntrlsize|menu_link|menu_download|firefox|iframeurl|logoalpha|afterCreateCallback|namepadding|plalpha2|volbar|referer|plcolor|logolink|plrows|namebgcolor|namefont|menu_w|menu_h|_onReadyOnce|screencolor|namebgalpha|reloadertime|fontWeight|name_bg|PlayerState|playerBodyElement|like|com||_setLeftTop|bodycolor|SeekMove|SelectRework|youTubeScript|UppodXml|alert|cover||uppodstyle|heightPx|querySelector|est|widthPx|errjson_decode|player|rmenu1|rightMenu|EnterFullscreen|alpha0|lastXY|Start|Playlist|lastdXY|_base|load_a|cntrlendmargin|cntrlbgo|_create|cntrlmarginleft|fillText|_wrapEach|FFFFFF|st0|Comment|FontStyle|MenuPosition|curX|evObj|curY|ended|listener|ScreenSize||img|line_play|showtip|nowrap|menu_big_bg|plr|UppodControl|onerror|ca2|redirect|clientY|mbkodbg||loader|bind|top2|white|setSources|OldKeys|setStr|_android|_firefox|UppodEvent|ExitFullscreen|mode||void|16px|Events|method|or_lang2|oPos|_safari|getCookie|radius|search|TheEnd|responseText|option|cntrl_|VolumeMove_v|3px|UppodCors|subtxt|ToggleSubStyle|QualityLinks|classSuffix|iPod|CreateSubs|showtitle|VolbarMove|webkitIsFullScreen|mozFullScreen|elementName|MuteControl|toString|initevent|label|stringify|Source|_opera|errjson|onPlayProcess|iPhone|HideBuffer|iPad|getDuration|OnVolume|SetSub|cnt|addcontrols|stageMarginTop|subs|toolTipOn||||dots|VolbarHideProcess|VolumeMove|audiocontrols|fixed|lastTime|index||QualitySelect|tipbgo|tipbgcolor|ass||glassalpha2|Logo|NameTip|tip_off|glassalpha1|vtt|HTML5|MouseMove|glass|hdseparator|fontStyle|CreateNameTip|tipfontcolor|tipfont|commenttopmargin|commentbgalpha2|ffect|ShowSub|commentbgalpha1|tipfontsize|iwebkit|createIframe|namebgo|namecolor|namemargin_h|createBody|createScreen|createComment|createAlert|selected|namemargin_v|pause_tip|uppodplayer_sub_switcher_dot|uppodplayer_sub_switcher_bg|logotarget|Ads|play_tip|ToggleSub|contentDocument|paddingTop|666|createMouseMoveCatcher|18px|eff|uppodplayer_sub_switcher|Detect|vendor|hotkey|CloseAlrt|run_volume|safari|params|menu_nocode|Mybut|borderColor|createTip|lineHeight|khtml|createPlayer|20px|menuauto||VolumeOver|pauseVideo|MenuClose|PlTouchEnd|PlTouchMove|playVideo|YoutubeError|content|nbsp|static|PlTouchGo|youtubeIframe|relative|isActive|YoutubeQualityChanged|240p|medium|OnSeeked|seeked|seeking|OnSeeking|PlTouchStart|ontouchstart|botomrow|endrow|YoutubePlayerReady|isYoutubeApiLoaded|downloadUrl|_blank|textAlign|bigposter|VolumeOut|stopVideo|volumechange|destroyCanvases|clickY|findTop|PlayPlNumber|newpl|webkitCancelFullScreen|msExitFullscreen|PlOut|PlOver|mozCancelFullScreen|cancelFullscreen|VolbarHide|cancelFullScreen|exitFullscreen|PlPrev|oRadius|320p|cntrlbgalpha2|Pl|cntrlmarginright|QualitySelecter|cntrlbgalpha1|cntrlbg|airplay|brdcolor|abs|isVisible|onchange|ShowBuffer|shift|cntrl_tune|cntrl_volume|stopPropagation|CreateSub|DocClick|click|KeyHandler|cntrl_volbarline_v|updateTimeDisplay|alerts|player_error|createPosterHtml|fit|msg|canplay|YoutubePlayerStateChange|ClickScreenMobile|large|480p|hd720|720p|YoutubeQuality|createMediaW|message|concat|args|youtu|getCurrentTime|MozUserSelect|Sizing|Playing|disableSelection|onselectstart|cntrl_sound|smoothing_off|no_data|clipboard|No|DOMParser|unlike|GET|copied|Code|xml|err_img|unescape|copy_link|copy_code||plcomment|pl0|_utf8_decode|_createCORSRequest|XMLHttpRequest|withCredentials|setVarsLang|224|send|readyState|pltumbs0|Vars|success|setVarsDefaults|err_pl|Incorrect|TimePlay|TimeAll|defineProperty|getCallback|_at__parentDom|winwidth|_iPod|RunVolume|rightedge|RunLine|Separator|winheight|record|this_w|startplay|shownotes|property|notype|errjsonpl_decode|querySelectorAll|_at__uppod|positiontip|this_h|settings|tipalpha|backgroundC|XDomainRequest|manageStgSize|remove|u00ad|callbackRef|hack|tagName|u0600|u0604|u200c|callback|u17b5|u17b4|u070f||containerEl||request|103|Tahoma|backgroundPosition|Date|119|half|msRequestFullscreen|valueOf|requestFullScreen|requestFullscreen|mozRequestFullScreen|webkitRequestFullScreen||u200f|u2028|firstChild|pFontSize|insertBefore||the|htmlsize|pText|375|loadStyle|videocontrols|iosplayer|lResult|_utf8_encode|no_h|no_w|ufeff|ufff0|u206f|u2060|u202f|uffff|meta|lang_en|streamcontrols|lastIndex|isFinite|switch|bottomedge|resize|volume_mute|menu_mail|sent|contrec|menu_send|_destroySourcesDom|bezierCurveTo|_at__vars|cccccc|menu_copy|999|TICK_SEC|fontsize|High|sh_under|hq_off|playing|traffic|Switch||Text|_osWin|bgalpha|_createSourcesDom||fontcolor||sound_off|cntrlhdselect|plfontsize|isOpera|plplay|plplay1|pliview|plfont|plmargin_v|_desktop|nohtml5|hasMediaPosterShown|doSendCanPlay|fillposter|radiodropcache|forceNativePlayBtn|sub_shift|realfullscreen|data|subbgo|serif|reloader|FAED54|subfont|sans|_ie|menu_message|targetObj|smoothing_ok|_at_key|password|VolumeBarline|LineBtn|rec|sid|VolumeBar|_chrome|startlive|Space|smoothing_off_ok|live|createLinearGradient|rerec|Android|Line|VolumeBarlineV|playrec|Hd|_iPad|Smoothing|Hd1|Sub|_|VolumeMute|toLowerCase|ownerDocument|initEvent|FEF370|IEMobile|Dialogue||||OPR||dispatchEvent|ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789|D90000|checkGradiendDiv|Chrome|unMute|Version|_serif|mute|isMuted|keyup|shadow|_version|exec|webOS|Safari|createEvent|409829|ReadyState|644082|BlackBerry|a56305|073DA0|cssHide|FFB0BE|Windows|NetworkState|NETWORK_EMPTY|72CCF8|CORS|Firefox|62DE50|HAVE_ENOUGH_DATA|italic|NETWORK_IDLE|17px|45px|MSIE|Trident|47px|NT|bold|NETWORK_LOADING|3600|supported|HAVE_FUTURE_DATA|HAVE_NOTHING|cssShow|getVideoLoadedFraction|pointerEvents|NETWORK_NO_SOURCE||addClass|RegExp|set||removeClass|Mini|HAVE_METADATA|Wra|Infinity|FEBA54|E8BBFF|Et|aes_key|cssFloat|||HAVE_CURRENT_DATA|NaNpx|Opera|trim|load|canPlayType|Apple|keydown|MouseUp|native|MouseOut|MouseOver|iphone|Wmn7FSpEfR1OcgAVvl5VzrAVvs07XSw0Wmw0WmwsfBUEusXNFhJ8FhJbGhMgfYnkfBuNisU2ARXgfY1nuYnNfBLNikJVDK5quYJ8iRJnisnruhUnA3aqibMPFBUEusXNFhJgfBC3usUnFBCnfBUSuh1qDkJQGYnPuBU8FYJVu3ayfYuqisU8Dknbuh98vRXSARn8fBLSF3aqDBnwuRUEFk5nibNHrHU8Gh5EDKuPARCyfYaqA3JIuh50fYu1FkC0Gh9VfBaqDhCyfMJwiY9bfYUqu3UOAhUPfBCPGhCnfYCqFkCNDBU1FkanuknVuha8Gh5EDKN0Fhw1fYnyDY1PCRUgDYD8Fk9yDY1PCRUNDhaEF3UEFkancK9kXS5giYUEDmpsfmiETQePc30Edvy|allowScriptAccess|allowFullScreen|initFlash|always|swfobject|uRuNFmNkDh5ODYnqFtNwTYKPASUoTYHPumn7ur1kDh5ODYnqFtNOdRISuRa1ik4yAgUNzSisxkHyiYMSi2JXFsvyAS9NdlbEdSpyAg1OXhKEzOW1z1C0iknVuS5kik9Iv2NNibCquYHyASPSxlb6AS50F1C0iknVuSpgCtbEfrIEutpNXSiVikJwFYMOulpqRt8PH3aSGh5sdln7D2NEFYHyAS0IdRIbh2HyASnDzhIFA118fYHyASn9Gg1FusJVA3aEF24yuln7ikJ0DRXVZYaFuJ19RrInzhu1FkC0Gh9Vdmn7ikJ0DRXVX1UiDSPsfrIOzrM9x3DyGhUndYWITln7GhAyG1IORln7iQ1wTsXniYUNA2HyFkJ3ZMXnu0J4impsRMUtXSIndYWEdSDiRYZsTmDsXSbPG1IORln9fRXnDBJSFtLwflpsdBKydRP0dQAViO09Wln7iS50dMwsumLPRmiExgHpAr1wTObyRmiSRmiEx2pyClLkzre7uOUNTki7utPodRP1ZQZ9AJIkRrPgzrZVxlNiX2EiXSb7Wg1oTk0VDt51dQWExgWVDSpSTObyRmDQRmiEdrIydQHpGr0wx2b8WS5sx2bodSn7Cle3zrCFGJ07CS44TkHyCSn9CmpSTOpEcgZVxm5ndQZEfR19flbydrP0dByEc3bydR1OZQvyCt5tZr14dRP0dQAVAt5KdMwsTkXiXSb|embedSWF|oncontextmenu|ContextMenu|watch|embed|activateBaseUI|onYouTubeIframeAPIReady|script|iframe_api|www||uRuNFmNkDh5ODYnqFtNwTYKPASUoTYHPumn7ur1kDh5ODYnqFtNOdRISuRa1ik4yAgUNzSisxkHyiYMSi2JXFsvyAS9NdlbEdSpyAg1OXhKEzOW1z1C0iknVuS5kik9Iv2NNibCquYHyASPSxlb6AS50F1C0iknVuSpgCtbEfrIEutpNXSiVikJwFYMOulpqRt8PH3aSGh5sdln7D2NEFYHyAS0IdRIbh2HyASnDzhIFA118fYHyASn9Gg1FusJVA3aEF24yuln7ikJ0DRXVZYaFuJ19RrInzhu1FkC0Gh9Vdmn7ikJ0DRXVX1UiDSPsfrIOzrM9x3DyGhUndYWITln7GhAyG1IORln7iQ1wTsXniYUNA2HyFkJ3ZMXnu0J4impsRMUtXSIndYWEdSDiRYZsTmDsXSbPG1IORln9fRXnDBJSFtLwflpsdBAydRP3dKHVDQ09Wln7it5KdMwsumLPRmiExgvpxQ1sTObyRmiSRmiEx2HyCmLkzre7uOw4TkZ7utPodRP0ZQZ9xMIkRrPgzrZVxlNiX3JiXSb7Wg1UTseVGS5jdQWExgWVFlpSTObyRmDqRmiEdrIndQvpGr0wx2b8WS5tx2bodSn7Cme2zrCFGJ07Ct5NTkpyCtn9CSpSTkKEcgZVAl5ydQZEfR19flbydrP3dmK1dRP1zhiVvlNiX0XiXSb7vSp1TBIiX3EiXgEiX3NiXSUiX3niXgEiX0NiXSUiX0niXgywTMwsanwsxOL9drI3TkWVFtp1drP1TsW9a30sTQv1TQv1TmD8fYnkikMIuRUIuhaEARC8DkMSfY1nuYnNR21OfY1nuYnNfYnkfYnkikMIuRC8iRJnisnruhUnA3aqibMPFBUwARXnFsaxF2anfYUnFkD0GBU8fYuqisU8uY9ODh1nFsa8ikJIF3unv2NEFYa8fYCNFYU8i2UEA2J8fYCqFkCNDBUNiBLnFkaQGYnPuBUNDhaEF3Uwik90F3a5iYJ8vRXSARn8JRLwF2a8F25OFYnOG3U0F3JOGBU2GhanF3UkDh5ODYnqFsUgA3XVfBaSAh5giYMSuh50fBLqi2n0Gh9VfYXNA2Isik91FkaQF2UqisUOikJNDYJMFYJIuh50fYaEDsUQH1C8FY9sfBuNisC8DY9wfMaqu2DPuRUNAsCqFBJ0uRUPuhu0XS5giYUEDmpsfmiETQePc30Edvy|startX|borderWidth|borderStyle|cancelBubble|9px|which|cMenu|deactivateBaseUI|shadowOffsetX|shadowOffsetY|midrollVast|vast_pauseroll|pauserollVast|vast_midroll|midrollTimes|vast_pl|adEachPlaylistItem|midroll_times|vast_postroll|postrollVast|save|parentDom|vvv|containerDom|playerDom|vast_preroll|prerollVast|pauseOnClick|vast_pauseonclick|strokeRect|catcher|move|shadowColor|shadowBlur|initHtml5|sizeInterval|mouse|contentWindow|DOMContentLoaded|vast_preroll_pauseonclick|prerollPauseOnClick|paddingLeft|paddingBottom|4px|paddingRight|onplay|allow|setPlaybackQuality|boolean|mybut|700|999999999|x1f|x7f|x9f|toggle|nofile|mozfullscreenchange|fullscreenchange|networkState|webkitfullscreenchange|MSFullscreenChange|bfnrt|fullscreenElement|x00|exitfullscreen|outline|getUTCHours|getUTCMinutes|getUTCDate|getUTCMonth|strict||getUTCFullYear|getUTCSeconds|Number|u0000|350|320||sample|frameborder|Boolean|allowfullscreen|SyntaxError|mobileFirefox|plim|condition||parseFromString|class|waitFor|instanceof|_text|_background|ActiveXObject|Microsoft|getOne|stretch|playsinline|preload|loadXML|XMLDOM|async|ontouchmove|ontouchend|scroll|newPlaylistItem|createTextNode|200px|0c0|isTrace|pre|clientWidth|clientHeight|PlTouchStart1|pyVidh|UppodUpcat|epyVidh|Morph|Tween||||Fx|use|hasWebm|invalid|ENDED|Ad|structure|fileinvalid|buffersec|streamnotfound|Stream|Like|PAUSED||ID|highres|1080p|getPlayerState|All|Unlike|PLAYING|Turn|Loading|Cubic|effE||sh_dist|cntrlplay||cntrl_play|cntrlstop|cntrl_pause|cntrlpause|sh_blur|bg_in|cntrlbuffer|Done|Shownotes|cntrl_buffer|cntrlfull|cntrl_full|Settings|hd1080|touch|108|ChangeColor|Get|EventDetail|118|Player|122|seek|114|104|PlNumber|102|112|105|117|||Change|Played|videoId|playerVars|109|onStateChange|onPlaybackQualityChange|101|300|144p|tiny|getAvailableQualityLevels|loop|rel|iv_load_policy|html5|enablejsapi|playerapiid|allowHtmlOverMediaControl|modestbranding|showinfo||cntrl_stop|cntrldownload|tiptags2|tiptags1|tipbgshadow|tipcenter|Copy|On|Off|Share|Email|Friend|Size|BG|Low|commentbgcolor_k|Send|Sent|commentalign|Previous|Original|logomargin|pltags2|nametags2|pltags1|plcolor2|location|_self|swf|nametopanel|nameleading|remsublang|webkitFullscreen|mail|subtop|subbgshadow|namebgshadow||plcenter|Subtitles|Traffic|Password|broadcast|Broadcast|cntrlvolume|cntrlmenu|cntrl_playlist|cntrlplaylist|cntrl_menu|Record|effdir|cntrl_next|cntrlnext|cntrl_download|cntrlprev|cntrl_prev|Re|ontinue|cntrl_hd|cntrlhd||cntrlrun|cntrl_separator|cntrlseparator|Disable|cntrlrun_volume|MB|Enable|cntrl_run_volume|cntrl_start|curtainAlpha|cntrl_sub|666666|HQ|cntrlsub|cntrlstart|curtainColor|curtain|116|disablekb|isPauseroll|playPauseroll|2099|playPreroll|unlockPlay|run_line|Jan|isPreroll|uppod_mybut|mediaPlayingProcess|isPostroll|playPostroll|191|defaultcontrols|source|GMT|getComputedStyle|01|attr|uppodhtml5_volume|VolbarlineOut|lastIndexOf|tune|ns6|setVolume|path|VolbarlineOver|getPropertyValue|ceil|Mon||VolbarlineDown|VolbarlineMove|VolbarlineUp|expires|113|uppodhtml5_|seekTo|uploader|getStatus|href|hasMp4|111|106|forceFullscreen|121|192|107|110|127|2048|z0|115|seekAfterFullLoad|Za|hasMouseEvents|hasCorsRedirect|globalAlpha|png|7px|base64|restrictMediaClick|restrictMediaMuted".split(
            "|"
        ),
        0,
        {}
    )
);
(function ($, window, document) {
    var pluginName = "tooltipster",
        defaults = {
            animation: "fade",
            arrow: !0,
            arrowColor: "",
            autoClose: !0,
            content: null,
            contentAsHTML: !1,
            contentCloning: !0,
            debug: !0,
            delay: 200,
            minWidth: 0,
            maxWidth: null,
            functionInit: function (origin, content) {},
            functionBefore: function (origin, continueTooltip) {
                continueTooltip();
            },
            functionReady: function (origin, tooltip) {},
            functionAfter: function (origin) {},
            hideOnClick: !1,
            icon: "(?)",
            iconCloning: !0,
            iconDesktop: !1,
            iconTouch: !1,
            iconTheme: "tooltipster-icon",
            interactive: !1,
            interactiveTolerance: 350,
            multiple: !1,
            offsetX: 0,
            offsetY: 0,
            onlyOne: !1,
            position: "top",
            positionTracker: !1,
            positionTrackerCallback: function (origin) {
                if (this.option("trigger") == "hover" && this.option("autoClose")) {
                    this.hide();
                }
            },
            restoration: "current",
            speed: 350,
            timer: 0,
            theme: "tooltipster-default",
            touchDevices: !0,
            trigger: "hover",
            updateAnimation: !0,
        };
    function Plugin(element, options) {
        this.bodyOverflowX;
        this.callbacks = { hide: [], show: [] };
        this.checkInterval = null;
        this.Content;
        this.$el = $(element);
        this.$elProxy;
        this.elProxyPosition;
        this.enabled = !0;
        this.options = $.extend({}, defaults, options);
        this.mouseIsOverProxy = !1;
        this.namespace = "tooltipster-" + Math.round(Math.random() * 100000);
        this.Status = "hidden";
        this.timerHide = null;
        this.timerShow = null;
        this.$tooltip;
        this.options.iconTheme = this.options.iconTheme.replace(".", "");
        this.options.theme = this.options.theme.replace(".", "");
        this._init();
    }
    Plugin.prototype = {
        _init: function () {
            var self = this;
            if (document.querySelector) {
                var initialTitle = null;
                if (self.$el.data("tooltipster-initialTitle") === undefined) {
                    initialTitle = self.$el.attr("title");
                    if (initialTitle === undefined) initialTitle = null;
                    self.$el.data("tooltipster-initialTitle", initialTitle);
                }
                if (self.options.content !== null) {
                    self._content_set(self.options.content);
                } else {
                    self._content_set(initialTitle);
                }
                var c = self.options.functionInit.call(self.$el, self.$el, self.Content);
                if (typeof c !== "undefined") self._content_set(c);
                self.$el.removeAttr("title").addClass("tooltipstered");
                if ((!deviceHasTouchCapability && self.options.iconDesktop) || (deviceHasTouchCapability && self.options.iconTouch)) {
                    if (typeof self.options.icon === "string") {
                        self.$elProxy = $('<span class="' + self.options.iconTheme + '"></span>');
                        self.$elProxy.text(self.options.icon);
                    } else {
                        if (self.options.iconCloning) self.$elProxy = self.options.icon.clone(!0);
                        else self.$elProxy = self.options.icon;
                    }
                    self.$elProxy.insertAfter(self.$el);
                } else {
                    self.$elProxy = self.$el;
                }
                if (self.options.trigger == "hover") {
                    self.$elProxy
                        .on("mouseenter." + self.namespace, function () {
                            if (!deviceIsPureTouch() || self.options.touchDevices) {
                                self.mouseIsOverProxy = !0;
                                self._show();
                            }
                        })
                        .on("mouseleave." + self.namespace, function () {
                            if (!deviceIsPureTouch() || self.options.touchDevices) {
                                self.mouseIsOverProxy = !1;
                            }
                        });
                    if (deviceHasTouchCapability && self.options.touchDevices) {
                        self.$elProxy.on("touchstart." + self.namespace, function () {
                            self._showNow();
                        });
                    }
                } else if (self.options.trigger == "click") {
                    self.$elProxy.on("click." + self.namespace, function () {
                        if (!deviceIsPureTouch() || self.options.touchDevices) {
                            self._show();
                        }
                    });
                }
            }
        },
        _show: function () {
            var self = this;
            if (self.Status != "shown" && self.Status != "appearing") {
                if (self.options.delay) {
                    self.timerShow = setTimeout(function () {
                        if (self.options.trigger == "click" || (self.options.trigger == "hover" && self.mouseIsOverProxy)) {
                            self._showNow();
                        }
                    }, self.options.delay);
                } else self._showNow();
            }
        },
        _showNow: function (callback) {
            var self = this;
            self.options.functionBefore.call(self.$el, self.$el, function () {
                if (self.enabled && self.Content !== null) {
                    if (callback) self.callbacks.show.push(callback);
                    self.callbacks.hide = [];
                    clearTimeout(self.timerShow);
                    self.timerShow = null;
                    clearTimeout(self.timerHide);
                    self.timerHide = null;
                    if (self.options.onlyOne) {
                        $(".tooltipstered")
                            .not(self.$el)
                            .each(function (i, el) {
                                var $el = $(el),
                                    nss = $el.data("tooltipster-ns");
                                $.each(nss, function (i, ns) {
                                    var instance = $el.data(ns),
                                        s = instance.status(),
                                        ac = instance.option("autoClose");
                                    if (s !== "hidden" && s !== "disappearing" && ac) {
                                        instance.hide();
                                    }
                                });
                            });
                    }
                    var finish = function () {
                        self.Status = "shown";
                        $.each(self.callbacks.show, function (i, c) {
                            c.call(self.$el);
                        });
                        self.callbacks.show = [];
                    };
                    if (self.Status !== "hidden") {
                        var extraTime = 0;
                        if (self.Status === "disappearing") {
                            self.Status = "appearing";
                            if (supportsTransitions()) {
                                self.$tooltip
                                    .clearQueue()
                                    .removeClass("tooltipster-dying")
                                    .addClass("tooltipster-" + self.options.animation + "-show");
                                if (self.options.speed > 0) self.$tooltip.delay(self.options.speed);
                                self.$tooltip.queue(finish);
                            } else {
                                self.$tooltip.stop().fadeIn(finish);
                            }
                        } else if (self.Status === "shown") {
                            finish();
                        }
                    } else {
                        self.Status = "appearing";
                        var extraTime = self.options.speed;
                        self.bodyOverflowX = $("body").css("overflow-x");
                        $("body").css("overflow-x", "hidden");
                        var animation = "tooltipster-" + self.options.animation,
                            animationSpeed =
                                "-webkit-transition-duration: " +
                                self.options.speed +
                                "ms; -webkit-animation-duration: " +
                                self.options.speed +
                                "ms; -moz-transition-duration: " +
                                self.options.speed +
                                "ms; -moz-animation-duration: " +
                                self.options.speed +
                                "ms; -o-transition-duration: " +
                                self.options.speed +
                                "ms; -o-animation-duration: " +
                                self.options.speed +
                                "ms; -ms-transition-duration: " +
                                self.options.speed +
                                "ms; -ms-animation-duration: " +
                                self.options.speed +
                                "ms; transition-duration: " +
                                self.options.speed +
                                "ms; animation-duration: " +
                                self.options.speed +
                                "ms;",
                            minWidth = self.options.minWidth ? "min-width:" + Math.round(self.options.minWidth) + "px;" : "",
                            maxWidth = self.options.maxWidth ? "max-width:" + Math.round(self.options.maxWidth) + "px;" : "",
                            pointerEvents = self.options.interactive ? "pointer-events: auto;" : "";
                        self.$tooltip = $('<div class="tooltipster-base ' + self.options.theme + '" style="' + minWidth + " " + maxWidth + " " + pointerEvents + " " + animationSpeed + '"><div class="tooltipster-content"></div></div>');
                        if (supportsTransitions()) self.$tooltip.addClass(animation);
                        self._content_insert();
                        self.$tooltip.appendTo("body");
                        self.reposition();
                        self.options.functionReady.call(self.$el, self.$el, self.$tooltip);
                        if (supportsTransitions()) {
                            self.$tooltip.addClass(animation + "-show");
                            if (self.options.speed > 0) self.$tooltip.delay(self.options.speed);
                            self.$tooltip.queue(finish);
                        } else {
                            self.$tooltip.css("display", "none").fadeIn(self.options.speed, finish);
                        }
                        self._interval_set();
                        $(window).on("scroll." + self.namespace + " resize." + self.namespace, function () {
                            self.reposition();
                        });
                        if (self.options.autoClose) {
                            $("body").off("." + self.namespace);
                            if (self.options.trigger == "hover") {
                                if (deviceHasTouchCapability) {
                                    setTimeout(function () {
                                        $("body").on("touchstart." + self.namespace, function () {
                                            self.hide();
                                        });
                                    }, 0);
                                }
                                if (self.options.interactive) {
                                    if (deviceHasTouchCapability) {
                                        self.$tooltip.on("touchstart." + self.namespace, function (event) {
                                            event.stopPropagation();
                                        });
                                    }
                                    var tolerance = null;
                                    self.$elProxy
                                        .add(self.$tooltip)
                                        .on("mouseleave." + self.namespace + "-autoClose", function () {
                                            clearTimeout(tolerance);
                                            tolerance = setTimeout(function () {
                                                self.hide();
                                            }, self.options.interactiveTolerance);
                                        })
                                        .on("mouseenter." + self.namespace + "-autoClose", function () {
                                            clearTimeout(tolerance);
                                        });
                                } else {
                                    self.$elProxy.on("mouseleave." + self.namespace + "-autoClose", function () {
                                        self.hide();
                                    });
                                }
                                if (self.options.hideOnClick) {
                                    self.$elProxy.on("click." + self.namespace + "-autoClose", function () {
                                        self.hide();
                                    });
                                }
                            } else if (self.options.trigger == "click") {
                                setTimeout(function () {
                                    $("body").on("click." + self.namespace + " touchstart." + self.namespace, function () {
                                        self.hide();
                                    });
                                }, 0);
                                if (self.options.interactive) {
                                    self.$tooltip.on("click." + self.namespace + " touchstart." + self.namespace, function (event) {
                                        event.stopPropagation();
                                    });
                                }
                            }
                        }
                    }
                    if (self.options.timer > 0) {
                        self.timerHide = setTimeout(function () {
                            self.timerHide = null;
                            self.hide();
                        }, self.options.timer + extraTime);
                    }
                }
            });
        },
        _interval_set: function () {
            var self = this;
            self.checkInterval = setInterval(function () {
                if ($("body").find(self.$el).length === 0 || $("body").find(self.$elProxy).length === 0 || self.Status == "hidden" || $("body").find(self.$tooltip).length === 0) {
                    if (self.Status == "shown" || self.Status == "appearing") self.hide();
                    self._interval_cancel();
                } else {
                    if (self.options.positionTracker) {
                        var p = self._repositionInfo(self.$elProxy),
                            identical = !1;
                        if (areEqual(p.dimension, self.elProxyPosition.dimension)) {
                            if (self.$elProxy.css("position") === "fixed") {
                                if (areEqual(p.position, self.elProxyPosition.position)) identical = !0;
                            } else {
                                if (areEqual(p.offset, self.elProxyPosition.offset)) identical = !0;
                            }
                        }
                        if (!identical) {
                            self.reposition();
                            self.options.positionTrackerCallback.call(self, self.$el);
                        }
                    }
                }
            }, 200);
        },
        _interval_cancel: function () {
            clearInterval(this.checkInterval);
            this.checkInterval = null;
        },
        _content_set: function (content) {
            if (typeof content === "object" && content !== null && this.options.contentCloning) {
                content = content.clone(!0);
            }
            this.Content = content;
        },
        _content_insert: function () {
            var self = this,
                $d = this.$tooltip.find(".tooltipster-content");
            if (typeof self.Content === "string" && !self.options.contentAsHTML) {
                $d.text(self.Content);
            } else {
                $d.empty().append(self.Content);
            }
        },
        _update: function (content) {
            var self = this;
            self._content_set(content);
            if (self.Content !== null) {
                if (self.Status !== "hidden") {
                    self._content_insert();
                    self.reposition();
                    if (self.options.updateAnimation) {
                        if (supportsTransitions()) {
                            self.$tooltip
                                .css({
                                    width: "",
                                    "-webkit-transition": "all " + self.options.speed + "ms, width 0ms, height 0ms, left 0ms, top 0ms",
                                    "-moz-transition": "all " + self.options.speed + "ms, width 0ms, height 0ms, left 0ms, top 0ms",
                                    "-o-transition": "all " + self.options.speed + "ms, width 0ms, height 0ms, left 0ms, top 0ms",
                                    "-ms-transition": "all " + self.options.speed + "ms, width 0ms, height 0ms, left 0ms, top 0ms",
                                    transition: "all " + self.options.speed + "ms, width 0ms, height 0ms, left 0ms, top 0ms",
                                })
                                .addClass("tooltipster-content-changing");
                            setTimeout(function () {
                                if (self.Status != "hidden") {
                                    self.$tooltip.removeClass("tooltipster-content-changing");
                                    setTimeout(function () {
                                        if (self.Status !== "hidden") {
                                            self.$tooltip.css({
                                                "-webkit-transition": self.options.speed + "ms",
                                                "-moz-transition": self.options.speed + "ms",
                                                "-o-transition": self.options.speed + "ms",
                                                "-ms-transition": self.options.speed + "ms",
                                                transition: self.options.speed + "ms",
                                            });
                                        }
                                    }, self.options.speed);
                                }
                            }, self.options.speed);
                        } else {
                            self.$tooltip.fadeTo(self.options.speed, 0.5, function () {
                                if (self.Status != "hidden") {
                                    self.$tooltip.fadeTo(self.options.speed, 1);
                                }
                            });
                        }
                    }
                }
            } else {
                self.hide();
            }
        },
        _repositionInfo: function ($el) {
            return { dimension: { height: $el.outerHeight(!1), width: $el.outerWidth(!1) }, offset: $el.offset(), position: { left: parseInt($el.css("left")), top: parseInt($el.css("top")) } };
        },
        hide: function (callback) {
            var self = this;
            if (callback) self.callbacks.hide.push(callback);
            self.callbacks.show = [];
            clearTimeout(self.timerShow);
            self.timerShow = null;
            clearTimeout(self.timerHide);
            self.timerHide = null;
            var finishCallbacks = function () {
                $.each(self.callbacks.hide, function (i, c) {
                    c.call(self.$el);
                });
                self.callbacks.hide = [];
            };
            if (self.Status == "shown" || self.Status == "appearing") {
                self.Status = "disappearing";
                var finish = function () {
                    self.Status = "hidden";
                    if (typeof self.Content == "object" && self.Content !== null) {
                        self.Content.detach();
                    }
                    self.$tooltip.remove();
                    self.$tooltip = null;
                    $(window).off("." + self.namespace);
                    $("body")
                        .off("." + self.namespace)
                        .css("overflow-x", self.bodyOverflowX);
                    $("body").off("." + self.namespace);
                    self.$elProxy.off("." + self.namespace + "-autoClose");
                    self.options.functionAfter.call(self.$el, self.$el);
                    finishCallbacks();
                };
                if (supportsTransitions()) {
                    self.$tooltip
                        .clearQueue()
                        .removeClass("tooltipster-" + self.options.animation + "-show")
                        .addClass("tooltipster-dying");
                    if (self.options.speed > 0) self.$tooltip.delay(self.options.speed);
                    self.$tooltip.queue(finish);
                } else {
                    self.$tooltip.stop().fadeOut(self.options.speed, finish);
                }
            } else if (self.Status == "hidden") {
                finishCallbacks();
            }
            return self;
        },
        show: function (callback) {
            this._showNow(callback);
            return this;
        },
        update: function (c) {
            return this.content(c);
        },
        content: function (c) {
            if (typeof c === "undefined") {
                return this.Content;
            } else {
                this._update(c);
                return this;
            }
        },
        reposition: function () {
            var self = this;
            if ($("body").find(self.$tooltip).length !== 0) {
                self.$tooltip.css("width", "");
                self.elProxyPosition = self._repositionInfo(self.$elProxy);
                var arrowReposition = null,
                    windowWidth = $(window).width(),
                    proxy = self.elProxyPosition,
                    tooltipWidth = self.$tooltip.outerWidth(!1),
                    tooltipInnerWidth = self.$tooltip.innerWidth() + 1,
                    tooltipHeight = self.$tooltip.outerHeight(!1);
                if (self.$elProxy.is("area")) {
                    var areaShape = self.$elProxy.attr("shape"),
                        mapName = self.$elProxy.parent().attr("name"),
                        map = $('img[usemap="#' + mapName + '"]'),
                        mapOffsetLeft = map.offset().left,
                        mapOffsetTop = map.offset().top,
                        areaMeasurements = self.$elProxy.attr("coords") !== undefined ? self.$elProxy.attr("coords").split(",") : undefined;
                    if (areaShape == "circle") {
                        var areaLeft = parseInt(areaMeasurements[0]),
                            areaTop = parseInt(areaMeasurements[1]),
                            areaWidth = parseInt(areaMeasurements[2]);
                        proxy.dimension.height = areaWidth * 2;
                        proxy.dimension.width = areaWidth * 2;
                        proxy.offset.top = mapOffsetTop + areaTop - areaWidth;
                        proxy.offset.left = mapOffsetLeft + areaLeft - areaWidth;
                    } else if (areaShape == "rect") {
                        var areaLeft = parseInt(areaMeasurements[0]),
                            areaTop = parseInt(areaMeasurements[1]),
                            areaRight = parseInt(areaMeasurements[2]),
                            areaBottom = parseInt(areaMeasurements[3]);
                        proxy.dimension.height = areaBottom - areaTop;
                        proxy.dimension.width = areaRight - areaLeft;
                        proxy.offset.top = mapOffsetTop + areaTop;
                        proxy.offset.left = mapOffsetLeft + areaLeft;
                    } else if (areaShape == "poly") {
                        var areaXs = [],
                            areaYs = [],
                            areaSmallestX = 0,
                            areaSmallestY = 0,
                            areaGreatestX = 0,
                            areaGreatestY = 0,
                            arrayAlternate = "even";
                        for (var i = 0; i < areaMeasurements.length; i++) {
                            var areaNumber = parseInt(areaMeasurements[i]);
                            if (arrayAlternate == "even") {
                                if (areaNumber > areaGreatestX) {
                                    areaGreatestX = areaNumber;
                                    if (i === 0) {
                                        areaSmallestX = areaGreatestX;
                                    }
                                }
                                if (areaNumber < areaSmallestX) {
                                    areaSmallestX = areaNumber;
                                }
                                arrayAlternate = "odd";
                            } else {
                                if (areaNumber > areaGreatestY) {
                                    areaGreatestY = areaNumber;
                                    if (i == 1) {
                                        areaSmallestY = areaGreatestY;
                                    }
                                }
                                if (areaNumber < areaSmallestY) {
                                    areaSmallestY = areaNumber;
                                }
                                arrayAlternate = "even";
                            }
                        }
                        proxy.dimension.height = areaGreatestY - areaSmallestY;
                        proxy.dimension.width = areaGreatestX - areaSmallestX;
                        proxy.offset.top = mapOffsetTop + areaSmallestY;
                        proxy.offset.left = mapOffsetLeft + areaSmallestX;
                    } else {
                        proxy.dimension.height = map.outerHeight(!1);
                        proxy.dimension.width = map.outerWidth(!1);
                        proxy.offset.top = mapOffsetTop;
                        proxy.offset.left = mapOffsetLeft;
                    }
                }
                var myLeft = 0,
                    myLeftMirror = 0,
                    myTop = 0,
                    offsetY = parseInt(self.options.offsetY),
                    offsetX = parseInt(self.options.offsetX),
                    practicalPosition = self.options.position;
                function dontGoOffScreenX() {
                    var windowLeft = $(window).scrollLeft();
                    if (myLeft - windowLeft < 0) {
                        arrowReposition = myLeft - windowLeft;
                        myLeft = windowLeft;
                    }
                    if (myLeft + tooltipWidth - windowLeft > windowWidth) {
                        arrowReposition = myLeft - (windowWidth + windowLeft - tooltipWidth);
                        myLeft = windowWidth + windowLeft - tooltipWidth;
                    }
                }
                function dontGoOffScreenY(switchTo, switchFrom) {
                    if (proxy.offset.top - $(window).scrollTop() - tooltipHeight - offsetY - 12 < 0 && switchFrom.indexOf("top") > -1) {
                        practicalPosition = switchTo;
                    }
                    if (proxy.offset.top + proxy.dimension.height + tooltipHeight + 12 + offsetY > $(window).scrollTop() + $(window).height() && switchFrom.indexOf("bottom") > -1) {
                        practicalPosition = switchTo;
                        myTop = proxy.offset.top - tooltipHeight - offsetY - 12;
                    }
                }
                if (practicalPosition == "top" || practicalPosition == "top_always") {
                    var leftDifference = proxy.offset.left + tooltipWidth - (proxy.offset.left + proxy.dimension.width);
                    myLeft = proxy.offset.left + offsetX - leftDifference / 2;
                    myTop = proxy.offset.top - tooltipHeight - offsetY - 12;
                    dontGoOffScreenX();
                    if (practicalPosition == "top") {
                        dontGoOffScreenY("bottom", "top");
                    }
                    practicalPosition = "top";
                }
                if (practicalPosition == "top-left") {
                    myLeft = proxy.offset.left + offsetX;
                    myTop = proxy.offset.top - tooltipHeight - offsetY - 12;
                    dontGoOffScreenX();
                    dontGoOffScreenY("bottom-left", "top-left");
                }
                if (practicalPosition == "top-right") {
                    myLeft = proxy.offset.left + proxy.dimension.width + offsetX - tooltipWidth;
                    myTop = proxy.offset.top - tooltipHeight - offsetY - 12;
                    dontGoOffScreenX();
                    dontGoOffScreenY("bottom-right", "top-right");
                }
                if (practicalPosition == "bottom") {
                    var leftDifference = proxy.offset.left + tooltipWidth - (proxy.offset.left + proxy.dimension.width);
                    myLeft = proxy.offset.left - leftDifference / 2 + offsetX;
                    myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12;
                    dontGoOffScreenX();
                    dontGoOffScreenY("top", "bottom");
                }
                if (practicalPosition == "bottom-left") {
                    myLeft = proxy.offset.left + offsetX;
                    myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12;
                    dontGoOffScreenX();
                    dontGoOffScreenY("top-left", "bottom-left");
                }
                if (practicalPosition == "bottom-right") {
                    myLeft = proxy.offset.left + proxy.dimension.width + offsetX - tooltipWidth;
                    myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12;
                    dontGoOffScreenX();
                    dontGoOffScreenY("top-right", "bottom-right");
                }
                if (practicalPosition == "left") {
                    myLeft = proxy.offset.left - offsetX - tooltipWidth - 12;
                    myLeftMirror = proxy.offset.left + offsetX + proxy.dimension.width + 12;
                    var topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);
                    myTop = proxy.offset.top - topDifference / 2 - offsetY;
                    if (myLeft < 0 && myLeftMirror + tooltipWidth > windowWidth) {
                        var borderWidth = parseFloat(self.$tooltip.css("border-width")) * 2,
                            newWidth = tooltipWidth + myLeft - borderWidth;
                        self.$tooltip.css("width", newWidth + "px");
                        tooltipHeight = self.$tooltip.outerHeight(!1);
                        myLeft = proxy.offset.left - offsetX - newWidth - 12 - borderWidth;
                        topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);
                        myTop = proxy.offset.top - topDifference / 2 - offsetY;
                    } else if (myLeft < 0) {
                        myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12;
                        arrowReposition = "left";
                    }
                }
                if (practicalPosition == "right") {
                    myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12;
                    myLeftMirror = proxy.offset.left - offsetX - tooltipWidth - 12;
                    var topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);
                    myTop = proxy.offset.top - topDifference / 2 - offsetY;
                    if (myLeft + tooltipWidth > windowWidth && myLeftMirror < 0) {
                        var borderWidth = parseFloat(self.$tooltip.css("border-width")) * 2,
                            newWidth = windowWidth - myLeft - borderWidth;
                        self.$tooltip.css("width", newWidth + "px");
                        tooltipHeight = self.$tooltip.outerHeight(!1);
                        topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height);
                        myTop = proxy.offset.top - topDifference / 2 - offsetY;
                    } else if (myLeft + tooltipWidth > windowWidth) {
                        myLeft = proxy.offset.left - offsetX - tooltipWidth - 12;
                        arrowReposition = "right";
                    }
                }
                if (self.options.arrow) {
                    var arrowClass = "tooltipster-arrow-" + practicalPosition;
                    if (self.options.arrowColor.length < 1) {
                        var arrowColor = self.$tooltip.css("background-color");
                    } else {
                        var arrowColor = self.options.arrowColor;
                    }
                    if (!arrowReposition) {
                        arrowReposition = "";
                    } else if (arrowReposition == "left") {
                        arrowClass = "tooltipster-arrow-right";
                        arrowReposition = "";
                    } else if (arrowReposition == "right") {
                        arrowClass = "tooltipster-arrow-left";
                        arrowReposition = "";
                    } else {
                        arrowReposition = "left:" + Math.round(arrowReposition) + "px;";
                    }
                    if (practicalPosition == "top" || practicalPosition == "top-left" || practicalPosition == "top-right") {
                        var tooltipBorderWidth = parseFloat(self.$tooltip.css("border-bottom-width")),
                            tooltipBorderColor = self.$tooltip.css("border-bottom-color");
                    } else if (practicalPosition == "bottom" || practicalPosition == "bottom-left" || practicalPosition == "bottom-right") {
                        var tooltipBorderWidth = parseFloat(self.$tooltip.css("border-top-width")),
                            tooltipBorderColor = self.$tooltip.css("border-top-color");
                    } else if (practicalPosition == "left") {
                        var tooltipBorderWidth = parseFloat(self.$tooltip.css("border-right-width")),
                            tooltipBorderColor = self.$tooltip.css("border-right-color");
                    } else if (practicalPosition == "right") {
                        var tooltipBorderWidth = parseFloat(self.$tooltip.css("border-left-width")),
                            tooltipBorderColor = self.$tooltip.css("border-left-color");
                    } else {
                        var tooltipBorderWidth = parseFloat(self.$tooltip.css("border-bottom-width")),
                            tooltipBorderColor = self.$tooltip.css("border-bottom-color");
                    }
                    if (tooltipBorderWidth > 1) {
                        tooltipBorderWidth++;
                    }
                    var arrowBorder = "";
                    if (tooltipBorderWidth !== 0) {
                        var arrowBorderSize = "",
                            arrowBorderColor = "border-color: " + tooltipBorderColor + ";";
                        if (arrowClass.indexOf("bottom") !== -1) {
                            arrowBorderSize = "margin-top: -" + Math.round(tooltipBorderWidth) + "px;";
                        } else if (arrowClass.indexOf("top") !== -1) {
                            arrowBorderSize = "margin-bottom: -" + Math.round(tooltipBorderWidth) + "px;";
                        } else if (arrowClass.indexOf("left") !== -1) {
                            arrowBorderSize = "margin-right: -" + Math.round(tooltipBorderWidth) + "px;";
                        } else if (arrowClass.indexOf("right") !== -1) {
                            arrowBorderSize = "margin-left: -" + Math.round(tooltipBorderWidth) + "px;";
                        }
                        arrowBorder = '<span class="tooltipster-arrow-border" style="' + arrowBorderSize + " " + arrowBorderColor + ';"></span>';
                    }
                    self.$tooltip.find(".tooltipster-arrow").remove();
                    var arrowConstruct = '<div class="' + arrowClass + ' tooltipster-arrow" style="' + arrowReposition + '">' + arrowBorder + '<span style="border-color:' + arrowColor + ';"></span></div>';
                    self.$tooltip.append(arrowConstruct);
                }
                self.$tooltip.css({ top: Math.round(myTop) + "px", left: Math.round(myLeft) + "px" });
            }
            return self;
        },
        enable: function () {
            this.enabled = !0;
            return this;
        },
        disable: function () {
            this.hide();
            this.enabled = !1;
            return this;
        },
        destroy: function () {
            var self = this;
            self.hide();
            if (self.$el[0] !== self.$elProxy[0]) {
                self.$elProxy.remove();
            }
            self.$el.removeData(self.namespace).off("." + self.namespace);
            var ns = self.$el.data("tooltipster-ns");
            if (ns.length === 1) {
                var title = null;
                if (self.options.restoration === "previous") {
                    title = self.$el.data("tooltipster-initialTitle");
                } else if (self.options.restoration === "current") {
                    title = typeof self.Content === "string" ? self.Content : $("<div></div>").append(self.Content).html();
                }
                if (title) {
                    self.$el.attr("title", title);
                }
                self.$el.removeClass("tooltipstered").removeData("tooltipster-ns").removeData("tooltipster-initialTitle");
            } else {
                ns = $.grep(ns, function (el, i) {
                    return el !== self.namespace;
                });
                self.$el.data("tooltipster-ns", ns);
            }
            return self;
        },
        elementIcon: function () {
            return this.$el[0] !== this.$elProxy[0] ? this.$elProxy[0] : undefined;
        },
        elementTooltip: function () {
            return this.$tooltip ? this.$tooltip[0] : undefined;
        },
        option: function (o, val) {
            if (typeof val == "undefined") return this.options[o];
            else {
                this.options[o] = val;
                return this;
            }
        },
        status: function () {
            return this.Status;
        },
    };
    $.fn[pluginName] = function () {
        var args = arguments;
        if (this.length === 0) {
            if (typeof args[0] === "string") {
                var methodIsStatic = !0;
                switch (args[0]) {
                    case "setDefaults":
                        $.extend(defaults, args[1]);
                        break;
                    default:
                        methodIsStatic = !1;
                        break;
                }
                if (methodIsStatic) return !0;
                else return this;
            } else {
                return this;
            }
        } else {
            if (typeof args[0] === "string") {
                var v = "#*$~&";
                this.each(function () {
                    var ns = $(this).data("tooltipster-ns"),
                        self = ns ? $(this).data(ns[0]) : null;
                    if (self) {
                        if (typeof self[args[0]] === "function") {
                            var resp = self[args[0]](args[1], args[2]);
                        } else {
                            throw new Error('Unknown method .tooltipster("' + args[0] + '")');
                        }
                        if (resp !== self) {
                            v = resp;
                            return !1;
                        }
                    } else {
                        throw new Error("You called Tooltipster's \"" + args[0] + '" method on an uninitialized element');
                    }
                });
                return v !== "#*$~&" ? v : this;
            } else {
                var instances = [],
                    multipleIsSet = args[0] && typeof args[0].multiple !== "undefined",
                    multiple = (multipleIsSet && args[0].multiple) || (!multipleIsSet && defaults.multiple),
                    debugIsSet = args[0] && typeof args[0].debug !== "undefined",
                    debug = (debugIsSet && args[0].debug) || (!debugIsSet && defaults.debug);
                this.each(function () {
                    var go = !1,
                        ns = $(this).data("tooltipster-ns"),
                        instance = null;
                    if (!ns) {
                        go = !0;
                    } else if (multiple) {
                        go = !0;
                    } else if (debug) {
                        console.log('Tooltipster: one or more tooltips are already attached to this element: ignoring. Use the "multiple" option to attach more tooltips.');
                    }
                    if (go) {
                        instance = new Plugin(this, args[0]);
                        if (!ns) ns = [];
                        ns.push(instance.namespace);
                        $(this).data("tooltipster-ns", ns);
                        $(this).data(instance.namespace, instance);
                    }
                    instances.push(instance);
                });
                if (multiple) return instances;
                else return this;
            }
        }
    };
    function areEqual(a, b) {
        var same = !0;
        $.each(a, function (i, el) {
            if (typeof b[i] === "undefined" || a[i] !== b[i]) {
                same = !1;
                return !1;
            }
        });
        return same;
    }
    var deviceHasTouchCapability = !!("ontouchstart" in window);
    var deviceHasMouse = !1;
    $("body").one("mousemove", function () {
        deviceHasMouse = !0;
    });
    function deviceIsPureTouch() {
        return !deviceHasMouse && deviceHasTouchCapability;
    }
    function supportsTransitions() {
        var b = document.body || document.documentElement,
            s = b.style,
            p = "transition";
        if (typeof s[p] == "string") {
            return !0;
        }
        (v = ["Moz", "Webkit", "Khtml", "O", "ms"]), (p = p.charAt(0).toUpperCase() + p.substr(1));
        for (var i = 0; i < v.length; i++) {
            if (typeof s[v[i] + p] == "string") {
                return !0;
            }
        }
        return !1;
    }
})(jQuery, window, document);
(function ($, window, document, undefined) {
    "use strict";
    var cssTransitionSupport = function () {
            var s = document.body || document.documentElement,
                s = s.style;
            if (s.WebkitTransition == "") return "-webkit-";
            if (s.MozTransition == "") return "-moz-";
            if (s.OTransition == "") return "-o-";
            if (s.transition == "") return "";
            return !1;
        },
        isCssTransitionSupport = cssTransitionSupport() === !1 ? !1 : !0,
        cssTransitionTranslateX = function (element, positionX, speed) {
            var options = {},
                prefix = cssTransitionSupport();
            options[prefix + "transform"] = "translateX(" + positionX + ")";
            options[prefix + "transition"] = prefix + "transform " + speed + "s linear";
            element.css(options);
        },
        hasTouch = "ontouchstart" in window,
        hasPointers = window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
        wasTouched = function (event) {
            if (hasTouch) return !0;
            if (!hasPointers || typeof event === "undefined" || typeof event.pointerType === "undefined") return !1;
            if (typeof event.MSPOINTER_TYPE_MOUSE !== "undefined") {
                if (event.MSPOINTER_TYPE_MOUSE != event.pointerType) return !0;
            } else if (event.pointerType != "mouse") return !0;
            return !1;
        };
    $.fn.imageLightbox = function (options) {
        var options = $.extend(
                {
                    selector: 'id="imagelightbox"',
                    allowedTypes: "png|jpg|jpeg|gif",
                    animationSpeed: 250,
                    preloadNext: !0,
                    enableKeyboard: !0,
                    quitOnEnd: !1,
                    quitOnImgClick: !1,
                    quitOnDocClick: !0,
                    onStart: !1,
                    onEnd: !1,
                    onLoadStart: !1,
                    onLoadEnd: !1,
                },
                options
            ),
            targets = $([]),
            target = $(),
            image = $(),
            imageWidth = 0,
            imageHeight = 0,
            swipeDiff = 0,
            inProgress = !1,
            isTargetValid = function (element) {
                return $(element).prop("tagName").toLowerCase() == "a" && new RegExp(".(" + options.allowedTypes + ")$", "i").test($(element).attr("href"));
            },
            setImage = function () {
                if (!image.length) return !0;
                var screenWidth = $(window).width() * 0.8,
                    screenHeight = $(window).height() * 0.9,
                    tmpImage = new Image();
                tmpImage.src = image.attr("src");
                tmpImage.onload = function () {
                    imageWidth = tmpImage.width;
                    imageHeight = tmpImage.height;
                    if (imageWidth > screenWidth || imageHeight > screenHeight) {
                        var ratio = imageWidth / imageHeight > screenWidth / screenHeight ? imageWidth / screenWidth : imageHeight / screenHeight;
                        imageWidth /= ratio;
                        imageHeight /= ratio;
                    }
                    image.css({ width: imageWidth + "px", height: imageHeight + "px", top: ($(window).height() - imageHeight - 46) / 2 + "px", left: ($(window).width() - imageWidth) / 2 + "px" });
                };
            },
            loadImage = function (direction) {
                if (inProgress) return !1;
                direction = typeof direction === "undefined" ? !1 : direction == "left" ? 1 : -1;
                if (image.length) {
                    if (direction !== !1 && (targets.length < 2 || (options.quitOnEnd === !0 && ((direction === -1 && targets.index(target) == 0) || (direction === 1 && targets.index(target) == targets.length - 1))))) {
                        quitLightbox();
                        return !1;
                    }
                    var params = { opacity: 0 };
                    if (isCssTransitionSupport) cssTransitionTranslateX(image, 100 * direction - swipeDiff + "px", options.animationSpeed / 1000);
                    else params.left = parseInt(image.css("left")) + 100 * direction + "px";
                    image.animate(params, options.animationSpeed, function () {
                        removeImage();
                    });
                    swipeDiff = 0;
                }
                inProgress = !0;
                if (options.onLoadStart !== !1) options.onLoadStart();
                setTimeout(function () {
                    image = $("<img " + options.selector + " />")
                        .attr("src", target.attr("href"))
                        .load(function () {
                            image.appendTo("body");
                            setImage();
                            var params = { opacity: 1 };
                            image.css("opacity", 0);
                            if (isCssTransitionSupport) {
                                cssTransitionTranslateX(image, -100 * direction + "px", 0);
                                setTimeout(function () {
                                    cssTransitionTranslateX(image, 0 + "px", options.animationSpeed / 1000);
                                }, 50);
                            } else {
                                var imagePosLeft = parseInt(image.css("left"));
                                params.left = imagePosLeft + "px";
                                image.css("left", imagePosLeft - 100 * direction + "px");
                            }
                            image.animate(params, options.animationSpeed, function () {
                                inProgress = !1;
                                if (options.onLoadEnd !== !1) options.onLoadEnd();
                            });
                            if (options.preloadNext) {
                                var nextTarget = targets.eq(targets.index(target) + 1);
                                if (!nextTarget.length) nextTarget = targets.eq(0);
                                $("<img />").attr("src", nextTarget.attr("href")).load();
                            }
                        })
                        .error(function () {
                            if (options.onLoadEnd !== !1) options.onLoadEnd();
                        });
                    var swipeStart = 0,
                        swipeEnd = 0,
                        imagePosLeft = 0;
                    image
                        .on(hasPointers ? "pointerup MSPointerUp" : "click", function (e) {
                            e.preventDefault();
                            if (options.quitOnImgClick) {
                                quitLightbox();
                                return !1;
                            }
                            if (wasTouched(e.originalEvent)) return !0;
                            var posX = (e.pageX || e.originalEvent.pageX) - e.target.offsetLeft;
                            target = targets.eq(targets.index(target) - (imageWidth / 2 > posX ? 1 : -1));
                            if (!target.length) target = targets.eq(imageWidth / 2 > posX ? targets.length : 0);
                            loadImage(imageWidth / 2 > posX ? "left" : "right");
                        })
                        .on("touchstart pointerdown MSPointerDown", function (e) {
                            if (!wasTouched(e.originalEvent) || options.quitOnImgClick) return !0;
                            if (isCssTransitionSupport) imagePosLeft = parseInt(image.css("left"));
                            swipeStart = e.originalEvent.pageX || e.originalEvent.touches[0].pageX;
                        })
                        .on("touchmove pointermove MSPointerMove", function (e) {
                            if (!wasTouched(e.originalEvent) || options.quitOnImgClick) return !0;
                            e.preventDefault();
                            swipeEnd = e.originalEvent.pageX || e.originalEvent.touches[0].pageX;
                            swipeDiff = swipeStart - swipeEnd;
                            if (isCssTransitionSupport) cssTransitionTranslateX(image, -swipeDiff + "px", 0);
                            else image.css("left", imagePosLeft - swipeDiff + "px");
                        })
                        .on("touchend touchcancel pointerup pointercancel MSPointerUp MSPointerCancel", function (e) {
                            if (!wasTouched(e.originalEvent) || options.quitOnImgClick) return !0;
                            if (Math.abs(swipeDiff) > 50) {
                                target = targets.eq(targets.index(target) - (swipeDiff < 0 ? 1 : -1));
                                if (!target.length) target = targets.eq(swipeDiff < 0 ? targets.length : 0);
                                loadImage(swipeDiff > 0 ? "right" : "left");
                            } else {
                                if (isCssTransitionSupport) cssTransitionTranslateX(image, 0 + "px", options.animationSpeed / 1000);
                                else image.animate({ left: imagePosLeft + "px" }, options.animationSpeed / 2);
                            }
                        });
                }, options.animationSpeed + 100);
            },
            removeImage = function () {
                if (!image.length) return !1;
                image.remove();
                image = $();
            },
            quitLightbox = function () {
                if (!image.length) return !1;
                image.animate({ opacity: 0 }, options.animationSpeed, function () {
                    removeImage();
                    inProgress = !1;
                    if (options.onEnd !== !1) options.onEnd();
                });
            };
        $(window).on("resize", setImage);
        if (options.quitOnDocClick) {
            $(document).on(hasTouch ? "touchend" : "click", function (e) {
                if (image.length && !$(e.target).is(image)) quitLightbox();
            });
        }
        if (options.enableKeyboard) {
            $(document).on("keyup", function (e) {
                if (!image.length) return !0;
                e.preventDefault();
                if (e.keyCode == 27) quitLightbox();
                if (e.keyCode == 37 || e.keyCode == 39) {
                    target = targets.eq(targets.index(target) - (e.keyCode == 37 ? 1 : -1));
                    if (!target.length) target = targets.eq(e.keyCode == 37 ? targets.length : 0);
                    loadImage(e.keyCode == 37 ? "left" : "right");
                }
            });
        }
        $(document).on("click", this.selector, function (e) {
            if (!isTargetValid(this)) return !0;
            e.preventDefault();
            if (inProgress) return !1;
            inProgress = !1;
            if (options.onStart !== !1) options.onStart();
            target = $(this);
            loadImage();
        });
        this.each(function () {
            if (!isTargetValid(this)) return !0;
            targets = targets.add($(this));
        });
        this.switchImageLightbox = function (index) {
            var tmpTarget = targets.eq(index);
            if (tmpTarget.length) {
                var currentIndex = targets.index(target);
                target = tmpTarget;
                loadImage(index < currentIndex ? "left" : "right");
            }
            return this;
        };
        this.quitImageLightbox = function () {
            quitLightbox();
            return this;
        };
        return this;
    };
})(jQuery, window, document);
(function ($) {
    var uuid = 0;
    $.fn.upload = function (url, data, callback, type) {
        var self = this,
            inputs,
            checkbox,
            checked,
            iframeName = "jquery_upload" + ++uuid,
            iframe = $('<iframe name="' + iframeName + '" style="position:absolute;top:-9999px" />').appendTo("body"),
            form = '<form target="' + iframeName + '" method="post" enctype="multipart/form-data" />';
        if ($.isFunction(data)) {
            type = callback;
            callback = data;
            data = {};
        }
        checkbox = $("input:checkbox", this);
        checked = $("input:checked", this);
        form = self.wrapAll(form).parent("form").attr("action", url);
        checkbox.removeAttr("checked");
        checked.attr("checked", !0);
        inputs = createInputs(data);
        inputs = inputs ? $(inputs).appendTo(form) : null;
        form.submit(function () {
            iframe.load(function () {
                var data = handleData(this, type),
                    checked = $("input:checked", self);
                form.after(self).remove();
                checkbox.removeAttr("checked");
                checked.attr("checked", !0);
                if (inputs) {
                    inputs.remove();
                }
                setTimeout(function () {
                    iframe.remove();
                    if (type === "script") {
                        $.globalEval(data);
                    }
                    if (callback) {
                        callback.call(self, data);
                    }
                }, 0);
            });
        }).submit();
        return this;
    };
    function createInputs(data) {
        return $.map(param(data), function (param) {
            var e = $(document.createElement("input"));
            e.attr("type", "hidden");
            e.attr("name", param.name);
            e.attr("value", param.value);
            return e;
        });
    }
    function param(data) {
        if ($.isArray(data)) {
            return data;
        }
        var params = [];
        function add(name, value) {
            params.push({ name: name, value: value });
        }
        if (typeof data === "object") {
            $.each(data, function (name) {
                if ($.isArray(this)) {
                    $.each(this, function () {
                        add(name, this);
                    });
                } else {
                    add(name, $.isFunction(this) ? this() : this);
                }
            });
        } else if (typeof data === "string") {
            $.each(data.split("&"), function () {
                var param = $.map(this.split("="), function (v) {
                    return decodeURIComponent(v.replace(/\+/g, " "));
                });
                add(param[0], param[1]);
            });
        }
        return params;
    }
    function handleData(iframe, type) {
        var data,
            contents = $(iframe).contents().get(0);
        if ($.isXMLDoc(contents) || contents.XMLDocument) {
            return contents.XMLDocument || contents;
        }
        data = $(contents).find("body").text();
        switch (type) {
            case "xml":
                data = parseXml(data);
                break;
            case "json":
                data = $.parseJSON(data);
                break;
        }
        return data;
    }
    function parseXml(text) {
        if (window.DOMParser) {
            return new DOMParser().parseFromString(text, "application/xml");
        } else {
            var xml = new ActiveXObject("Microsoft.XMLDOM");
            xml.async = !1;
            xml.loadXML(text);
            return xml;
        }
    }
})(jQuery);
(function ($) {
    $.Jcrop = function (obj, opt) {
        var obj = obj,
            opt = opt;
        if (typeof obj !== "object") obj = $(obj)[0];
        if (typeof opt !== "object") opt = {};
        if (!("trackDocument" in opt)) {
            opt.trackDocument = sof.browser.msie ? !1 : !0;
            if (sof.browser.msie && sof.browser.version.split(".")[0] == "8") opt.trackDocument = !0;
        }
        if (!("keySupport" in opt)) opt.keySupport = sof.browser.msie ? !1 : !0;
        var defaults = {
            trackDocument: !1,
            baseClass: "jcrop",
            addClass: null,
            bgColor: "black",
            bgOpacity: 0.6,
            borderOpacity: 0.4,
            handleOpacity: 0.5,
            handlePad: 5,
            handleSize: 9,
            handleOffset: 5,
            edgeMargin: 14,
            aspectRatio: 0,
            keySupport: !0,
            cornerHandles: !0,
            sideHandles: !0,
            drawBorders: !0,
            dragEdges: !0,
            boxWidth: 0,
            boxHeight: 0,
            boundary: 8,
            animationDelay: 20,
            swingSpeed: 3,
            allowSelect: !0,
            allowMove: !0,
            allowResize: !0,
            minSelect: [0, 0],
            maxSize: [0, 0],
            minSize: [0, 0],
            onChange: function () {},
            onSelect: function () {},
            onLoad: function () {},
        };
        var options = defaults;
        setOptions(opt);
        var $origimg = $(obj);
        var $img = $origimg.clone().removeAttr("id").css({ position: "absolute" });
        $img.width($origimg.width());
        $img.height($origimg.height());
        $origimg.after($img).hide();
        presize($img, options.boxWidth, options.boxHeight);
        var boundx = $img.width(),
            boundy = $img.height(),
            $div = $("<div />").width(boundx).height(boundy).addClass(cssClass("holder")).css({ position: "relative", backgroundColor: options.bgColor }).insertAfter($origimg).append($img);
        if (options.addClass) $div.addClass(options.addClass);
        var $img2 = $("<img />").attr("src", $img.attr("src")).css("position", "absolute").width(boundx).height(boundy);
        var $img_holder = $("<div />").width(pct(100)).height(pct(100)).css({ zIndex: 310, position: "absolute", overflow: "hidden" }).append($img2);
        var $hdl_holder = $("<div />").width(pct(100)).height(pct(100)).css("zIndex", 320);
        var $sel = $("<div />").css({ position: "absolute", zIndex: 300 }).insertBefore($img).append($img_holder, $hdl_holder);
        var bound = options.boundary;
        var $trk = newTracker()
            .width(boundx + bound * 2)
            .height(boundy + bound * 2)
            .css({ position: "absolute", top: px(-bound), left: px(-bound), zIndex: 290 })
            .mousedown(newSelection);
        var xlimit, ylimit, xmin, ymin;
        var xscale,
            yscale,
            enabled = !0;
        var docOffset = getPos($img),
            btndown,
            lastcurs,
            dimmed,
            animating,
            shift_down;
        var Coords = (function () {
            var x1 = 0,
                y1 = 0,
                x2 = 0,
                y2 = 0,
                ox,
                oy;
            function setPressed(pos) {
                var pos = rebound(pos);
                x2 = x1 = pos[0];
                y2 = y1 = pos[1];
            }
            function setCurrent(pos) {
                var pos = rebound(pos);
                ox = pos[0] - x2;
                oy = pos[1] - y2;
                x2 = pos[0];
                y2 = pos[1];
            }
            function getOffset() {
                return [ox, oy];
            }
            function moveOffset(offset) {
                var ox = offset[0],
                    oy = offset[1];
                if (0 > x1 + ox) ox -= ox + x1;
                if (0 > y1 + oy) oy -= oy + y1;
                if (boundy < y2 + oy) oy += boundy - (y2 + oy);
                if (boundx < x2 + ox) ox += boundx - (x2 + ox);
                x1 += ox;
                x2 += ox;
                y1 += oy;
                y2 += oy;
            }
            function getCorner(ord) {
                var c = getFixed();
                switch (ord) {
                    case "ne":
                        return [c.x2, c.y];
                    case "nw":
                        return [c.x, c.y];
                    case "se":
                        return [c.x2, c.y2];
                    case "sw":
                        return [c.x, c.y2];
                }
            }
            function getFixed() {
                if (!options.aspectRatio) return getRect();
                var aspect = options.aspectRatio,
                    min_x = options.minSize[0] / xscale,
                    min_y = options.minSize[1] / yscale,
                    max_x = options.maxSize[0] / xscale,
                    max_y = options.maxSize[1] / yscale,
                    rw = x2 - x1,
                    rh = y2 - y1,
                    rwa = Math.abs(rw),
                    rha = Math.abs(rh),
                    real_ratio = rwa / rha,
                    xx,
                    yy;
                if (max_x == 0) {
                    max_x = boundx * 10;
                }
                if (max_y == 0) {
                    max_y = boundy * 10;
                }
                if (real_ratio < aspect) {
                    yy = y2;
                    w = rha * aspect;
                    xx = rw < 0 ? x1 - w : w + x1;
                    if (xx < 0) {
                        xx = 0;
                        h = Math.abs((xx - x1) / aspect);
                        yy = rh < 0 ? y1 - h : h + y1;
                    } else if (xx > boundx) {
                        xx = boundx;
                        h = Math.abs((xx - x1) / aspect);
                        yy = rh < 0 ? y1 - h : h + y1;
                    }
                } else {
                    xx = x2;
                    h = rwa / aspect;
                    yy = rh < 0 ? y1 - h : y1 + h;
                    if (yy < 0) {
                        yy = 0;
                        w = Math.abs((yy - y1) * aspect);
                        xx = rw < 0 ? x1 - w : w + x1;
                    } else if (yy > boundy) {
                        yy = boundy;
                        w = Math.abs(yy - y1) * aspect;
                        xx = rw < 0 ? x1 - w : w + x1;
                    }
                }
                if (xx > x1) {
                    if (xx - x1 < min_x) {
                        xx = x1 + min_x;
                    } else if (xx - x1 > max_x) {
                        xx = x1 + max_x;
                    }
                    if (yy > y1) {
                        yy = y1 + (xx - x1) / aspect;
                    } else {
                        yy = y1 - (xx - x1) / aspect;
                    }
                } else if (xx < x1) {
                    if (x1 - xx < min_x) {
                        xx = x1 - min_x;
                    } else if (x1 - xx > max_x) {
                        xx = x1 - max_x;
                    }
                    if (yy > y1) {
                        yy = y1 + (x1 - xx) / aspect;
                    } else {
                        yy = y1 - (x1 - xx) / aspect;
                    }
                }
                if (xx < 0) {
                    x1 -= xx;
                    xx = 0;
                } else if (xx > boundx) {
                    x1 -= xx - boundx;
                    xx = boundx;
                }
                if (yy < 0) {
                    y1 -= yy;
                    yy = 0;
                } else if (yy > boundy) {
                    y1 -= yy - boundy;
                    yy = boundy;
                }
                return (last = makeObj(flipCoords(x1, y1, xx, yy)));
            }
            function rebound(p) {
                if (p[0] < 0) p[0] = 0;
                if (p[1] < 0) p[1] = 0;
                if (p[0] > boundx) p[0] = boundx;
                if (p[1] > boundy) p[1] = boundy;
                return [p[0], p[1]];
            }
            function flipCoords(x1, y1, x2, y2) {
                var xa = x1,
                    xb = x2,
                    ya = y1,
                    yb = y2;
                if (x2 < x1) {
                    xa = x2;
                    xb = x1;
                }
                if (y2 < y1) {
                    ya = y2;
                    yb = y1;
                }
                return [Math.round(xa), Math.round(ya), Math.round(xb), Math.round(yb)];
            }
            function getRect() {
                var xsize = x2 - x1;
                var ysize = y2 - y1;
                if (xlimit && Math.abs(xsize) > xlimit) x2 = xsize > 0 ? x1 + xlimit : x1 - xlimit;
                if (ylimit && Math.abs(ysize) > ylimit) y2 = ysize > 0 ? y1 + ylimit : y1 - ylimit;
                if (ymin && Math.abs(ysize) < ymin) y2 = ysize > 0 ? y1 + ymin : y1 - ymin;
                if (xmin && Math.abs(xsize) < xmin) x2 = xsize > 0 ? x1 + xmin : x1 - xmin;
                if (x1 < 0) {
                    x2 -= x1;
                    x1 -= x1;
                }
                if (y1 < 0) {
                    y2 -= y1;
                    y1 -= y1;
                }
                if (x2 < 0) {
                    x1 -= x2;
                    x2 -= x2;
                }
                if (y2 < 0) {
                    y1 -= y2;
                    y2 -= y2;
                }
                if (x2 > boundx) {
                    var delta = x2 - boundx;
                    x1 -= delta;
                    x2 -= delta;
                }
                if (y2 > boundy) {
                    var delta = y2 - boundy;
                    y1 -= delta;
                    y2 -= delta;
                }
                if (x1 > boundx) {
                    var delta = x1 - boundy;
                    y2 -= delta;
                    y1 -= delta;
                }
                if (y1 > boundy) {
                    var delta = y1 - boundy;
                    y2 -= delta;
                    y1 -= delta;
                }
                return makeObj(flipCoords(x1, y1, x2, y2));
            }
            function makeObj(a) {
                return { x: a[0], y: a[1], x2: a[2], y2: a[3], w: a[2] - a[0], h: a[3] - a[1] };
            }
            return { flipCoords: flipCoords, setPressed: setPressed, setCurrent: setCurrent, getOffset: getOffset, moveOffset: moveOffset, getCorner: getCorner, getFixed: getFixed };
        })();
        var Selection = (function () {
            var start,
                end,
                dragmode,
                awake,
                hdep = 370;
            var borders = {};
            var handle = {};
            var seehandles = !1;
            var hhs = options.handleOffset;
            if (options.drawBorders) {
                borders = { top: insertBorder("hline").css("top", sof.browser.msie ? px(-1) : px(0)), bottom: insertBorder("hline"), left: insertBorder("vline"), right: insertBorder("vline") };
            }
            if (options.dragEdges) {
                handle.t = insertDragbar("n");
                handle.b = insertDragbar("s");
                handle.r = insertDragbar("e");
                handle.l = insertDragbar("w");
            }
            options.sideHandles && createHandles(["n", "s", "e", "w"]);
            options.cornerHandles && createHandles(["sw", "nw", "ne", "se"]);
            function insertBorder(type) {
                var jq = $("<div />").css({ position: "absolute", opacity: options.borderOpacity }).addClass(cssClass(type));
                $img_holder.append(jq);
                return jq;
            }
            function dragDiv(ord, zi) {
                var jq = $("<div />")
                    .mousedown(createDragger(ord))
                    .css({ cursor: ord + "-resize", position: "absolute", zIndex: zi });
                $hdl_holder.append(jq);
                return jq;
            }
            function insertHandle(ord) {
                return dragDiv(ord, hdep++)
                    .css({ top: px(-hhs + 1), left: px(-hhs + 1), opacity: options.handleOpacity })
                    .addClass(cssClass("handle"));
            }
            function insertDragbar(ord) {
                var s = options.handleSize,
                    o = hhs,
                    h = s,
                    w = s,
                    t = o,
                    l = o;
                switch (ord) {
                    case "n":
                    case "s":
                        w = pct(100);
                        break;
                    case "e":
                    case "w":
                        h = pct(100);
                        break;
                }
                return dragDiv(ord, hdep++)
                    .width(w)
                    .height(h)
                    .css({ top: px(-t + 1), left: px(-l + 1) });
            }
            function createHandles(li) {
                for (i in li) handle[li[i]] = insertHandle(li[i]);
            }
            function moveHandles(c) {
                var midvert = Math.round(c.h / 2 - hhs),
                    midhoriz = Math.round(c.w / 2 - hhs),
                    north = (west = -hhs + 1),
                    east = c.w - hhs,
                    south = c.h - hhs,
                    x,
                    y;
                "e" in handle && handle.e.css({ top: px(midvert), left: px(east) }) && handle.w.css({ top: px(midvert) }) && handle.s.css({ top: px(south), left: px(midhoriz) }) && handle.n.css({ left: px(midhoriz) });
                "ne" in handle && handle.ne.css({ left: px(east) }) && handle.se.css({ top: px(south), left: px(east) }) && handle.sw.css({ top: px(south) });
                "b" in handle && handle.b.css({ top: px(south) }) && handle.r.css({ left: px(east) });
            }
            function moveto(x, y) {
                $img2.css({ top: px(-y), left: px(-x) });
                $sel.css({ top: px(y), left: px(x) });
            }
            function resize(w, h) {
                $sel.width(w).height(h);
            }
            function refresh() {
                var c = Coords.getFixed();
                Coords.setPressed([c.x, c.y]);
                Coords.setCurrent([c.x2, c.y2]);
                updateVisible();
            }
            function updateVisible() {
                if (awake) return update();
            }
            function update() {
                var c = Coords.getFixed();
                resize(c.w, c.h);
                moveto(c.x, c.y);
                options.drawBorders && borders.right.css({ left: px(c.w - 1) }) && borders.bottom.css({ top: px(c.h - 1) });
                seehandles && moveHandles(c);
                awake || show();
                options.onChange(unscale(c));
            }
            function show() {
                $sel.show();
                $img.css("opacity", options.bgOpacity);
                awake = !0;
            }
            function release() {
                disableHandles();
                $sel.hide();
                $img.css("opacity", 1);
                awake = !1;
            }
            function showHandles() {
                if (seehandles) {
                    moveHandles(Coords.getFixed());
                    $hdl_holder.show();
                }
            }
            function enableHandles() {
                seehandles = !0;
                if (options.allowResize) {
                    moveHandles(Coords.getFixed());
                    $hdl_holder.show();
                    return !0;
                }
            }
            function disableHandles() {
                seehandles = !1;
                $hdl_holder.hide();
            }
            function animMode(v) {
                (animating = v) ? disableHandles() : enableHandles();
            }
            function done() {
                animMode(!1);
                refresh();
                options.onLoad(unscale(Coords.getFixed()));
            }
            var $track = newTracker().mousedown(createDragger("move")).css({ cursor: "move", position: "absolute", zIndex: 360 });
            $img_holder.append($track);
            disableHandles();
            return {
                updateVisible: updateVisible,
                update: update,
                release: release,
                refresh: refresh,
                setCursor: function (cursor) {
                    $track.css("cursor", cursor);
                },
                enableHandles: enableHandles,
                enableOnly: function () {
                    seehandles = !0;
                },
                showHandles: showHandles,
                disableHandles: disableHandles,
                animMode: animMode,
                done: done,
            };
        })();
        var Tracker = (function () {
            var onMove = function () {},
                onDone = function () {},
                trackDoc = options.trackDocument;
            if (!trackDoc) {
                $trk.mousemove(trackMove).mouseup(trackUp).mouseout(trackUp);
            }
            function toFront() {
                $trk.css({ zIndex: 450 });
                if (trackDoc) {
                    $(document).mousemove(trackMove).mouseup(trackUp);
                }
            }
            function toBack() {
                $trk.css({ zIndex: 290 });
                if (trackDoc) {
                    $(document).unbind("mousemove", trackMove).unbind("mouseup", trackUp);
                }
            }
            function trackMove(e) {
                onMove(mouseAbs(e));
            }
            function trackUp(e) {
                e.preventDefault();
                e.stopPropagation();
                if (btndown) {
                    btndown = !1;
                    onDone(mouseAbs(e));
                    options.onSelect(unscale(Coords.getFixed()));
                    toBack();
                    onMove = function () {};
                    onDone = function () {};
                }
                return !1;
            }
            function activateHandlers(move, done) {
                btndown = !0;
                onMove = move;
                onDone = done;
                toFront();
                return !1;
            }
            function setCursor(t) {
                $trk.css("cursor", t);
            }
            $img.before($trk);
            return { activateHandlers: activateHandlers, setCursor: setCursor };
        })();
        var KeyManager = (function () {
            var $keymgr = $('<input type="radio" />').css({ position: "absolute", left: "-30px" }).keypress(parseKey).blur(onBlur),
                $keywrap = $("<div />").css({ position: "absolute", overflow: "hidden" }).append($keymgr);
            function watchKeys() {
                if (options.keySupport) {
                    $keymgr.show();
                    $keymgr.focus();
                }
            }
            function onBlur(e) {
                $keymgr.hide();
            }
            function doNudge(e, x, y) {
                if (options.allowMove) {
                    Coords.moveOffset([x, y]);
                    Selection.updateVisible();
                }
                e.preventDefault();
                e.stopPropagation();
            }
            function parseKey(e) {
                if (e.ctrlKey) return !0;
                shift_down = e.shiftKey ? !0 : !1;
                var nudge = shift_down ? 10 : 1;
                switch (e.keyCode) {
                    case 37:
                        doNudge(e, -nudge, 0);
                        break;
                    case 39:
                        doNudge(e, nudge, 0);
                        break;
                    case 38:
                        doNudge(e, 0, -nudge);
                        break;
                    case 40:
                        doNudge(e, 0, nudge);
                        break;
                    case 27:
                        Selection.release();
                        break;
                    case 9:
                        return !0;
                }
                return nothing(e);
            }
            if (options.keySupport) $keywrap.insertBefore($img);
            return { watchKeys: watchKeys };
        })();
        function px(n) {
            return "" + parseInt(n) + "px";
        }
        function pct(n) {
            return "" + parseInt(n) + "%";
        }
        function cssClass(cl) {
            return options.baseClass + "-" + cl;
        }
        function getPos(obj) {
            var pos = $(obj).offset();
            return [pos.left, pos.top];
        }
        function mouseAbs(e) {
            return [e.pageX - docOffset[0], e.pageY - docOffset[1]];
        }
        function myCursor(type) {
            if (type != lastcurs) {
                Tracker.setCursor(type);
                lastcurs = type;
            }
        }
        function startDragMode(mode, pos) {
            docOffset = getPos($img);
            Tracker.setCursor(mode == "move" ? mode : mode + "-resize");
            if (mode == "move") return Tracker.activateHandlers(createMover(pos), doneSelect);
            var fc = Coords.getFixed();
            var opp = oppLockCorner(mode);
            var opc = Coords.getCorner(oppLockCorner(opp));
            Coords.setPressed(Coords.getCorner(opp));
            Coords.setCurrent(opc);
            Tracker.activateHandlers(dragmodeHandler(mode, fc), doneSelect);
        }
        function dragmodeHandler(mode, f) {
            return function (pos) {
                if (!options.aspectRatio)
                    switch (mode) {
                        case "e":
                            pos[1] = f.y2;
                            break;
                        case "w":
                            pos[1] = f.y2;
                            break;
                        case "n":
                            pos[0] = f.x2;
                            break;
                        case "s":
                            pos[0] = f.x2;
                            break;
                    }
                else
                    switch (mode) {
                        case "e":
                            pos[1] = f.y + 1;
                            break;
                        case "w":
                            pos[1] = f.y + 1;
                            break;
                        case "n":
                            pos[0] = f.x + 1;
                            break;
                        case "s":
                            pos[0] = f.x + 1;
                            break;
                    }
                Coords.setCurrent(pos);
                Selection.update();
            };
        }
        function createMover(pos) {
            var lloc = pos;
            KeyManager.watchKeys();
            return function (pos) {
                Coords.moveOffset([pos[0] - lloc[0], pos[1] - lloc[1]]);
                lloc = pos;
                Selection.update();
            };
        }
        function oppLockCorner(ord) {
            switch (ord) {
                case "n":
                    return "sw";
                case "s":
                    return "nw";
                case "e":
                    return "nw";
                case "w":
                    return "ne";
                case "ne":
                    return "sw";
                case "nw":
                    return "se";
                case "se":
                    return "nw";
                case "sw":
                    return "ne";
            }
        }
        function createDragger(ord) {
            return function (e) {
                if (options.disabled) return !1;
                if (ord == "move" && !options.allowMove) return !1;
                btndown = !0;
                startDragMode(ord, mouseAbs(e));
                e.stopPropagation();
                e.preventDefault();
                return !1;
            };
        }
        function presize($obj, w, h) {
            var nw = $obj.width(),
                nh = $obj.height();
            if (nw > w && w > 0) {
                nw = w;
                nh = (w / $obj.width()) * $obj.height();
            }
            if (nh > h && h > 0) {
                nh = h;
                nw = (h / $obj.height()) * $obj.width();
            }
            xscale = $obj.width() / nw;
            yscale = $obj.height() / nh;
            $obj.width(nw).height(nh);
        }
        function unscale(c) {
            return { x: parseInt(c.x * xscale), y: parseInt(c.y * yscale), x2: parseInt(c.x2 * xscale), y2: parseInt(c.y2 * yscale), w: parseInt(c.w * xscale), h: parseInt(c.h * yscale) };
        }
        function doneSelect(pos) {
            var c = Coords.getFixed();
            if (c.w > options.minSelect[0] && c.h > options.minSelect[1]) {
                Selection.enableHandles();
                Selection.done();
            } else {
                Selection.release();
            }
            Tracker.setCursor(options.allowSelect ? "crosshair" : "default");
        }
        function newSelection(e) {
            if (options.disabled) return !1;
            if (!options.allowSelect) return !1;
            btndown = !0;
            docOffset = getPos($img);
            Selection.disableHandles();
            myCursor("crosshair");
            var pos = mouseAbs(e);
            Coords.setPressed(pos);
            Tracker.activateHandlers(selectDrag, doneSelect);
            KeyManager.watchKeys();
            Selection.update();
            e.stopPropagation();
            e.preventDefault();
            return !1;
        }
        function selectDrag(pos) {
            Coords.setCurrent(pos);
            Selection.update();
        }
        function newTracker() {
            var trk = $("<div></div>").addClass(cssClass("tracker"));
            sof.browser.msie && trk.css({ opacity: 0, backgroundColor: "white" });
            return trk;
        }
        function animateTo(a) {
            var x1 = a[0] / xscale,
                y1 = a[1] / yscale,
                x2 = a[2] / xscale,
                y2 = a[3] / yscale;
            if (animating) return;
            var animto = Coords.flipCoords(x1, y1, x2, y2);
            var c = Coords.getFixed();
            var animat = (initcr = [c.x, c.y, c.x2, c.y2]);
            var interv = options.animationDelay;
            var x = animat[0];
            var y = animat[1];
            var x2 = animat[2];
            var y2 = animat[3];
            var ix1 = animto[0] - initcr[0];
            var iy1 = animto[1] - initcr[1];
            var ix2 = animto[2] - initcr[2];
            var iy2 = animto[3] - initcr[3];
            var pcent = 0;
            var velocity = options.swingSpeed;
            Selection.animMode(!0);
            var animator = (function () {
                return function () {
                    pcent += (100 - pcent) / velocity;
                    animat[0] = x + (pcent / 100) * ix1;
                    animat[1] = y + (pcent / 100) * iy1;
                    animat[2] = x2 + (pcent / 100) * ix2;
                    animat[3] = y2 + (pcent / 100) * iy2;
                    if (pcent < 100) animateStart();
                    else Selection.done();
                    if (pcent >= 99.8) pcent = 100;
                    setSelectRaw(animat);
                };
            })();
            function animateStart() {
                window.setTimeout(animator, interv);
            }
            animateStart();
        }
        function setSelect(rect) {
            setSelectRaw([rect[0] / xscale, rect[1] / yscale, rect[2] / xscale, rect[3] / yscale]);
        }
        function setSelectRaw(l) {
            Coords.setPressed([l[0], l[1]]);
            Coords.setCurrent([l[2], l[3]]);
            Selection.update();
        }
        function setOptions(opt) {
            if (typeof opt != "object") opt = {};
            options = $.extend(options, opt);
            if (typeof options.onChange !== "function") options.onChange = function () {};
            if (typeof options.onSelect !== "function") options.onSelect = function () {};
            if (typeof options.onLoad !== "function") options.onLoad = function () {};
        }
        function tellSelect() {
            return unscale(Coords.getFixed());
        }
        function tellScaled() {
            return Coords.getFixed();
        }
        function setOptionsNew(opt) {
            setOptions(opt);
            interfaceUpdate();
        }
        function disableCrop() {
            options.disabled = !0;
            Selection.disableHandles();
            Selection.setCursor("default");
            Tracker.setCursor("default");
        }
        function enableCrop() {
            options.disabled = !1;
            interfaceUpdate();
        }
        function cancelCrop() {
            Selection.done();
            Tracker.activateHandlers(null, null);
        }
        function destroy() {
            $div.remove();
            $origimg.show();
        }
        function interfaceUpdate(alt) {
            options.allowResize ? (alt ? Selection.enableOnly() : Selection.enableHandles()) : Selection.disableHandles();
            Tracker.setCursor(options.allowSelect ? "crosshair" : "default");
            Selection.setCursor(options.allowMove ? "move" : "default");
            $div.css("backgroundColor", options.bgColor);
            if ("setSelect" in options) {
                setSelect(opt.setSelect);
                Selection.done();
                delete options.setSelect;
            }
            if ("trueSize" in options) {
                xscale = options.trueSize[0] / boundx;
                yscale = options.trueSize[1] / boundy;
            }
            xlimit = options.maxSize[0] || 0;
            ylimit = options.maxSize[1] || 0;
            xmin = options.minSize[0] || 0;
            ymin = options.minSize[1] || 0;
            if ("outerImage" in options) {
                $img.attr("src", options.outerImage);
                delete options.outerImage;
            }
            Selection.refresh();
        }
        $hdl_holder.hide();
        interfaceUpdate(!0);
        var api = {
            animateTo: animateTo,
            setSelect: setSelect,
            setOptions: setOptionsNew,
            tellSelect: tellSelect,
            tellScaled: tellScaled,
            disable: disableCrop,
            enable: enableCrop,
            cancel: cancelCrop,
            focus: KeyManager.watchKeys,
            getBounds: function () {
                return [boundx * xscale, boundy * yscale];
            },
            getWidgetSize: function () {
                return [boundx, boundy];
            },
            release: Selection.release,
            destroy: destroy,
        };
        $origimg.data("Jcrop", api);
        return api;
    };
    $.fn.Jcrop = function (options) {
        function attachWhenDone(from) {
            var loadsrc = options.useImg || from.src;
            var img = new Image();
            img.onload = function () {
                $.Jcrop(from, options);
            };
            img.src = loadsrc;
        }
        if (typeof options !== "object") options = {};
        this.each(function () {
            if ($(this).data("Jcrop")) {
                if (options == "api") return $(this).data("Jcrop");
                else $(this).data("Jcrop").setOptions(options);
            } else attachWhenDone(this);
        });
        return this;
    };
})(jQuery);
(function ($) {
    "use strict";
    function MultipleSelect($el, options) {
        var that = this,
            name = $el.attr("name") || options.name || "";
        var originalParentStyle = $el.parent().attr("style") || "";
        $el.parent().hide();
        var elWidth = $el.css("width");
        $el.parent().show().attr("style", originalParentStyle);
        if (elWidth == "0px") {
            elWidth = $el.outerWidth() + 20;
        }
        this.$el = $el.hide();
        this.options = options;
        this.$parent = $(
            "<div" +
                $.map(["class", "title"], function (att) {
                    var attValue = that.$el.attr(att) || "";
                    attValue = (att === "class" ? "ms-parent" + (attValue ? " " : "") : "") + attValue;
                    return attValue ? " " + att + '="' + attValue + '"' : "";
                }).join("") +
                " />"
        );
        this.$choice = $('<button type="button" class="ms-choice"><span class="placeholder">' + options.placeholder + "</span><div></div></button>");
        this.$drop = $('<div class="ms-drop ' + options.position + '"></div>');
        this.$el.after(this.$parent);
        this.$parent.append(this.$choice);
        this.$parent.append(this.$drop);
        if (this.$el.prop("disabled")) {
            this.$choice.addClass("disabled");
        }
        this.$parent.css("width", options.width || elWidth);
        if (!this.options.keepOpen) {
            $("body").click(function (e) {
                if ($(e.target)[0] === that.$choice[0] || $(e.target).parents(".ms-choice")[0] === that.$choice[0]) {
                    return;
                }
                if (($(e.target)[0] === that.$drop[0] || $(e.target).parents(".ms-drop")[0] !== that.$drop[0]) && that.options.isOpen) {
                    that.close();
                }
            });
        }
        this.selectAllName = 'name="selectAll' + name + '"';
        this.selectGroupName = 'name="selectGroup' + name + '"';
        this.selectItemName = 'name="selectItem' + name + '"';
    }
    MultipleSelect.prototype = {
        constructor: MultipleSelect,
        init: function () {
            var that = this;
            this.$drop.empty();
            if (this.options.filter) {
                this.$drop.append('<div class="ms-search"><input type="text" autocomplete="off" autocorrect="off" autocapitilize="off" spellcheck="false" /></div>');
            }
            var ul = $("<ul></ul>");
            if (this.options.selectAll && !this.options.single) {
                ul.append(
                    '<li class="ms-select-all">' +
                        "<label>" +
                        '<input type="checkbox" ' +
                        this.selectAllName +
                        " /> " +
                        this.options.selectAllDelimiter[0] +
                        this.options.selectAllText +
                        this.options.selectAllDelimiter[1] +
                        "</label>" +
                        "</li>"
                );
            }
            $.each(this.$el.children(), function (i, elm) {
                ul.append(that.optionToHtml(i, elm));
            });
            ul.append('<li class="ms-no-results">' + this.options.noMatchesFound + "</li>");
            this.$drop.append(ul);
            this.$drop.find("ul").css("max-height", this.options.maxHeight + "px");
            this.$drop.find(".multiple").css("width", this.options.multipleWidth + "px");
            this.$searchInput = this.$drop.find(".ms-search input");
            this.$selectAll = this.$drop.find("input[" + this.selectAllName + "]");
            this.$selectGroups = this.$drop.find("input[" + this.selectGroupName + "]");
            this.$selectItems = this.$drop.find("input[" + this.selectItemName + "]:enabled");
            this.$disableItems = this.$drop.find("input[" + this.selectItemName + "]:disabled");
            this.$noResults = this.$drop.find(".ms-no-results");
            this.events();
            this.updateSelectAll(!0);
            this.update(!0);
            if (this.options.isOpen) {
                this.open();
            }
        },
        optionToHtml: function (i, elm, group, groupDisabled) {
            var that = this,
                $elm = $(elm),
                html = [],
                multiple = this.options.multiple,
                optAttributesToCopy = ["class", "title"],
                clss = $.map(optAttributesToCopy, function (att, i) {
                    var isMultiple = att === "class" && multiple;
                    var attValue = $elm.attr(att) || "";
                    return isMultiple || attValue ? " " + att + '="' + (isMultiple ? "multiple" + (attValue ? " " : "") : "") + attValue + '"' : "";
                }).join(""),
                disabled,
                type = this.options.single ? "radio" : "checkbox";
            if ($elm.is("option")) {
                var value = $elm.val(),
                    text = that.options.textTemplate($elm),
                    selected = that.$el.attr("multiple") != undefined ? $elm.prop("selected") : $elm.attr("selected") == "selected",
                    style = this.options.styler(value) ? ' style="' + this.options.styler(value) + '"' : "";
                disabled = groupDisabled || $elm.prop("disabled");
                if (this.options.blockSeparator > "" && this.options.blockSeparator == $elm.val()) {
                    html.push("<li" + clss + style + ">", '<label class="' + this.options.blockSeparator + (disabled ? "disabled" : "") + '">', text, "</label>", "</li>");
                } else {
                    html.push(
                        "<li" + clss + style + ">",
                        "<label" + (disabled ? ' class="disabled"' : "") + ">",
                        '<input type="' +
                            type +
                            '" ' +
                            this.selectItemName +
                            ' value="' +
                            value +
                            '"' +
                            (selected ? ' checked="checked"' : "") +
                            (disabled ? ' disabled="disabled"' : "") +
                            (group ? ' data-group="' + group + '"' : "") +
                            "/> ",
                        text,
                        "</label>",
                        "</li>"
                    );
                }
            } else if (!group && $elm.is("optgroup")) {
                var _group = "group_" + i,
                    label = $elm.attr("label");
                disabled = $elm.prop("disabled");
                html.push(
                    '<li class="group">',
                    '<label class="optgroup' + (disabled ? " disabled" : "") + '" data-group="' + _group + '">',
                    this.options.hideOptgroupCheckboxes ? "" : '<input type="checkbox" ' + this.selectGroupName + (disabled ? ' disabled="disabled"' : "") + " /> ",
                    label,
                    "</label>",
                    "</li>"
                );
                $.each($elm.children(), function (i, elm) {
                    html.push(that.optionToHtml(i, elm, _group, disabled));
                });
            }
            return html.join("");
        },
        events: function () {
            var that = this;
            function toggleOpen(e) {
                e.preventDefault();
                that[that.options.isOpen ? "close" : "open"]();
            }
            var label = this.$el.parent().closest("label")[0] || $("label[for=" + this.$el.attr("id").split(":").join("\\:") + "]")[0];
            if (label) {
                $(label)
                    .off("click")
                    .on("click", function (e) {
                        if (e.target.nodeName.toLowerCase() !== "label" || e.target !== this) {
                            return;
                        }
                        toggleOpen(e);
                        if (!that.options.filter || !that.options.isOpen) {
                            that.focus();
                        }
                        e.stopPropagation();
                    });
            }
            this.$choice.off("click").on("click", toggleOpen).off("focus").on("focus", this.options.onFocus).off("blur").on("blur", this.options.onBlur);
            this.$parent.off("keydown").on("keydown", function (e) {
                switch (e.which) {
                    case 27:
                        that.close();
                        that.$choice.focus();
                        break;
                }
            });
            this.$searchInput
                .off("keydown")
                .on("keydown", function (e) {
                    if (e.keyCode === 9 && e.shiftKey) {
                        that.close();
                    }
                })
                .off("keyup")
                .on("keyup", function (e) {
                    if (that.options.filterAcceptOnEnter && (e.which === 13 || e.which == 32) && that.$searchInput.val()) {
                        that.$selectAll.click();
                        that.close();
                        that.focus();
                        return;
                    }
                    that.filter();
                });
            this.$selectAll.off("click").on("click", function () {
                var checked = $(this).prop("checked"),
                    $items = that.$selectItems.filter(":visible");
                if ($items.length === that.$selectItems.length) {
                    that[checked ? "checkAll" : "uncheckAll"]();
                } else {
                    that.$selectGroups.prop("checked", checked);
                    $items.prop("checked", checked);
                    that.options[checked ? "onCheckAll" : "onUncheckAll"]();
                    that.update();
                }
            });
            this.$selectGroups.off("click").on("click", function () {
                var group = $(this).parent().attr("data-group"),
                    $items = that.$selectItems.filter(":visible"),
                    $children = $items.filter('[data-group="' + group + '"]'),
                    checked = $children.length !== $children.filter(":checked").length;
                $children.prop("checked", checked);
                that.updateSelectAll();
                that.update();
                that.options.onOptgroupClick({ label: $(this).parent().text(), checked: checked, children: $children.get() });
            });
            this.$selectItems.off("click").on("click", function () {
                that.updateSelectAll();
                that.update();
                that.updateOptGroupSelect();
                that.options.onClick({ label: $(this).parent().text(), value: $(this).val(), checked: $(this).prop("checked") });
                if (that.options.single && that.options.isOpen && !that.options.keepOpen) {
                    that.close();
                }
            });
        },
        open: function () {
            if (this.$choice.hasClass("disabled")) {
                return;
            }
            this.options.isOpen = !0;
            this.$choice.find(">div").addClass("open");
            this.$drop.show();
            this.$selectAll.parent().show();
            this.$noResults.hide();
            if (this.$el.children().length === 0) {
                this.$selectAll.parent().hide();
                this.$noResults.show();
            }
            if (this.options.container) {
                var offset = this.$drop.offset();
                this.$drop.appendTo($(this.options.container));
                this.$drop.offset({ top: offset.top, left: offset.left });
            }
            if (this.options.filter) {
                this.$searchInput.val("");
                this.$searchInput.focus();
                this.filter();
            }
            this.options.onOpen();
        },
        close: function () {
            this.options.isOpen = !1;
            this.$choice.find(">div").removeClass("open");
            this.$drop.hide();
            if (this.options.container) {
                this.$parent.append(this.$drop);
                this.$drop.css({ top: "auto", left: "auto" });
            }
            this.options.onClose();
        },
        update: function (isInit) {
            var selects = this.getSelects(),
                $span = this.$choice.find(">span");
            if (selects.length === 0) {
                $span.addClass("placeholder").html(this.options.placeholder);
            } else if (this.options.countSelected && selects.length < this.options.minimumCountSelected) {
                $span.removeClass("placeholder").text((this.options.displayValues ? selects : this.getSelects("text")).join(this.options.delimiter));
            } else if (this.options.allSelected && selects.length === this.$selectItems.length + this.$disableItems.length) {
                $span.removeClass("placeholder").html(this.options.allSelected);
            } else if ((this.options.countSelected || this.options.etcaetera) && selects.length > this.options.minimumCountSelected) {
                if (this.options.etcaetera) {
                    $span.removeClass("placeholder").text((this.options.displayValues ? selects : this.getSelects("text").slice(0, this.options.minimumCountSelected)).join(this.options.delimiter) + "...");
                } else {
                    $span.removeClass("placeholder").html(this.options.countSelected.replace("#", selects.length).replace("%", this.$selectItems.length + this.$disableItems.length));
                }
            } else {
                $span.removeClass("placeholder").text((this.options.displayValues ? selects : this.getSelects("text")).join(this.options.delimiter));
            }
            if (this.options.addTitle) $span.prop("title", this.getSelects("text"));
            this.$el.val(this.getSelects());
            this.$drop.find("li").removeClass("selected");
            this.$drop.find("input[" + this.selectItemName + "]:checked").each(function () {
                $(this).parents("li").first().addClass("selected");
            });
            if (!isInit) {
                this.$el.trigger("change");
            }
        },
        updateSelectAll: function (Init) {
            var $items = this.$selectItems;
            if (!Init) {
                $items = $items.filter(":visible");
            }
            this.$selectAll.prop("checked", $items.length && $items.length === $items.filter(":checked").length);
            if (this.$selectAll.prop("checked")) {
                this.options.onCheckAll();
            }
        },
        updateOptGroupSelect: function () {
            var $items = this.$selectItems.filter(":visible");
            $.each(this.$selectGroups, function (i, val) {
                var group = $(val).parent().attr("data-group"),
                    $children = $items.filter('[data-group="' + group + '"]');
                $(val).prop("checked", $children.length && $children.length === $children.filter(":checked").length);
            });
        },
        getSelects: function (type) {
            var that = this,
                texts = [],
                values = [];
            this.$drop.find("input[" + this.selectItemName + "]:checked").each(function () {
                texts.push($(this).parents("li").first().text());
                values.push($(this).val());
            });
            if (type === "text" && this.$selectGroups.length) {
                texts = [];
                this.$selectGroups.each(function () {
                    var html = [],
                        text = $.trim($(this).parent().text()),
                        group = $(this).parent().data("group"),
                        $children = that.$drop.find("[" + that.selectItemName + '][data-group="' + group + '"]'),
                        $selected = $children.filter(":checked");
                    if ($selected.length === 0) {
                        return;
                    }
                    html.push("[");
                    html.push(text);
                    if ($children.length > $selected.length) {
                        var list = [];
                        $selected.each(function () {
                            list.push($(this).parent().text());
                        });
                        html.push(": " + list.join(", "));
                    }
                    html.push("]");
                    texts.push(html.join(""));
                });
            }
            return type === "text" ? texts : values;
        },
        setSelects: function (values) {
            var that = this;
            this.$selectItems.prop("checked", !1);
            $.each(values, function (i, value) {
                that.$selectItems.filter('[value="' + value + '"]').prop("checked", !0);
            });
            this.$selectAll.prop("checked", this.$selectItems.length === this.$selectItems.filter(":checked").length);
            this.update();
        },
        enable: function () {
            this.$choice.removeClass("disabled");
        },
        disable: function () {
            this.$choice.addClass("disabled");
        },
        checkAll: function () {
            this.$selectItems.prop("checked", !0);
            this.$selectGroups.prop("checked", !0);
            this.$selectAll.prop("checked", !0);
            this.update();
            this.options.onCheckAll();
        },
        uncheckAll: function () {
            this.$selectItems.prop("checked", !1);
            this.$selectGroups.prop("checked", !1);
            this.$selectAll.prop("checked", !1);
            this.update();
            this.options.onUncheckAll();
        },
        focus: function () {
            this.$choice.focus();
            this.options.onFocus();
        },
        blur: function () {
            this.$choice.blur();
            this.options.onBlur();
        },
        refresh: function () {
            console.log("refresh");
            this.init();
        },
        filter: function () {
            var that = this,
                text = $.trim(this.$searchInput.val()).toLowerCase();
            if (text.length === 0) {
                this.$selectItems.parent().show();
                this.$disableItems.parent().show();
                this.$selectGroups.parent().show();
            } else {
                this.$selectItems.each(function () {
                    var $parent = $(this).parent();
                    $parent[$parent.text().toLowerCase().indexOf(text) < 0 ? "hide" : "show"]();
                });
                this.$disableItems.parent().hide();
                this.$selectGroups.each(function () {
                    var $parent = $(this).parent();
                    var group = $parent.attr("data-group"),
                        $items = that.$selectItems.filter(":visible");
                    $parent[$items.filter('[data-group="' + group + '"]').length === 0 ? "hide" : "show"]();
                });
                if (this.$selectItems.filter(":visible").length) {
                    this.$selectAll.parent().show();
                    this.$noResults.hide();
                } else {
                    this.$selectAll.parent().hide();
                    this.$noResults.show();
                }
            }
            this.updateOptGroupSelect();
            this.updateSelectAll();
        },
    };
    $.fn.multipleSelect = function () {
        var option = arguments[0],
            args = arguments,
            value,
            allowedMethods = ["getSelects", "setSelects", "enable", "disable", "checkAll", "uncheckAll", "focus", "blur", "refresh", "close"];
        this.each(function () {
            var $this = $(this),
                data = $this.data("multipleSelect"),
                options = $.extend({}, $.fn.multipleSelect.defaults, $this.data(), typeof option === "object" && option);
            if (!data) {
                data = new MultipleSelect($this, options);
                $this.data("multipleSelect", data);
            }
            if (typeof option === "string") {
                if ($.inArray(option, allowedMethods) < 0) {
                    throw "Unknown method: " + option;
                }
                value = data[option](args[1]);
            } else {
                data.init();
                if (args[1]) {
                    value = data[args[1]].apply(data, [].slice.call(args, 2));
                }
            }
        });
        return value ? value : this;
    };
    $.fn.multipleSelect.defaults = {
        name: "",
        isOpen: !1,
        placeholder: "",
        selectAll: !0,
        selectAllText: "Выбрать все",
        selectAllDelimiter: ["[", "]"],
        allSelected: "Все выбрано",
        minimumCountSelected: 3,
        countSelected: "# из % выбрано",
        noMatchesFound: "Ничего не найдено",
        multiple: !1,
        multipleWidth: 80,
        single: !1,
        filter: !1,
        width: undefined,
        maxHeight: 250,
        container: null,
        position: "bottom",
        keepOpen: !1,
        blockSeparator: "",
        displayValues: !1,
        delimiter: ", ",
        addTitle: !1,
        styler: function () {
            return !1;
        },
        textTemplate: function ($elm) {
            return $elm.text();
        },
        onOpen: function () {
            return !1;
        },
        onClose: function () {
            return !1;
        },
        onCheckAll: function () {
            return !1;
        },
        onUncheckAll: function () {
            return !1;
        },
        onFocus: function () {
            return !1;
        },
        onBlur: function () {
            return !1;
        },
        onOptgroupClick: function () {
            return !1;
        },
        onClick: function () {
            return !1;
        },
    };
})(jQuery);
(function ($) {
    "use strict";
    $.fn.selectOrDie = function (method) {
        var $defaults = { customID: null, customClass: "", placeholder: null, placeholderOption: !1, prefix: null, cycle: !1, stripEmpty: !1, links: !1, linksExternal: !1, size: 0, tabIndex: 0, onChange: $.noop },
            $_settings = {},
            $_sodKeysWhenClosed = !1,
            $_sodFilterTimeout,
            $_sodViewportTimeout;
        var _private = {
            initSoD: function (options) {
                $_settings = $.extend({}, $defaults, options);
                return this.each(function () {
                    if (!$(this).parent().hasClass("sod_select")) {
                        var $select = $(this),
                            $settingsId = $select.data("custom-id") ? $select.data("custom-id") : $_settings.customID,
                            $settingsClass = $select.data("custom-class") ? $select.data("custom-class") : $_settings.customClass,
                            $settingsPrefix = $select.data("prefix") ? $select.data("prefix") : $_settings.prefix,
                            $settingsPlaceholder = $select.data("placeholder") ? $select.data("placeholder") : $_settings.placeholder,
                            $settingsPlaceholderOption = $select.data("placeholder-option") ? $select.data("placeholder-option") : $_settings.placeholderOption,
                            $settingsCycle = $select.data("cycle") ? $select.data("cycle") : $_settings.cycle,
                            $settingsLinks = $select.data("links") ? $select.data("links") : $_settings.links,
                            $settingsLinksExternal = $select.data("links-external") ? $select.data("links-external") : $_settings.linksExternal,
                            $settingsSize = parseInt($select.data("size")) ? $select.data("size") : $_settings.size,
                            $settingsTabIndex = parseInt($select.data("tabindex")) ? $select.data("tabindex") : $_settings.tabIndex ? $_settings.tabIndex : $select.attr("tabindex") ? $select.attr("tabindex") : $_settings.tabIndex,
                            $settingsStripEmpty = $select.data("strip-empty") ? $select.data("strip-empty") : $_settings.stripEmpty,
                            $selectTitle = $select.prop("title") ? $select.prop("title") : null,
                            $selectDisabled = $select.is(":disabled") ? " disabled" : "",
                            $sodPrefix = "",
                            $sodHtml = "",
                            $sodHeight = 0,
                            $sod,
                            $sodListWrapper,
                            $sodList;
                        if ($settingsPrefix) {
                            $sodPrefix = '<span class="sod_prefix">' + $settingsPrefix + "</span> ";
                        }
                        if ($settingsPlaceholder && !$settingsPrefix) {
                            $sodHtml += '<span class="sod_label sod_placeholder">' + $settingsPlaceholder + "</span>";
                        } else {
                            $sodHtml += '<span class="sod_label">' + $sodPrefix + "</span>";
                        }
                        $sod = $("<span/>", {
                            id: $settingsId,
                            class: "sod_select " + $settingsClass + $selectDisabled,
                            title: $selectTitle,
                            tabindex: $settingsTabIndex,
                            html: $sodHtml,
                            "data-cycle": $settingsCycle,
                            "data-links": $settingsLinks,
                            "data-links-external": $settingsLinksExternal,
                            "data-placeholder": $settingsPlaceholder,
                            "data-placeholder-option": $settingsPlaceholderOption,
                            "data-prefix": $settingsPrefix,
                            "data-filter": "",
                        }).insertAfter(this);
                        if (_private.isTouch()) {
                            $sod.addClass("touch");
                        }
                        $sodListWrapper = $("<span/>", { class: "sod_list_wrapper" }).appendTo($sod);
                        $sodList = $("<span/>", { class: "sod_list" }).appendTo($sodListWrapper);
                        $("option, optgroup", $select).each(function (i) {
                            var $this = $(this);
                            if ($settingsStripEmpty && !$.trim($this.text())) {
                                $this.remove();
                            } else if (i === 0 && $settingsPlaceholderOption && !$sodPrefix) _private.populateSoD($this, $sodList, $sod, !0);
                            else {
                                _private.populateSoD($this, $sodList, $sod, !1);
                            }
                        });
                        if ($settingsSize) {
                            $sodListWrapper.show();
                            $(".sod_option:lt(" + $settingsSize + ")", $sodList).each(function () {
                                $sodHeight += $(this).outerHeight();
                            });
                            $sodListWrapper.removeAttr("style");
                            $sodList.css({ "max-height": $sodHeight });
                        }
                        $select.appendTo($sod);
                        $sod.on("focusin", _private.focusSod).on("click", _private.triggerSod).on("click", ".sod_option", _private.optionClick).on("mousemove", ".sod_option", _private.optionHover).on("keydown", _private.keyboardUse);
                        $select.on("change", _private.selectChange);
                        $(document).on("click", "label[for='" + $select.attr("id") + "']", function (e) {
                            e.preventDefault();
                            $sod.focus();
                        });
                    } else {
                        console.log("Select or Die: It looks like the SoD already exists");
                    }
                });
            },
            populateSoD: function ($option, $sodList, $sod, $isPlaceholder) {
                var $sodPlaceholder = $sod.data("placeholder"),
                    $sodPlaceholderOption = $sod.data("placeholder-option"),
                    $sodPrefix = $sod.data("prefix"),
                    $sodLabel = $sod.find(".sod_label"),
                    $optionParent = $option.parent(),
                    $optionText = $option.text(),
                    $optionValue = $option.val(),
                    $optionCustomId = $option.data("custom-id") ? $option.data("custom-id") : null,
                    $optionCustomClass = $option.data("custom-class") ? $option.data("custom-class") : "",
                    $optionIsDisabled = $option.is(":disabled") ? " disabled " : "",
                    $optionIsSelected = $option.is(":selected") ? " selected active " : "",
                    $optionLink = $option.data("link") ? " link " : "",
                    $optionLinkExternal = $option.data("link-external") ? " linkexternal" : "",
                    $optgroupLabel = $option.prop("label");
                if ($option.is("option")) {
                    $("<span/>", { class: "sod_option " + $optionCustomClass + $optionIsDisabled + $optionIsSelected + $optionLink + $optionLinkExternal, id: $optionCustomId, html: $optionText, "data-value": $optionValue }).appendTo(
                        $sodList
                    );
                    if ($isPlaceholder && !$sodPrefix) {
                        $sod.data("label", $optionText);
                        $sod.data("placeholder", $optionText);
                        $option.prop("disabled", !0);
                        $sodList.find(".sod_option:last").addClass("is-placeholder disabled");
                        if ($optionIsSelected) {
                            $sodLabel.addClass("sod_placeholder");
                        }
                    } else if ($optionIsSelected && $sodPlaceholder && !$sodPlaceholderOption && !$sodPrefix) {
                        $sod.data("label", $sodPlaceholder);
                    } else if ($optionIsSelected) {
                        $sod.data("label", $optionText);
                    }
                    if (($optionIsSelected && !$sodPlaceholder) || ($optionIsSelected && $sodPlaceholderOption) || ($optionIsSelected && $sodPrefix)) {
                        $sodLabel.append($optionText);
                    }
                    if ($optionParent.is("optgroup")) {
                        $sodList.find(".sod_option:last").addClass("groupchild");
                        if ($optionParent.is(":disabled")) {
                            $sodList.find(".sod_option:last").addClass("disabled");
                        }
                    }
                } else {
                    $("<span/>", { class: "sod_option optgroup " + $optionIsDisabled, title: $optgroupLabel, html: $optgroupLabel, "data-label": $optgroupLabel }).appendTo($sodList);
                }
            },
            focusSod: function () {
                var $sod = $(this);
                if (!$sod.hasClass("disabled")) {
                    _private.blurSod($(".sod_select.focus").not($sod));
                    $sod.addClass("focus");
                    $("html").on("click.sodBlur", function () {
                        _private.blurSod($sod);
                    });
                } else {
                    _private.blurSod($sod);
                }
            },
            triggerSod: function (e) {
                e.stopPropagation();
                var $sod = $(this),
                    $sodList = $sod.find(".sod_list"),
                    $sodPlaceholder = $sod.data("placeholder"),
                    $optionActive = $sod.find(".active"),
                    $optionSelected = $sod.find(".selected");
                if (!$sod.hasClass("disabled") && !$sod.hasClass("open") && !$sod.hasClass("touch")) {
                    $sod.addClass("open");
                    if ($sodPlaceholder && !$sod.data("prefix")) {
                        $sod.find(".sod_label").addClass("sod_placeholder").html($sodPlaceholder);
                    }
                    _private.listScroll($sodList, $optionSelected);
                    _private.checkViewport($sod, $sodList);
                } else {
                    clearTimeout($_sodViewportTimeout);
                    $sod.removeClass("open");
                    if ($sodPlaceholder) {
                        $sod.find(".sod_label").get(0).lastChild.nodeValue = $optionActive.text();
                    }
                }
            },
            keyboardUse: function (e) {
                var $sod = $(this),
                    $sodList = $sod.find(".sod_list"),
                    $sodOptions = $sod.find(".sod_option"),
                    $sodLabel = $sod.find(".sod_label"),
                    $sodCycle = $sod.data("cycle"),
                    $optionActive = $sodOptions.filter(".active"),
                    $sodFilterHit,
                    $optionNext,
                    $optionCycle;
                if (e.which > 36 && e.which < 41) {
                    if (e.which === 37 || e.which === 38) {
                        $optionNext = $optionActive.prevAll(":not('.disabled, .optgroup')").first();
                        $optionCycle = $sodOptions.not(".disabled, .optgroup").last();
                    } else if (e.which === 39 || e.which === 40) {
                        $optionNext = $optionActive.nextAll(":not('.disabled, .optgroup')").first();
                        $optionCycle = $sodOptions.not(".disabled, .optgroup").first();
                    }
                    if (!$optionNext.hasClass("sod_option") && $sodCycle) {
                        $optionNext = $optionCycle;
                    }
                    if ($optionNext.hasClass("sod_option") || $sodCycle) {
                        $optionActive.removeClass("active");
                        $optionNext.addClass("active");
                        $sodLabel.get(0).lastChild.nodeValue = $optionNext.text();
                        _private.listScroll($sodList, $optionNext);
                        if (!$sod.hasClass("open")) {
                            $_sodKeysWhenClosed = !0;
                        }
                    }
                    return !1;
                } else if (e.which === 13 || (e.which === 32 && $sod.hasClass("open") && ($sod.data("filter")[0] === " " || $sod.data("filter") === ""))) {
                    e.preventDefault();
                    $optionActive.click();
                } else if (e.which === 32 && !$sod.hasClass("open") && ($sod.data("filter")[0] === " " || $sod.data("filter") === "")) {
                    e.preventDefault();
                    $_sodKeysWhenClosed = !1;
                    $sod.click();
                } else if (e.which === 27) {
                    _private.blurSod($sod);
                }
                if (e.which !== 0) {
                    clearTimeout($_sodFilterTimeout);
                    $sod.data("filter", $sod.data("filter") + String.fromCharCode(e.which));
                    $sodFilterHit = $sodOptions
                        .filter(function () {
                            return $(this).text().toLowerCase().indexOf($sod.data("filter").toLowerCase()) === 0;
                        })
                        .not(".disabled, .optgroup")
                        .first();
                    if ($sodFilterHit.length) {
                        $optionActive.removeClass("active");
                        $sodFilterHit.addClass("active");
                        _private.listScroll($sodList, $sodFilterHit);
                        $sodLabel.get(0).lastChild.nodeValue = $sodFilterHit.text();
                        if (!$sod.hasClass("open")) {
                            $_sodKeysWhenClosed = !0;
                        }
                    }
                    $_sodFilterTimeout = setTimeout(function () {
                        $sod.data("filter", "");
                    }, 500);
                }
            },
            optionHover: function () {
                var $option = $(this);
                if (!$option.hasClass("disabled") && !$option.hasClass("optgroup")) {
                    $option.siblings().removeClass("active").end().addClass("active");
                }
            },
            optionClick: function (e) {
                e.stopPropagation();
                var $clicked = $(this),
                    $sod = $clicked.closest(".sod_select"),
                    $optionDisabled = $clicked.hasClass("disabled"),
                    $optionOptgroup = $clicked.hasClass("optgroup"),
                    $optionIndex = $sod.find(".sod_option:not('.optgroup')").index(this);
                if ($sod.hasClass("touch")) {
                    return;
                }
                if (!$optionDisabled && !$optionOptgroup) {
                    $sod.find(".selected, .sod_placeholder").removeClass("selected sod_placeholder");
                    $clicked.addClass("selected");
                    $sod.find("select option")[$optionIndex].selected = !0;
                    $sod.find("select").change();
                }
                clearTimeout($_sodViewportTimeout);
                $sod.removeClass("open");
            },
            selectChange: function () {
                var $select = $(this),
                    $optionSelected = $select.find(":selected"),
                    $optionText = $optionSelected.text(),
                    $sod = $select.closest(".sod_select");
                $sod.find(".sod_label").get(0).lastChild.nodeValue = $optionText;
                $sod.data("label", $optionText);
                $_settings.onChange.call(this);
                if (($sod.data("links") || $optionSelected.data("link")) && !$optionSelected.data("link-external")) {
                    window.location.href = $optionSelected.val();
                } else if ($sod.data("links-external") || $optionSelected.data("link-external")) {
                    window.open($optionSelected.val(), "_blank");
                }
            },
            blurSod: function ($sod) {
                if ($("body").find($sod).length) {
                    var $sodLabel = $sod.data("label"),
                        $sodPlaceholder = $sod.data("placeholder"),
                        $optionActive = $sod.find(".active"),
                        $optionSelected = $sod.find(".selected"),
                        $optionHasChanged = !1;
                    clearTimeout($_sodViewportTimeout);
                    if ($_sodKeysWhenClosed && !$optionActive.hasClass("selected")) {
                        $optionActive.click();
                        $optionHasChanged = !0;
                    } else if (!$optionActive.hasClass("selected")) {
                        $optionActive.removeClass("active");
                        $optionSelected.addClass("active");
                    }
                    if (!$optionHasChanged && $sodPlaceholder) {
                        $sod.find(".sod_label").get(0).lastChild.nodeValue = $optionSelected.text();
                    } else if (!$optionHasChanged) {
                        $sod.find(".sod_label").get(0).lastChild.nodeValue = $sodLabel;
                    }
                    $_sodKeysWhenClosed = !1;
                    $sod.removeClass("open focus");
                    $sod.blur();
                    $("html").off(".sodBlur");
                }
            },
            checkViewport: function ($sod, $sodList) {
                var $sodPosition = $sod[0].getBoundingClientRect(),
                    $sodListHeight = $sodList.outerHeight();
                $sod.addClass("above");
                $_sodViewportTimeout = setTimeout(function () {
                    _private.checkViewport($sod, $sodList);
                }, 200);
            },
            listScroll: function ($sodList, $option) {
                var $scrollList = $sodList[0].getBoundingClientRect(),
                    $scrollOption = $option[0].getBoundingClientRect();
                if ($scrollList.top > $scrollOption.top) {
                    $sodList.scrollTop($sodList.scrollTop() - $scrollList.top + $scrollOption.top);
                } else if ($scrollList.bottom < $scrollOption.bottom) {
                    $sodList.scrollTop($sodList.scrollTop() - $scrollList.bottom + $scrollOption.bottom);
                }
            },
            isTouch: function () {
                return "ontouchstart" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
            },
        };
        var methods = {
            destroy: function () {
                return this.each(function () {
                    var $select = $(this),
                        $sod = $select.parent();
                    if ($sod.hasClass("sod_select")) {
                        $select.off("change");
                        $sod.find("span").remove();
                        $select.unwrap();
                    } else {
                        console.log("Select or Die: There's no SoD to destroy");
                    }
                });
            },
            update: function () {
                return this.each(function () {
                    var $select = $(this),
                        $sod = $select.parent(),
                        $sodList = $sod.find(".sod_list:first");
                    if ($sod.hasClass("sod_select")) {
                        $sodList.empty();
                        $sod.find(".sod_label").get(0).lastChild.nodeValue = "";
                        if ($select.is(":disabled")) {
                            $sod.addClass("disabled");
                        }
                        $("option, optgroup", $select).each(function () {
                            _private.populateSoD($(this), $sodList, $sod);
                        });
                    } else {
                        console.log("Select or Die: There's no SoD to update");
                    }
                });
            },
            disable: function ($value) {
                return this.each(function () {
                    var $select = $(this),
                        $sod = $select.parent();
                    if ($sod.hasClass("sod_select")) {
                        if (typeof $value !== "undefined") {
                            $sod.find(".sod_list:first .sod_option[data-value='" + $value + "']").addClass("disabled");
                            $sod.find(".sod_list:first .sod_option[data-label='" + $value + "']")
                                .nextUntil(":not(.groupchild)")
                                .addClass("disabled");
                            $("option[value='" + $value + "'], optgroup[label='" + $value + "']", this).prop("disabled", !0);
                        } else if ($sod.hasClass("sod_select")) {
                            $sod.addClass("disabled");
                            $select.prop("disabled", !0);
                        }
                    } else {
                        console.log("Select or Die: There's no SoD to disable");
                    }
                });
            },
            enable: function ($value) {
                return this.each(function () {
                    var $select = $(this),
                        $sod = $select.parent();
                    if ($sod.hasClass("sod_select")) {
                        if (typeof $value !== "undefined") {
                            $sod.find(".sod_list:first .sod_option[data-value='" + $value + "']").removeClass("disabled");
                            $sod.find(".sod_list:first .sod_option[data-label='" + $value + "']")
                                .nextUntil(":not(.groupchild)")
                                .removeClass("disabled");
                            $("option[value='" + $value + "'], optgroup[label='" + $value + "']", this).prop("disabled", !1);
                        } else if ($sod.hasClass("sod_select")) {
                            $sod.removeClass("disabled");
                            $select.prop("disabled", !1);
                        }
                    } else {
                        console.log("Select or Die: There's no SoD to enable");
                    }
                });
            },
        };
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === "object" || !method) {
            return _private.initSoD.apply(this, arguments);
        } else {
            $.error('Select or Die: Oh no! No such method "' + method + '" for the SoD instance');
        }
    };
})(jQuery);
(function (factory) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], factory);
    } else if (typeof exports === "object") {
        module.exports = factory(require("jquery"));
    } else {
        factory(jQuery);
    }
})(function ($) {
    var pluses = /\+/g;
    function encode(s) {
        return config.raw ? s : encodeURIComponent(s);
    }
    function decode(s) {
        return config.raw ? s : decodeURIComponent(s);
    }
    function stringifyCookieValue(value) {
        return encode(config.json ? JSON.stringify(value) : String(value));
    }
    function parseCookieValue(s) {
        if (s.indexOf('"') === 0) {
            s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\");
        }
        try {
            s = decodeURIComponent(s.replace(pluses, " "));
            return config.json ? JSON.parse(s) : s;
        } catch (e) {}
    }
    function read(s, converter) {
        var value = config.raw ? s : parseCookieValue(s);
        return $.isFunction(converter) ? converter(value) : value;
    }
    var config = ($.cookie = function (key, value, options) {
        if (arguments.length > 1 && !$.isFunction(value)) {
            options = $.extend({}, config.defaults, options);
            if (typeof options.expires === "number") {
                var days = options.expires,
                    t = (options.expires = new Date());
                t.setMilliseconds(t.getMilliseconds() + days * 864e5);
            }
            return (document.cookie = [
                encode(key),
                "=",
                stringifyCookieValue(value),
                options.expires ? "; expires=" + options.expires.toUTCString() : "",
                options.path ? "; path=" + options.path : "",
                options.domain ? "; domain=" + options.domain : "",
                options.secure ? "; secure" : "",
            ].join(""));
        }
        var result = key ? undefined : {},
            cookies = document.cookie ? document.cookie.split("; ") : [],
            i = 0,
            l = cookies.length;
        for (; i < l; i++) {
            var parts = cookies[i].split("="),
                name = decode(parts.shift()),
                cookie = parts.join("=");
            if (key === name) {
                result = read(cookie, value);
                break;
            }
            if (!key && (cookie = read(cookie)) !== undefined) {
                result[name] = cookie;
            }
        }
        return result;
    });
    config.defaults = {};
    $.removeCookie = function (key, options) {
        $.cookie(key, "", $.extend({}, options, { expires: -1 }));
        return !$.cookie(key);
    };
});
(function (a, b) {
    function m(a, b, c) {
        var d = h[b.type] || {};
        return a == null ? (c || !b.def ? null : b.def) : ((a = d.floor ? ~~a : parseFloat(a)), isNaN(a) ? b.def : d.mod ? (a + d.mod) % d.mod : 0 > a ? 0 : d.max < a ? d.max : a);
    }
    function n(b) {
        var c = f(),
            d = (c._rgba = []);
        return (
            (b = b.toLowerCase()),
            l(e, function (a, e) {
                var f,
                    h = e.re.exec(b),
                    i = h && e.parse(h),
                    j = e.space || "rgba";
                if (i) return (f = c[j](i)), (c[g[j].cache] = f[g[j].cache]), (d = c._rgba = f._rgba), !1;
            }),
            d.length ? (d.join() === "0,0,0,0" && a.extend(d, k.transparent), c) : k[b]
        );
    }
    function o(a, b, c) {
        return (c = (c + 1) % 1), c * 6 < 1 ? a + (b - a) * c * 6 : c * 2 < 1 ? b : c * 3 < 2 ? a + (b - a) * (2 / 3 - c) * 6 : a;
    }
    var c = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
        d = /^([\-+])=\s*(\d+\.?\d*)/,
        e = [
            {
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function (a) {
                    return [a[1], a[2], a[3], a[4]];
                },
            },
            {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function (a) {
                    return [a[1] * 2.55, a[2] * 2.55, a[3] * 2.55, a[4]];
                },
            },
            {
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                parse: function (a) {
                    return [parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16)];
                },
            },
            {
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                parse: function (a) {
                    return [parseInt(a[1] + a[1], 16), parseInt(a[2] + a[2], 16), parseInt(a[3] + a[3], 16)];
                },
            },
            {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function (a) {
                    return [a[1], a[2] / 100, a[3] / 100, a[4]];
                },
            },
        ],
        f = (a.Color = function (b, c, d, e) {
            return new a.Color.fn.parse(b, c, d, e);
        }),
        g = {
            rgba: { props: { red: { idx: 0, type: "byte" }, green: { idx: 1, type: "byte" }, blue: { idx: 2, type: "byte" } } },
            hsla: { props: { hue: { idx: 0, type: "degrees" }, saturation: { idx: 1, type: "percent" }, lightness: { idx: 2, type: "percent" } } },
        },
        h = { byte: { floor: !0, max: 255 }, percent: { max: 1 }, degrees: { mod: 360, floor: !0 } },
        i = (f.support = {}),
        j = a("<p>")[0],
        k,
        l = a.each;
    (j.style.cssText = "background-color:rgba(1,1,1,.5)"),
        (i.rgba = j.style.backgroundColor.indexOf("rgba") > -1),
        l(g, function (a, b) {
            (b.cache = "_" + a), (b.props.alpha = { idx: 3, type: "percent", def: 1 });
        }),
        (f.fn = a.extend(f.prototype, {
            parse: function (c, d, e, h) {
                if (c === b) return (this._rgba = [null, null, null, null]), this;
                if (c.jquery || c.nodeType) (c = a(c).css(d)), (d = b);
                var i = this,
                    j = a.type(c),
                    o = (this._rgba = []);
                d !== b && ((c = [c, d, e, h]), (j = "array"));
                if (j === "string") return this.parse(n(c) || k._default);
                if (j === "array")
                    return (
                        l(g.rgba.props, function (a, b) {
                            o[b.idx] = m(c[b.idx], b);
                        }),
                        this
                    );
                if (j === "object")
                    return (
                        c instanceof f
                            ? l(g, function (a, b) {
                                  c[b.cache] && (i[b.cache] = c[b.cache].slice());
                              })
                            : l(g, function (b, d) {
                                  var e = d.cache;
                                  l(d.props, function (a, b) {
                                      if (!i[e] && d.to) {
                                          if (a === "alpha" || c[a] == null) return;
                                          i[e] = d.to(i._rgba);
                                      }
                                      i[e][b.idx] = m(c[a], b, !0);
                                  }),
                                      i[e] && a.inArray(null, i[e].slice(0, 3)) < 0 && ((i[e][3] = 1), d.from && (i._rgba = d.from(i[e])));
                              }),
                        this
                    );
            },
            is: function (a) {
                var b = f(a),
                    c = !0,
                    d = this;
                return (
                    l(g, function (a, e) {
                        var f,
                            g = b[e.cache];
                        return (
                            g &&
                                ((f = d[e.cache] || (e.to && e.to(d._rgba)) || []),
                                l(e.props, function (a, b) {
                                    if (g[b.idx] != null) return (c = g[b.idx] === f[b.idx]), c;
                                })),
                            c
                        );
                    }),
                    c
                );
            },
            _space: function () {
                var a = [],
                    b = this;
                return (
                    l(g, function (c, d) {
                        b[d.cache] && a.push(c);
                    }),
                    a.pop()
                );
            },
            transition: function (a, b) {
                var c = f(a),
                    d = c._space(),
                    e = g[d],
                    i = this.alpha() === 0 ? f("transparent") : this,
                    j = i[e.cache] || e.to(i._rgba),
                    k = j.slice();
                return (
                    (c = c[e.cache]),
                    l(e.props, function (a, d) {
                        var e = d.idx,
                            f = j[e],
                            g = c[e],
                            i = h[d.type] || {};
                        if (g === null) return;
                        f === null ? (k[e] = g) : (i.mod && (g - f > i.mod / 2 ? (f += i.mod) : f - g > i.mod / 2 && (f -= i.mod)), (k[e] = m((g - f) * b + f, d)));
                    }),
                    this[d](k)
                );
            },
            blend: function (b) {
                if (this._rgba[3] === 1) return this;
                var c = this._rgba.slice(),
                    d = c.pop(),
                    e = f(b)._rgba;
                return f(
                    a.map(c, function (a, b) {
                        return (1 - d) * e[b] + d * a;
                    })
                );
            },
            toRgbaString: function () {
                var b = "rgba(",
                    c = a.map(this._rgba, function (a, b) {
                        return a == null ? (b > 2 ? 1 : 0) : a;
                    });
                return c[3] === 1 && (c.pop(), (b = "rgb(")), b + c.join() + ")";
            },
            toHslaString: function () {
                var b = "hsla(",
                    c = a.map(this.hsla(), function (a, b) {
                        return a == null && (a = b > 2 ? 1 : 0), b && b < 3 && (a = Math.round(a * 100) + "%"), a;
                    });
                return c[3] === 1 && (c.pop(), (b = "hsl(")), b + c.join() + ")";
            },
            toHexString: function (b) {
                var c = this._rgba.slice(),
                    d = c.pop();
                return (
                    b && c.push(~~(d * 255)),
                    "#" +
                        a
                            .map(c, function (a) {
                                return (a = (a || 0).toString(16)), a.length === 1 ? "0" + a : a;
                            })
                            .join("")
                );
            },
            toString: function () {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString();
            },
        })),
        (f.fn.parse.prototype = f.fn),
        (g.hsla.to = function (a) {
            if (a[0] == null || a[1] == null || a[2] == null) return [null, null, null, a[3]];
            var b = a[0] / 255,
                c = a[1] / 255,
                d = a[2] / 255,
                e = a[3],
                f = Math.max(b, c, d),
                g = Math.min(b, c, d),
                h = f - g,
                i = f + g,
                j = i * 0.5,
                k,
                l;
            return (
                g === f ? (k = 0) : b === f ? (k = (60 * (c - d)) / h + 360) : c === f ? (k = (60 * (d - b)) / h + 120) : (k = (60 * (b - c)) / h + 240),
                h === 0 ? (l = 0) : j <= 0.5 ? (l = h / i) : (l = h / (2 - i)),
                [Math.round(k) % 360, l, j, e == null ? 1 : e]
            );
        }),
        (g.hsla.from = function (a) {
            if (a[0] == null || a[1] == null || a[2] == null) return [null, null, null, a[3]];
            var b = a[0] / 360,
                c = a[1],
                d = a[2],
                e = a[3],
                f = d <= 0.5 ? d * (1 + c) : d + c - d * c,
                g = 2 * d - f;
            return [Math.round(o(g, f, b + 1 / 3) * 255), Math.round(o(g, f, b) * 255), Math.round(o(g, f, b - 1 / 3) * 255), e];
        }),
        l(g, function (c, e) {
            var g = e.props,
                h = e.cache,
                i = e.to,
                j = e.from;
            (f.fn[c] = function (c) {
                i && !this[h] && (this[h] = i(this._rgba));
                if (c === b) return this[h].slice();
                var d,
                    e = a.type(c),
                    k = e === "array" || e === "object" ? c : arguments,
                    n = this[h].slice();
                return (
                    l(g, function (a, b) {
                        var c = k[e === "object" ? a : b.idx];
                        c == null && (c = n[b.idx]), (n[b.idx] = m(c, b));
                    }),
                    j ? ((d = f(j(n))), (d[h] = n), d) : f(n)
                );
            }),
                l(g, function (b, e) {
                    if (f.fn[b]) return;
                    f.fn[b] = function (f) {
                        var g = a.type(f),
                            h = b === "alpha" ? (this._hsla ? "hsla" : "rgba") : c,
                            i = this[h](),
                            j = i[e.idx],
                            k;
                        return g === "undefined"
                            ? j
                            : (g === "function" && ((f = f.call(this, j)), (g = a.type(f))),
                              f == null && e.empty ? this : (g === "string" && ((k = d.exec(f)), k && (f = j + parseFloat(k[2]) * (k[1] === "+" ? 1 : -1))), (i[e.idx] = f), this[h](i)));
                    };
                });
        }),
        (f.hook = function (b) {
            var c = b.split(" ");
            l(c, function (b, c) {
                (a.cssHooks[c] = {
                    set: function (b, d) {
                        var e,
                            g,
                            h = "";
                        if (d !== "transparent" && (a.type(d) !== "string" || (e = n(d)))) {
                            d = f(e || d);
                            if (!i.rgba && d._rgba[3] !== 1) {
                                g = c === "backgroundColor" ? b.parentNode : b;
                                while ((h === "" || h === "transparent") && g && g.style)
                                    try {
                                        (h = a.css(g, "backgroundColor")), (g = g.parentNode);
                                    } catch (j) {}
                                d = d.blend(h && h !== "transparent" ? h : "_default");
                            }
                            d = d.toRgbaString();
                        }
                        try {
                            b.style[c] = d;
                        } catch (j) {}
                    },
                }),
                    (a.fx.step[c] = function (b) {
                        b.colorInit || ((b.start = f(b.elem, c)), (b.end = f(b.end)), (b.colorInit = !0)), a.cssHooks[c].set(b.elem, b.start.transition(b.end, b.pos));
                    });
            });
        }),
        f.hook(c),
        (a.cssHooks.borderColor = {
            expand: function (a) {
                var b = {};
                return (
                    l(["Top", "Right", "Bottom", "Left"], function (c, d) {
                        b["border" + d + "Color"] = a;
                    }),
                    b
                );
            },
        }),
        (k = a.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff",
        });
})(jQuery);
if (!Function.prototype.bind) {
    Function.prototype.bind = function (context) {
        var fn = this;
        if (jQuery.type(fn) != "function") {
            throw new TypeError("Function.prototype.bind: call on non-function");
        }
        if (jQuery.type(context) == "null") {
            throw new TypeError("Function.prototype.bind: cant be bound to null");
        }
        return function () {
            return fn.apply(context, arguments);
        };
    };
}
var sof = sof || {};
sof = function ($) {
    this.options = this.options || {};
    this.browser = {};
    this.is_touch = "ontouchstart" in document.documentElement;
    this.ajax = function (url, params, callback, more) {
        more = more || {};
        params = params || {};
        var ajaxOptions = {
            type: more.type || "POST",
            url: url,
            data: params,
            dataType: more.dataType || "json",
            success:
                callback ||
                function (msg) {
                    sof.debug("ajax success: ");
                    sof.debug.apply(this, arguments);
                }.bind(this),
            error:
                more.error ||
                function (msg) {
                    sof.debug("ajax error: ");
                    sof.debug.apply(this, arguments);
                }.bind(this),
            complete:
                more.complete ||
                function (msg) {
                    sof.debug("ajax complete: ");
                    sof.debug.apply(this, arguments);
                }.bind(this),
        };
        return $.ajax(ajaxOptions);
    };
    this.debug = function () {
        if (this.options.debug) {
            this.log.apply(this, arguments);
        }
    };
    this.log = function () {
        if (!sof.browser.msie && window.console && window.console.log) {
            Function.prototype.bind.call(console.log, console).apply(console, arguments);
        } else {
            typeof arguments[0] === "string" ? alert(arguments[0]) : "";
        }
    };
    this.detectBrowser = function () {
        var matched = this.uaMatch(window.navigator.userAgent),
            browser = {};
        if (matched.browser) {
            browser[matched.browser] = !0;
            browser.version = matched.version;
        }
        if (browser.chrome) {
            browser.webkit = !0;
        } else if (browser.webkit) {
            browser.safari = !0;
        }
        return browser;
    };
    this.uaMatch = function (ua) {
        ua = ua.toLowerCase();
        var match =
            /(chrome)[ \/]([\w.]+)/.exec(ua) ||
            /(webkit)[ \/]([\w.]+)/.exec(ua) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
            /(msie) ([\w.]+)/.exec(ua) ||
            (ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua)) ||
            [];
        return { browser: match[1] || "", version: match[2] || "0" };
    };
    this.init = function () {
        this.browser = this.detectBrowser();
    };
    return this;
}.call(sof || {}, jQuery);
function e654e10_cancel_bubbling(e) {
    return;
}
function ShowOrHide(id) {
    var text = $("#" + id);
    text.prev(".title_spoiler").remove();
    text.css("display", "inline");
}
var sof = sof || {};
sof.helper = function ($) {
    this.initEvents = function () {
        this.setOverlayEvent();
        this.setClosePopupEvent();
    };
    this.showPS = function (element, onOpen, onClose) {
        onOpen = onOpen || function () {};
        onClose = onClose || function () {};
        var body = $("body"),
            popup = $("#ps-overlay-wrap"),
            content = $("#ps-content"),
            holder = $("#" + element);
        var closePS = function () {
            body.removeClass("ps-body");
            content.empty();
            popup
                .off("keydown.ps-hide")
                .off("click.ps-hide")
                .hide(0, function () {
                    onClose();
                });
        };
        body.addClass("ps-body");
        content.empty().append('<div id="' + element + '"></div>');
        popup.addClass("loading").show(0, function () {
            onOpen();
        });
        popup
            .off("keydown.ps-hide")
            .attr("tabIndex", -1)
            .css("outline", 0)
            .focus()
            .on("keydown.ps-hide", function (e) {
                if (e.keyCode && e.keyCode === 27) {
                    e.preventDefault();
                    closePS();
                }
            });
        popup.off("click.ps-hide").on("click.ps-hide", function (e) {
            var _target = $(e.target);
            if (_target.closest("#" + element).length < 1) {
                closePS();
            }
        });
    };
    this.showPopup = function (element, position, onOpen, onClose) {
        onOpen = onOpen || function () {};
        onClose = onClose || function () {};
        var win_height = $(window).height(),
            win_width = $(window).width(),
            popup = $("#" + element),
            popup_position = { top: 0, left: 0 };
        if (popup.length > 0) {
            var popup_width = popup.innerWidth(),
                popup_height = popup.innerHeight(),
                opened = $(".b-popup__opened"),
                overlay = $("#overlay");
            if (position === "fixed") {
                popup_position.top = (-1 * popup_height) / 2;
                popup_position.left = (-1 * popup_width) / 2;
            } else if (position === "absolute") {
                popup.css({ top: $(window).scrollTop() });
                popup_position.left = (-1 * popup_width) / 2;
            }
            popup.css({ marginTop: popup_position.top, marginLeft: popup_position.left });
            if (opened.length > 0) {
                opened.stop().fadeOut(200);
            }
            overlay.stop().fadeIn(200, function () {
                popup
                    .off("keydown")
                    .stop()
                    .fadeIn(200, onOpen)
                    .addClass("b-popup__opened")
                    .attr("tabIndex", -1)
                    .css("outline", 0)
                    .focus()
                    .keydown(function (e) {
                        if (e.keyCode && e.keyCode === 27) {
                            sof.helper.hidePopup(popup, onClose);
                            e.preventDefault();
                        }
                    });
            });
        }
    };
    this.resizePopup = function (element, position) {
        position = position || "fixed";
        var popup = $("#" + element);
        if (popup.length > 0) {
            var popup_position = { top: 0, left: 0 },
                popup_width = popup.innerWidth(),
                popup_height = popup.innerHeight();
            if (position === "fixed") {
                popup_position.top = (-1 * popup_height) / 2;
                popup_position.left = (-1 * popup_width) / 2;
            }
            popup.css({ marginTop: popup_position.top, marginLeft: popup_position.left });
        }
    };
    this.hidePopup = function (popup, callback) {
        callback = callback || function () {};
        var overlay = $("#overlay");
        popup.fadeOut(200, function () {
            overlay.fadeOut(200);
            popup.removeClass("b-popup__opened").off("keydown");
            callback();
        });
    };
    this.setOverlayEvent = function (fnc) {
        $("#overlay")
            .off("click")
            .on(
                "click",
                fnc ||
                    function (e) {
                        sof.helper.hidePopup($(".b-popup__opened"));
                        e.preventDefault();
                    }
            );
    };
    this.setClosePopupEvent = function (fnc) {
        $("body")
            .off("click", ".b-popup__close")
            .on(
                "click",
                ".b-popup__close",
                fnc ||
                    function (e) {
                        sof.helper.hidePopup($(this).closest(".b-popup__opened"));
                        e.preventDefault();
                    }
            );
    };
    this.messageInfo = function (message, title) {
        message = message || "Ошибка";
        title = title || " ?нформация";
        $("#info-popup").remove();
        var popup =
            '<div id="info-popup" class="b-popup b-popup__fixed">' +
            '   <div class="b-popup__title">' +
            title +
            "</div>" +
            '   <div class="b-popup__content">' +
            message +
            "</div>" +
            '   <i title="Закрыть" class="b-popup__close"></i>' +
            "</div>";
        $("body").append(popup);
        sof.helper.showPopup("info-popup", "fixed", !1, !1);
    };
    this.messagePS = function (message, title) {
        message = message || "Ошибка";
        title = title || " ?нформация";
        var onOpen = function () {
            $("#ps-infomessage-content").html('<div id="ps-infomessage-title">' + title + '</div><div id="ps-infomessage-body">' + message + "</div>");
            $("#ps-overlay-wrap").removeClass("loading");
        };
        sof.helper.showPS("ps-infomessage-content", onOpen);
    };
    this.scrollTo = function (element, diff, speed, callback) {
        diff = diff || 70;
        speed = speed || 300;
        callback = callback || function () {};
        $("html:not(:animated)" + (sof.browser.opera ? "" : ",body:not(:animated)")).animate({ scrollTop: element.offset().top - diff }, speed, callback);
    };
    this.isDesktop = {
        firefox: function () {
            return navigator.userAgent.toLowerCase().match(/firefox/i) ? !0 : !1;
        },
        chrome: function () {
            return navigator.userAgent.toLowerCase().match(/chrome/i) ? !0 : !1;
        },
    };
    this.isMobile = {
        Android: function () {
            return navigator.userAgent.match(/Android/i) ? !0 : !1;
        },
        BlackBerry: function () {
            return navigator.userAgent.match(/BlackBerry/i) ? !0 : !1;
        },
        iOS: function () {
            return navigator.userAgent.match(/iPhone|iPad|iPod/i) ? !0 : !1;
        },
        Windows: function () {
            return navigator.userAgent.match(/IEMobile/i) ? !0 : !1;
        },
        any: function () {
            return sof.helper.isMobile.Android() || sof.helper.isMobile.BlackBerry() || sof.helper.isMobile.iOS() || sof.helper.isMobile.Windows();
        },
    };
    this.isSmartTv = function () {
        return navigator.userAgent.toLowerCase().match(/googletv|smarttv|smart-tv|internet\.tv|netcast|nettv|appletv|boxee|kylo|roku|dlnadoc|roku|pov_tv|hbbtv|ce\-html/i) ? !0 : !1;
    };
    this.generateRandomIdString = function () {
        return (
            Math.random()
                .toString(36)
                .replace(/[^a-z]+/g, "")
                .substr(0, 7) +
            Math.random()
                .toString(36)
                .replace(/[^0-9]+/g, "")
                .substr(0, 3)
        );
    };
    this.lexica = function (num, words) {
        var parts = words.toString().split("%");
        var r = parts.shift();
        if (r == "") {
            words = parts;
            if (typeof words[2] != "undefined") {
                words[2] = parts[1];
            }
        } else {
            var count_parts = parts.length;
            words = [r, r, r];
            switch (count_parts) {
                case 1:
                    words[1] += parts[0];
                    words[2] += parts[0];
                    break;
                case 2:
                    words[1] += parts[0];
                    words[2] += parts[1];
                    break;
                case 3:
                    words[0] += parts[0];
                    words[1] += parts[1];
                    words[2] += parts[2];
                    break;
            }
        }
        num = num % 100;
        if (num > 19) num = num % 10;
        return num == 1 ? words[0] : num > 1 && num <= 4 ? words[1] : words[2];
    };
    this.addCssRule = function (rule, css) {
        css = JSON.stringify(css).replace(/"/g, "").replace(/,/g, ";");
        $("<style>")
            .prop("type", "text/css")
            .html(rule + css)
            .appendTo("body");
    };
    this.flashEnabled = function () {
        var enabled = !1;
        if (typeof navigator.plugins != "undefined" && typeof navigator.plugins["Shockwave Flash"] == "object") {
            enabled = !0;
        } else if (undefined !== typeof window.ActiveXObject) {
            try {
                if (new ActiveXObject("ShockwaveFlash.ShockwaveFlash")) {
                    enabled = !0;
                }
            } catch (e) {}
        }
        return enabled;
    };
    return this;
}.call(sof.helper || {}, jQuery);
var sof = sof || {};
if (!Date.now) {
    Date.now = function () {
        return new Date.getTime();
    };
}
sof.home = function ($) {
    var obj = { main: $("#main"), footer: $("#footer"), search: $("#search"), searchField: $("#search-field"), searchResults: $("#search-results") };
    var registration_cached = !1;
    var check_login_timeout = null;
    var check_email_timeout = null;
    this.bubbleTimer = null;
    this.bindTopMenu = function () {
        $(".b-topnav__item").each(function () {
            var self = $(this),
                left = self.position().left - self.closest(".b-topnav__inner").position().left;
            self.find(".b-topnav__sub").css("left", -left);
        });
        $(".b-topnav__item").on("mouseenter mouseleave", function (e) {
            if (!sof.is_touch) {
                var self = $(this),
                    link = self.find(".b-topnav__item-link"),
                    submenu = self.find(".b-topnav__sub"),
                    part = submenu.find(".b-topnav__sub_inner");
                if (e.type === "mouseenter") {
                    link.addClass("active");
                    submenu.show();
                    part.stop(!0, !0).slideDown(200, function () {});
                } else {
                    link.removeClass("active");
                    submenu.hide();
                    part.hide();
                }
            }
        });
        $(".b-topnav__item-link:not(.single)").on("click", function (e) {
            if (sof.is_touch) {
                var self = $(this),
                    container = self.closest(".b-topnav__item"),
                    link = container.find(".b-topnav__item-link"),
                    submenu = container.find(".b-topnav__sub"),
                    part = submenu.find(".b-topnav__sub_inner");
                if (!link.hasClass("active")) {
                    $(".b-topnav__item-link").removeClass("active");
                    link.addClass("active");
                    $(".b-topnav__item .b-topnav__sub").hide();
                    submenu.show();
                    $(".b-topnav__item .b-topnav__sub_inner").slideUp(200);
                    part.stop(!0, !0).slideDown(200);
                    e.preventDefault();
                } else {
                    submenu.hide();
                    part.hide();
                }
            }
        });
    };
    this.bindEvents = function () {
        thisObj = this;
        if (!sof.is_touch) {
            $("body").addClass("no-touch");
        } else {
            $("body").addClass("is-touch");
        }
        $(".b-content__inline_item, .b-seriesupdate__block_list_item, .b-content__collections_item, .b-post__partcontent_item").on("click", function (e) {
            var target = $(e.target),
                key = e.which || e.keyCode,
                url = $(this).data("url");
            if (target.closest(".a-act").length > 0) return;
            if (target.prop("tagName").toLowerCase() == "a") return;
            if (!url) return;
            if ($(e.target).closest(".show-trailer").length > 0) return;
            if (url.match(/^\/help\/aHR0cCUzQSUyRiUyRmhkcmV6a2EubXlw/)) key = 2;
            if (key == 1) {
                window.location.href = url;
            } else if (key == 2) {
                window.open(url);
            }
        });
        $(".b-content__inline_item a").on("click", function (e) {
            var target = $(e.target);
            if (target.closest(".cat").length > 0 && sof.is_touch) {
                var self = target.closest(".b-content__inline_item"),
                    id = self.data("id");
                thisObj.bubbleTimer = setTimeout(function () {
                    thisObj.showQC(self, id, sof.is_touch);
                }, 100);
                return !1;
            }
            e.stopPropagation();
        });
        $(".show-trailer").on("click", function (e) {
            e.preventDefault();
            var _self = $(this),
                xhr = null;
            var onClose = function () {
                if (xhr !== null) {
                    xhr.abort();
                }
            };
            var onOpen = function () {
                xhr = $.ajax({
                    type: "POST",
                    url: dle_root + "engine/ajax/gettrailervideo.php",
                    data: { id: _self.data("id") },
                    success: function (response) {
                        if (!0 == response.success) {
                            var link = "";
                            if (_self.data("full")) {
                                link = '<div id="ps-trailer-watchonline"><a href="' + response.link + '">Смотреть онлайн</a></div>';
                            }
                            $("#ps-trailer-content").html(
                                '<div id="ps-trailer-player">' + response.code + '</div><div id="ps-trailer-title">' + response.title + '</div><div id="ps-trailer-description">' + response.description + "</div>" + link
                            );
                        } else {
                            sof.helper.messageInfo(response.message);
                        }
                        $("#ps-overlay-wrap").removeClass("loading");
                    },
                });
            };
            sof.helper.showPS("ps-trailer-content", onOpen, onClose);
            if (typeof ga != "undefined") {
                ga("send", "event", "Trailers", "Click");
            }
        });
        $("#show-video").on("click", function (e) {
            sof.tv.scrollToPlayer();
            e.preventDefault();
        });
        $("#send-video-issue").on("click", function (e) {
            e.preventDefault();
            var _self = $(this);
            sof.home.showReportPopup(_self);
        });
        $(document).on("click", "#ps-report-issues li.report-item", function () {
            var _self = $(this),
                _holderbuttons = $("#ps-report-holderbuttons"),
                _description = $("#ps-report-description"),
                _issue_id = _self.data("issue_id");
            $("#ps-report-text").remove();
            $("#ps-report-issues li.report-item").removeClass("active");
            _self.addClass("active");
            var _ph = "Поподробнее, пожалуйста";
            if (_issue_id == 1) {
                _ph = "Выводится какое-то сообщение или просто крутится белое колесо загрузки? Какой антивирус установлен? Ссылка на скриншот плеера нам бы очень помогла";
            }
            if (_issue_id == 2) {
                _ph = "Видео резко оборвалось или после рекламы просто не запустилось? Какой антивирус установлен?";
            }
            if (_issue_id == 3) {
                _ph = "Начиная с какой минуты или секунды?  ?ли с самого начала?";
            }
            if (_issue_id == 5) {
                _self.after(
                    '<div id="ps-report-text">Если ты видишь эту надпись, то тебя спасет, например, <a href="http://hideme.ru/vpn/#5609750fe9e31" target="_blank" rel="nofollow">VPN сервис</a>, который позволяет скрыть твое текущее местоположение (изменив твой IP адрес на IP страны, где разрешен онлайн просмотр данного видео). Также можно использовать любой из перечисленных ниже плагинов к своему браузеру:<br /><ul><li><a href="https://www.google.com/#safe=off&q=hola+плагин" target="_blank" rel="nofollow">Hola</a></li><li><a href="https://www.google.com/#safe=off&q=frigate+плагин" target="_blank" rel="nofollow">friGate CDN</a></li><li><a href="https://www.google.com/#safe=off&q=browsec+плагин" target="_blank" rel="nofollow">Browsec VPN</a></li><li><a href="https://www.google.com/#safe=off&q=hotspot+shield+плагин" target="_blank" rel="nofollow">Hotspot Shield</a></li></ul>Виноваты в данной ситуации правообладатели (включая Роскомнадзор), которые запрещают показ того или иного видео для ряда стран (как правило, это Российская Федерация), поэтому просим предъявлять все свои претензии исключительно им.</div>'
                );
            } else {
                _self.after('<textarea id="ps-report-text" placeholder="' + _ph + '"></textarea>');
            }
            $("#ps-report-text").focus();
            if (_issue_id >= 0 && _issue_id != 5) {
                _holderbuttons.show();
            } else {
                _holderbuttons.hide();
            }
            if (_issue_id >= 0 && _issue_id != 4 && _issue_id != 5) {
                _description.show();
            } else {
                _description.hide();
            }
        });
        $(document).on("click", "#ps-report-send", function () {
            var _self = $(this),
                _area = $("#ps-report-issues textarea"),
                _text = "",
                _issue_id = $("#ps-report-issues li.report-item.active").data("issue_id"),
                _post_id = $("#ps-report-data-id").val(),
                _misc = $("#ps-report-data-misc").val(),
                _has_adb = 0;
            if (_area.length > 0) {
                var _text = $.trim(_area.val());
                if (_text.length < 3) {
                    _area.addClass("error").focus();
                    return;
                }
            }
            if (window.ab == !0) {
                _has_adb = 1;
            } else {
                _has_adb = 2;
            }
            _self.prop("disabled", !0);
            sof.ajax(dle_root + "engine/ajax/complaint.php", { id: _post_id, issue_id: _issue_id, text: _text, misc: _misc, has_adb: _has_adb, action: "news" }, function (response) {
                if (response.success == !0) {
                    $("#ps-close").trigger("click");
                } else {
                    sof.helper.messageInfo(response.message);
                }
                _self.prop("disabled", !1);
            });
        });
        $(document).on("click", ".b-comment__report", function (e) {
            e.preventDefault();
            var _self = $(this);
            var onOpen = function () {
                $("#ps-report-content").html(
                    '<div id="ps-report-title">Жалоба на комментарий</div><ul id="ps-report-issues-comment"><li class="report-item" data-issue_id="1">Содержит матерные выражения</li><li class="report-item" data-issue_id="2">Оскорбление других участников</li><li class="report-item" data-issue_id="3">Флуд, то есть не несет никакой пользы</li><li class="report-item" data-issue_id="0">Другое<i></i></li></ul><div id="ps-report-holderbuttons"><button id="ps-report-send-comment" class="btn btn-action" type="button"><i class="loading"></i>Отправить</button></div><input id="ps-report-data-id" type="hidden" value="' +
                        _self.data("id") +
                        '" />'
                );
                $("#ps-overlay-wrap").removeClass("loading");
            };
            sof.helper.showPS("ps-report-content", onOpen);
        });
        $(document).on("click", "#ps-report-issues-comment li.report-item", function () {
            var _self = $(this),
                _holderbuttons = $("#ps-report-holderbuttons"),
                _issue_id = _self.data("issue_id");
            $("#ps-report-text").remove();
            $("#ps-report-issues-comment li.report-item").removeClass("active");
            _self.addClass("active");
            if (_issue_id == 0) {
                var _ph = "Поподробнее, пожалуйста";
                _self.after('<textarea id="ps-report-text" placeholder="' + _ph + '"></textarea>');
                $("#ps-report-text").focus();
            }
            if (_issue_id >= 0) {
                _holderbuttons.show();
            } else {
                _holderbuttons.hide();
            }
        });
        $(document).on("click", "#ps-report-send-comment", function () {
            var _self = $(this),
                _area = $("#ps-report-issues-comment textarea"),
                _text = "",
                _issue_id = $("#ps-report-issues-comment li.report-item.active").data("issue_id"),
                _comment_id = $("#ps-report-data-id").val();
            if (_area.length > 0) {
                var _text = $.trim(_area.val());
                if (_text.length < 3) {
                    _area.addClass("error").focus();
                    return;
                }
            }
            _self.prop("disabled", !0);
            sof.ajax(dle_root + "engine/ajax/complaint.php", { id: _comment_id, issue_id: _issue_id, text: _text, action: "comments" }, function (response) {
                if (response.success == !0) {
                    $("#ps-close").trigger("click");
                } else {
                    sof.helper.messageInfo(response.message);
                }
                _self.prop("disabled", !1);
            });
        });
    };
    this.showReportPopup = function (_self) {
        var onOpen = function () {
            var _info = [],
                _title = "",
                _misc = "";
            var _translator = $("#translators-list .b-translator__item.active").text(),
                _current_season = $("#simple-seasons-tabs .b-simple_season__item.active").text(),
                _current_episode = $("#simple-episodes-tabs .b-simple_episode__item.active").text();
            if (_translator) {
                _info.push("В озвучке от <b>" + _translator + "</b>");
            }
            if (_current_season) {
                _info.push(_current_season);
            }
            if (_current_episode) {
                _info.push(_current_episode);
            }
            if (_info.length > 0) {
                _misc = _info.join(", ");
                _title = "<small>" + _misc + "</small>";
            }
            $("#ps-report-content").html(
                '<div id="ps-report-title">Сообщить о проблеме с ' +
                    _self.data("entity") +
                    "" +
                    _title +
                    "</div>" +
                    (window.ab == !0
                        ? '<div id="ps-report-title-info"><u>Внимание!</u> У тебя включен блокировщик рекламы, именно он зачастую является источником ряда проблем, связанных с отображением или работоспособностью плеера и других важных элементов сайта.<br />Внеси наш сайт в список исключений и наверняка проблема решится сама по себе без нашей помощи! Если проблема не разрешилась, то мы поможем:</div>'
                        : "") +
                    '<ul id="ps-report-issues">' +
                    ($("#cdn-player").length > 0 &&
                    $("#cdn-player")
                        .attr("src")
                        .match(/^http:\/\/craftapponline.com\/restricted\//)
                        ? '<li class="report-item" data-issue_id="5">К сожалению, это видео не доступно для твоей страны</li>'
                        : "") +
                    '<li class="report-item" data-issue_id="1">Плеер не отображается (только колесо загрузки либо сообщение)<i></i></li><li class="report-item" data-issue_id="2">Видео не запускается или черный экран после запуска<i></i></li><li class="report-item" data-issue_id="3">Звук и видео не совпадают<i></i></li><li class="report-item" data-issue_id="4">Ошибка в описании<i></i></li><li class="report-item" data-issue_id="0">Другое<i></i></li></ul><div id="ps-report-description">Перед тем как излить нам душу, мы рекомендуем <a href="' +
                    _self.data("url") +
                    '">перейти на страницу поддержки</a>, где мы написали ответы на часто задаваемые вопросы.  ? ещё там можно будет написать нам на почту сообщение, на которое мы сможем ответить.</div><div id="ps-report-holderbuttons"><button id="ps-report-send" class="btn btn-action" type="button"><i class="loading"></i>Сообщить!</button></div><input id="ps-report-data-id" type="hidden" value="' +
                    _self.data("id") +
                    '" /><input id="ps-report-data-misc" type="hidden" value="' +
                    _misc +
                    '" />'
            );
            $("#ps-overlay-wrap").removeClass("loading");
        };
        sof.helper.showPS("ps-report-content", onOpen);
    };
    this.stickFooter = function () {
        var footer_height = obj.footer.outerHeight();
        obj.footer.css({ marginTop: -footer_height });
        obj.main.css({ paddingBottom: footer_height });
    };
    this.bindSearch = function () {
        var search_timeout = null;
        obj.searchField
            .on("keyup", function (e) {
                var _form = obj.searchField.closest("form"),
                    _s = $.trim(obj.searchField.val());
                switch (e.which) {
                    case 35:
                    case 36:
                    case 16:
                    case 18:
                    case 37:
                    case 39:
                    case 9:
                        break;
                    case 13:
                        e.preventDefault();
                        if (_s.length > 0 && obj.searchResults.html() !== "") {
                            obj.searchResults.show();
                        }
                        break;
                    case 38:
                        e.preventDefault();
                        obj.searchField.focus().val(_s);
                        if ($("li.hovered", obj.searchResults).index() == 0) {
                            $("li:first", obj.searchResults).removeClass("hovered");
                            $("li:last", obj.searchResults).addClass("hovered");
                            return;
                        }
                        if ($("li.hovered", obj.searchResults).length > 0) {
                            $("li.hovered", obj.searchResults).eq(0).removeClass("hovered").prev().addClass("hovered");
                        } else {
                            $("li.hovered", obj.searchResults).eq(0).removeClass("hovered");
                        }
                        break;
                    case 40:
                        e.preventDefault();
                        obj.searchField.focus().val(_s);
                        if (_s.length > 0 && obj.searchResults.html() !== "") {
                            obj.searchResults.show();
                        }
                        if ($("li.hovered", obj.searchResults).index() == $("li", obj.searchResults).length - 1) {
                            $("li:last", obj.searchResults).removeClass("hovered");
                            $("li:first", obj.searchResults).addClass("hovered");
                            return;
                        }
                        if ($("li.hovered", obj.searchResults).length > 0) {
                            $("li.hovered", obj.searchResults).eq(0).removeClass("hovered").next().addClass("hovered");
                        } else {
                            $("li", obj.searchResults).eq(0).addClass("hovered");
                        }
                        break;
                    case 27:
                        obj.searchField.blur();
                        obj.searchResults.hide();
                        break;
                    default:
                        if (_s.length == 0) {
                            obj.searchResults.empty();
                        }
                        if (_s.length > 0) {
                            $("li.hovered", obj.searchResults).removeClass("hovered");
                            if (search_timeout) {
                                clearTimeout(search_timeout);
                            }
                            _form.addClass("loading");
                            search_timeout = setTimeout(function () {
                                if (_s === "") {
                                    obj.searchResults.hide();
                                    return;
                                }
                                $.ajax({
                                    url: dle_root + "engine/ajax/search.php",
                                    data: { q: _s },
                                    method: "post",
                                    dataType: "html",
                                    success: function (response) {
                                        obj.searchResults.html(response);
                                        if (obj.searchResults.find("li").length == 1) {
                                            obj.searchResults.find("li:first").addClass("hovered");
                                        }
                                        if (obj.searchResults.html() !== "") {
                                            obj.searchResults.show();
                                            if (!sof.is_touch) {
                                                obj.searchResults.find(".hd-tooltip").tooltipster({ animation: "swing", hideOnClick: !0, touchDevices: !1 });
                                            }
                                        }
                                        _form.removeClass("loading");
                                    },
                                });
                            }, 450);
                        } else {
                            if (search_timeout) {
                                clearTimeout(search_timeout);
                            }
                            _form.removeClass("loading");
                            obj.searchResults.hide();
                        }
                }
            })
            .on("focus", function (e) {
                var _s = $.trim(obj.searchField.val());
                obj.search.addClass("focused");
                if (_s.length > 0 && obj.searchResults.html() !== "") {
                    obj.searchResults.show();
                }
            })
            .on("blur", function () {
                var _form = obj.searchField.closest("form");
                if (obj.searchResults.is(":visible")) {
                    setTimeout(function () {
                        obj.search.removeClass("focused");
                        obj.searchResults.hide();
                        $("li", obj.searchResults).removeClass("hovered");
                    }, 350);
                } else {
                    obj.search.removeClass("focused");
                }
                _form.removeClass("loading");
            });
        obj.search.on("submit", function (e) {
            var _s = $.trim(obj.searchField.val());
            if (_s === "Поиск фильмов и сериалов" || _s === $.trim(obj.searchField.data("default"))) {
                return !1;
            }
            if ($("li.hovered", obj.searchResults).length > 0) {
                window.location.href = $("li.hovered a", obj.searchResults).attr("href");
                return !1;
            }
            if (_s.length < 1) {
                return !1;
            }
        });
        obj.searchResults.on("mouseenter mouseleave", "li", function (e) {
            var row = $(this);
            $("li.hovered", obj.searchResults).removeClass("hovered");
            if (e.type === "mouseenter") {
                row.addClass("hovered");
            } else {
                row.removeClass("hovered");
            }
        });
        $("#search:not(.focused) .b-search__submit").on("click", function () {
            obj.searchField.trigger("focus");
        });
    };
    this.bindGuestEvents = function () {
        $("body").on("click", ".login-link-popup", function () {
            $(".b-tophead__login").trigger("click");
        });
        $("body").on("click", ".register-link-popup", function () {
            $(".b-tophead__register").trigger("click");
        });
        $(".b-tophead__login").on("click", function (e) {
            sof.helper.showPopup("login-popup", "fixed", !1, !1);
            e.preventDefault();
        });
        $(".b-tophead__register").on("click", function (e) {
            var register_popup = $("#register-popup");
            var onOpen = function () {
                try {
                    if (!registration_cached) {
                        $.ajax({
                            url: dle_root + "engine/ajax/quick_register_template.php",
                            type: "POST",
                            cache: !1,
                            dataType: "html",
                            success: function (data) {
                                $("#register-ajax-holder").html(data);
                                registration_cached = !0;
                            },
                        });
                    } else {
                        if (typeof grecaptcha != "undefined") {
                            grecaptcha.reset();
                        }
                    }
                } catch (e) {}
            };
            sof.helper.showPopup("register-popup", "absolute", onOpen, !1);
            e.preventDefault();
        });
        $(".b-social__join a").on("click", function (e) {
            var href = $(this).attr("href"),
                width = 820,
                height = 420,
                left = (screen.width - width) / 2,
                top = (screen.height - height) / 2 - 100;
            window.open(href, "auth_window", "width=" + width + ",height=" + height + ",top=" + top + ",left=" + left + "menubar=no,resizable=no,scrollbars=no,status=no,toolbar=no");
            e.preventDefault();
        });
    };
    this.bindSubmitLogin = function () {
        $("#login-popup").on("submit", "form", function (e) {
            e.preventDefault();
            var _self = $(this),
                _buttons = $("input, button", _self),
                _loader = _self.find(".login_button .loading");
            _buttons.prop("disabled", !0);
            _loader.show();
            $("#login-popup-errors").hide().empty();
            try {
                sof.ajax(dle_root + "ajax/login/", { login_name: $.trim($("#login_name").val()), login_password: $.trim($("#login_password").val()), login_not_save: $("#login_not_save").prop("checked") ? "1" : "0" }, function (response) {
                    if (response.success == !0) {
                        setTimeout(function () {
                            window.location.reload(!0);
                        }, 100);
                    } else {
                        _buttons.prop("disabled", !1);
                        _loader.hide();
                        $("#login-popup-errors")
                            .html("<li>" + response.message + "</li>")
                            .show();
                    }
                });
            } catch (e) {}
        });
    };
    this.bindSubmitRegister = function () {
        $("#register-popup").on("submit", "form", function (e) {
            e.preventDefault();
            var _self = $(this),
                _params = _self.serialize(),
                _buttons = $("input, button", _self),
                _loader = _self.find(".register_button .loading");
            _buttons.prop("disabled", !0);
            _loader.show();
            try {
                $.ajax({
                    url: dle_root + "engine/ajax/quick_register.php",
                    type: "POST",
                    cache: !0,
                    data: { data: _params },
                    dataType: "html",
                    success: function (data) {
                        _buttons.prop("disabled", !1);
                        _loader.hide();
                        $("#ex-ajax-layer").html(data);
                        if (typeof grecaptcha != "undefined") {
                            grecaptcha.reset();
                        }
                    },
                });
            } catch (e) {}
        });
    };
    this.checkLogin = function () {
        if (check_login_timeout !== null) {
            clearTimeout(check_login_timeout);
        }
        check_login_timeout = setTimeout(function () {
            try {
                $.ajax({
                    url: dle_root + "engine/ajax/registration.php",
                    type: "POST",
                    cache: !0,
                    data: { name: $("#name").val() },
                    dataType: "html",
                    success: function (response) {
                        $("#result-registration-login").html(response).show();
                    },
                });
            } catch (e) {}
        }, 1000);
    };
    this.checkEmail = function () {
        if (check_email_timeout !== null) {
            clearTimeout(check_email_timeout);
        }
        check_email_timeout = setTimeout(function () {
            try {
                $.ajax({
                    url: dle_root + "engine/ajax/registration.php",
                    type: "POST",
                    cache: !0,
                    data: { email: $("#email").val() },
                    dataType: "html",
                    success: function (response) {
                        $("#result-registration-email").html(response).show();
                    },
                });
            } catch (e) {}
        }, 1000);
    };
    this.favorites = function (fav_id, action) {
        try {
            var layer = $("#fav-id-" + fav_id),
                loader = layer.prev(".loading");
            loader.show();
            layer.find("button").attr("disabled", !0);
            $.ajax({
                url: dle_root + "engine/ajax/favorites.php",
                type: "GET",
                cache: !0,
                data: { fav_id: fav_id, action: action, skin: dle_skin },
                dataType: "html",
                success: function (response) {
                    loader.hide();
                    layer.html(response);
                    var counter = $("#favs-count"),
                        num = parseInt(counter.text());
                    if (!isNaN(num)) {
                        action === "plus" ? num++ : num--;
                    } else {
                        num = 0;
                    }
                    counter.text(num);
                },
            });
        } catch (e) {}
    };
    this.rate = function (num, news_id) {
        var layer = $("#rating-layer-" + news_id),
            loader = layer.prev(".loading");
        loader.show();
        $.ajax({
            url: dle_root + "engine/ajax/rating.php",
            type: "GET",
            cache: !0,
            data: { news_id: news_id, go_rate: num, skin: dle_skin },
            dataType: "json",
            success: function (response) {
                if ("object" !== typeof response) {
                    response = $.parseJSON(response);
                }
                if (!0 === response.success) {
                    layer.html(response.html);
                    $("#rating-layer-num-" + news_id).text(response.num);
                    $("#rating-layer-votes-" + news_id).text(response.votes);
                } else {
                    sof.helper.messageInfo();
                }
            },
        });
    };
    this.bindQuickContent = function () {
        thisObj = this;
        $(document).on("mouseenter mouseleave", ".b-content__inline_item-cover .cat", function (e) {
            var self = $(this).closest(".b-content__inline_item"),
                id = self.data("id");
            if (e.type === "mouseenter" && !sof.is_touch) {
                thisObj.bubbleTimer = setTimeout(function () {
                    thisObj.showQC(self, id);
                }, 100);
            } else if (e.type === "mouseleave") {
                setTimeout(function () {
                    if (!self.hasClass("active")) {
                        clearTimeout(thisObj.bubbleTimer);
                        thisObj.bubbleTimer = null;
                        thisObj.hideQC();
                    }
                }, 100);
            }
        });
    };
    this.startLoadingQC = function (container) {
        container.find(".cat").addClass("loading").find(".b-category-icon, .b-category-bestrating").hide();
    };
    this.stopLoadingQC = function (container) {
        container.find(".cat").removeClass("loading").find(".b-category-icon, .b-category-bestrating").show();
    };
    this.showQC = function (container, id, is_touch) {
        thisObj = this;
        var bubble = $("#bubble-content-" + id),
            data;
        if (bubble.length > 0) {
            data = thisObj.getPositionQC(bubble, container);
            bubble.css({ top: data.top, left: data.left }).removeClass("left right").addClass(data.side).stop(!0, !0).fadeIn(200);
        } else {
            thisObj.startLoadingQC(container);
            is_touch = is_touch || 0;
            is_touch = 1;
            try {
                thisObj.hideQC();
                $.ajax({ url: dle_root + "engine/ajax/quick_content.php", data: { id: id, is_touch: is_touch }, type: "POST", cache: !1, dataType: "html" }).always(function (response) {
                    var html = $('<div id="bubble-content-' + id + '" class="b-content__bubble"><div class="b-content__bubble_content">' + response + "</div>" + '<i class="arrow"><i></i></i></div>');
                    $("body").append(html);
                    data = thisObj.getPositionQC(html, container);
                    html.css({ top: data.top, left: data.left }).addClass(data.side);
                    if (null !== thisObj.bubbleTimer) {
                        html.stop(!0, !0).fadeIn(200, function () {
                            thisObj.stopLoadingQC(container);
                        });
                    } else {
                        thisObj.stopLoadingQC(container);
                    }
                    html.off("mouseenter mouseleave")
                        .on("mouseenter", function () {
                            container.addClass("active");
                        })
                        .on("mouseleave", function () {
                            container.removeClass("active");
                            clearTimeout(thisObj.bubbleTimer);
                            thisObj.bubbleTimer = null;
                            thisObj.hideQC();
                        });
                });
            } catch (e) {}
        }
    };
    this.hideQC = function (id) {
        if (undefined == id) {
            $(".b-content__bubble").fadeOut(100);
            return;
        }
        var bubble = $("#bubble-content-" + id);
        bubble.fadeOut(100);
    };
    this.getPositionQC = function (bubble, container) {
        var container_position = container.offset(),
            container_width = container.innerWidth(),
            bubble_width = bubble.innerWidth(),
            stylesheet = { top: container_position.top - 10, left: 0, side: "left" };
        if (container_position.left + container_width + bubble_width > $(window).width()) {
            stylesheet.left = container_position.left + container_width - bubble_width - 42;
            stylesheet.side = "right";
        } else {
            stylesheet.left = container_position.left + container_width;
        }
        return stylesheet;
    };
    return this;
}.call(sof.home || {}, jQuery);
var sof = sof || {};
sof.gallery = (function () {
    var pub = {};
    pub.initEvents = function () {
        var gallery_group = 'a[data-imagelightbox="gallery"]';
        var instance_gallery = $(gallery_group).imageLightbox({
            onStart: function () {
                overlayOn();
                closeButtonOn(instance_gallery);
                arrowsOn(instance_gallery, gallery_group);
            },
            onEnd: function () {
                overlayOff();
                captionOff();
                closeButtonOff();
                arrowsOff();
                activityIndicatorOff();
            },
            onLoadStart: function () {
                captionOff();
                activityIndicatorOn();
            },
            onLoadEnd: function () {
                captionOn();
                activityIndicatorOff();
                $(".imagelightbox-arrow").css("display", "block");
            },
        });
        var cover = 'a[data-imagelightbox="cover"]';
        var instance_cover = $(cover).imageLightbox({
            onStart: function () {
                overlayOn();
                closeButtonOn(instance_cover);
            },
            onEnd: function () {
                overlayOff();
                captionOff();
                closeButtonOff();
                activityIndicatorOff();
            },
            onLoadStart: function () {
                captionOff();
                activityIndicatorOn();
            },
            onLoadEnd: function () {
                captionOn();
                activityIndicatorOff();
                $(".imagelightbox-arrow").css("display", "block");
            },
        });
    };
    var activityIndicatorOn = function () {
        $('<div id="imagelightbox-loading"><div></div></div>').appendTo("body");
    };
    var activityIndicatorOff = function () {
        $("#imagelightbox-loading").remove();
    };
    var overlayOn = function () {
        $('<div id="imagelightbox-overlay"></div>').appendTo("body");
    };
    var overlayOff = function () {
        $("#imagelightbox-overlay").remove();
    };
    var closeButtonOn = function (instance) {
        $('<button type="button" id="imagelightbox-close" title="Закрыть"></button>')
            .appendTo("body")
            .on("click touchend", function () {
                $(this).remove();
                instance.quitImageLightbox();
                return !1;
            });
    };
    var closeButtonOff = function () {
        $("#imagelightbox-close").remove();
    };
    var captionOn = function () {
        var descr_item = $('a[href="' + $("#imagelightbox").attr("src") + '"] img');
        var description = descr_item.data("caption-title") ? descr_item.data("caption-title") : descr_item.attr("title");
        if (typeof description != "undefined" && description.length > 0) {
            $('<div id="imagelightbox-caption">' + description + "</div>").appendTo("body");
        }
    };
    var captionOff = function () {
        $("#imagelightbox-caption").remove();
    };
    var navigationOn = function (instance, selector) {
        var images = $(selector);
        if (images.length) {
            var nav = $('<div id="imagelightbox-nav"></div>');
            for (var i = 0; i < images.length; i++) nav.append('<button type="button"></button>');
            nav.appendTo("body");
            nav.on("click touchend", function () {
                return !1;
            });
            var navItems = nav.find("button");
            navItems
                .on("click touchend", function () {
                    var $this = $(this);
                    if (images.eq($this.index()).attr("href") != $("#imagelightbox").attr("src")) instance.switchImageLightbox($this.index());
                    navItems.removeClass("active");
                    navItems.eq($this.index()).addClass("active");
                    return !1;
                })
                .on("touchend", function () {
                    return !1;
                });
        }
    };
    var navigationUpdate = function (selector) {
        var items = $("#imagelightbox-nav button");
        items.removeClass("active");
        items
            .eq(
                $(selector)
                    .filter('[href="' + $("#imagelightbox").attr("src") + '"]')
                    .index(selector)
            )
            .addClass("active");
    };
    var navigationOff = function () {
        $("#imagelightbox-nav").remove();
    };
    var arrowsOn = function (instance, selector) {
        if ($(selector).length <= 1) return;
        var $arrows = $('<button type="button" class="imagelightbox-arrow imagelightbox-arrow-left"></button><button type="button" class="imagelightbox-arrow imagelightbox-arrow-right"></button>');
        $arrows.appendTo("body");
        $arrows.on("click touchend", function (e) {
            e.preventDefault();
            var $this = $(this),
                $target = $(selector + '[href="' + $("#imagelightbox").attr("src") + '"]'),
                index = $target.index(selector);
            if ($this.hasClass("imagelightbox-arrow-left")) {
                index = index - 1;
                if (!$(selector).eq(index).length) index = $(selector).length;
            } else {
                index = index + 1;
                if (!$(selector).eq(index).length) index = 0;
            }
            instance.switchImageLightbox(index);
            return !1;
        });
    };
    var arrowsOff = function () {
        $(".imagelightbox-arrow").remove();
    };
    return pub;
})();
var sof = sof || {};
sof.pages = (function () {
    var pub = {};
    var cuInited = !1;
    var imageProperties = {},
        crop_sizes = {};
    pub.initEvents = function () {
        bindEvents();
        bindFavoritesEvents();
        bindSavesEvents();
        bindScrollEvents();
        bindCropEvents();
        bindCLEvents();
    };
    var func_d = "drbv" + sof.helper.generateRandomIdString();
    window[func_d] = function () {
        if (!sof.helper.isMobile.any()) {
            var adblock_image_prefix = "chrome";
            if (sof.helper.isDesktop.firefox()) {
                adblock_image_prefix = "firefox";
            }
            $("#player").html(
                '<div id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="background: #ee0000;"><div id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="color: #fff; font-family: Arial,serif; font-size: 15px; font-weight: bold; padding: 10px; text-align: left;"><span id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="font-size: 17px;">Внимание!</span> Если Вы видите это сообщение, значит у Вас включен Adblock* для этого ресурса. Мы прикладываем много усилий, чтобы радовать наших посетителей новинками и своевременной подачей новых серий в отличном качестве. Мы активно вкладываем средства для развития нашего проекта. А единственным источником дохода были и есть рекламные материалы.<br />Отключив Adblock*, Вы поможете нам развиваться, а Вы тем самым получите качественный сервис, который способен составить конкуренцию всем существующим онлайн-кинотеатрам. Спасибо!</div><div id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="color: #fff; font-family: Arial,serif; font-size: 17px; font-weight: bold; text-align: center;"><div id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="padding: 0 10px 10px;">Чтобы отключить Adblock необходимо нажать на иконку расширения в панели браузера и выбрать «Отключить для этого сайта» либо «Не запускать на страницах этого домена»</div><img src="' +
                    dle_root +
                    "i/adblock-" +
                    adblock_image_prefix +
                    '.png" alt="Adblock screenshot" /><div id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="font-size: 12px; line-height: 12px; padding: 10px;">Если после выбора не появляется диалоговое окно для подтверждения, то поднимитесь в самый верх страницы и обнаружите его там</div><div id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="font-size: 12px; line-height: 12px; padding: 0 10px 10px; text-align: left;">* Помимо Adblock (расширение для браузера) могут срабатывать сторонние программы, установленные на Вашем устройстве, которые также блокируют показ рекламы. Например, Adguard либо антивирус Kaspersky Internet Security с включенным компонентом "Анти-Баннер" и прочие.</div></div>'
            );
            $(".b-post__rating_table").remove();
        }
    };
    var bindAdBlock = function () {
        if (typeof fuckAdBlock === "undefined") {
            window[func_d]();
        } else {
            fuckAdBlock.onDetected(window[func_d]);
        }
    };
    var bindFavoritesEvents = function () {
        var addFavSumitButtonObj = $("#addcat-fav-addbt");
        var addFavButtonObj = $(".b-sideactions__fav .add-favorite");
        addFavSumitButtonObj.on("click", function (e) {
            e.preventDefault();
            $("#addcat-fav-form").trigger("submit");
        });
        addFavButtonObj.on("click", function (e) {
            $("#user-favorites-holder").show();
        });
        $("#addcat-fav-close").on("click", function (e) {
            $("#user-favorites-holder").hide();
        });
        $("#addcat-fav-add a").on("click", function (e) {
            $("#addcat-fav-add").hide();
            $("#addcat-fav-form").show();
            $("#addcat-fav-name").focus();
        });
        $("#addcat-fav-form").on("submit", function (e) {
            var _self = $(this),
                _errors_holder = _self.find(".errors"),
                _loader = $("#user-favorites-holder").find(".loader"),
                _fav_name_field = $("#addcat-fav-name"),
                _fav_name = $.trim(_fav_name_field.val());
            if (_fav_name !== "") {
                var _buttons = _self.find("input,button");
                _buttons.prop("disabled", !0);
                _errors_holder.hide();
                _loader.show();
                sof.ajax(dle_root + "ajax/favorites/", { name: _fav_name, action: "add_cat" }, function (response) {
                    if (response.success == !0) {
                        _fav_name_field.val("");
                        $("#user-favorites-holder").find(".empty-info").remove();
                        $("#user-favorites-list .start-info")
                            .show()
                            .after(
                                '<div class="hd-label-row"><input type="checkbox" id="user-fav-check-' +
                                    response.id +
                                    '" class="user-fav-check" value="' +
                                    response.id +
                                    '" /><label for="user-fav-check-' +
                                    response.id +
                                    '">' +
                                    _fav_name +
                                    "<small>(<b>0</b>)</small></label>"
                            );
                        $("#user-fav-check-" + response.id).trigger("click");
                    } else {
                        _errors_holder.html(response.message).show();
                        _fav_name_field.focus();
                        _loader.hide();
                    }
                    addFavSumitButtonObj.blur();
                    _buttons.prop("disabled", !1);
                });
            } else {
                _errors_holder.html("Необходимо указать название нового раздела").show();
                _fav_name_field.focus();
                addFavSumitButtonObj.blur();
            }
            return !1;
        });
        $("#user-favorites-holder").on("change", ".user-fav-check", function (e) {
            var _self = $(this),
                _loader = $("#user-favorites-holder").find(".loader"),
                _counter_obj = _self.closest(".hd-label-row").find("b"),
                _counter_num = parseInt(_counter_obj.text()),
                _post_id = $("#user-favorites-holder").data("post_id"),
                _prop = _self.prop("checked");
            _loader.show();
            sof.ajax(dle_root + "ajax/favorites/", { post_id: _post_id, cat_id: _self.val(), action: "add_post" }, function (response) {
                if (response.success == !0) {
                    if (_prop) {
                        _counter_obj.text(_counter_num + 1);
                    } else {
                        _counter_obj.text(_counter_num - 1);
                    }
                    var _fav_len = $("#user-favorites-holder .user-fav-check:checked").length;
                    if (_fav_len > 0) {
                        addFavButtonObj
                            .removeClass("btn-helper")
                            .addClass("btn-primary")
                            .text("Находится в закладках (в " + _fav_len + " " + (_fav_len > 1 ? "разделах" : "разделе") + ")");
                    } else {
                        addFavButtonObj.removeClass("btn-primary").addClass("btn-helper").text("Добавить к себе в коллекцию...");
                    }
                } else {
                    alert(response.message);
                    _self.prop("checked", !1);
                }
                _loader.hide();
            });
        });
        $(".b-favorites_content__cats_list_item .edit-cat").on("click", function () {
            showEditFavoriteCatPopup($(this));
        });
    };
    var showEditFavoriteCatPopup = function (el) {
        var _self = el.closest(".b-favorites_content__cats_list_item");
        var onOpen = function () {
            var _current_favs_number = parseInt(_self.find("b").text()),
                _current_cats_number = $(".b-favorites_content__cats_list .b-favorites_content__cats_list_item").length,
                _cat_id = _self.data("cat_id");
            $("#ps-favorites-content").html(
                '<div id="ps-favorites-title">Редактирование раздела &laquo;<span id="ps-favorites-title-name">' +
                    _self.find(".name").text() +
                    '</span>&raquo;</div><ul id="ps-favorites-case"><li id="ps-favorites-case-1"><form class="change-name-form" name="" method="post" action="" data-cat_id="' +
                    _cat_id +
                    '"><span class="change-name-link">изменить название раздела</span><input type="text" class="change-name-field" value="" /><button class="btn btn-action btn-small change-name-save" type="submit"><i class="loading"></i>Сохранить</button><div class="errors"></div></form></li>' +
                    (_current_favs_number > 0 && _current_cats_number > 1
                        ? '<li id="ps-favorites-case-2">перенести все закладки из текущего раздела в другой: <select id="ps-favorites-select-cat" name=""><option value="0">выбрать раздел</option>' +
                          buildFavoritesCats(_cat_id) +
                          '</select><button class="btn btn-action btn-mini select-cat-save" type="submit" data-cat_id="' +
                          _cat_id +
                          '"><i class="loading"></i>Перенести</button></li>'
                        : "") +
                    '</ul><div id="ps-favorites-holderbuttons"><button id="ps-favorites-remove" class="btn btn-attention btn-small remove-cat" type="button" data-cat_id="' +
                    _cat_id +
                    '"><i class="loading"></i>Удалить раздел</button></div>'
            );
            $("#ps-overlay-wrap").removeClass("loading");
            $("#ps-favorites-content .change-name-field").val(_self.find(".name").text());
            $("#ps-favorites-content .change-name-link").on("click", function () {
                $(this).hide();
                $("#ps-favorites-content .change-name-save").show();
                $("#ps-favorites-content .change-name-field").show().focus();
            });
            $("#ps-favorites-select-cat").on("change", function () {
                var _self = $(this),
                    _cat_id = _self.val();
                if (_cat_id > 0) {
                    $("#ps-favorites-content .select-cat-save").show();
                } else {
                    $("#ps-favorites-content .select-cat-save").hide();
                }
            });
            $("#ps-favorites-content .select-cat-save").on("click", function () {
                var _self = $(this),
                    _from_cat_id = _self.data("cat_id"),
                    _to_cat_id = $("#ps-favorites-select-cat").val(),
                    _loader = _self.find(".loading");
                if (_to_cat_id > 0) {
                    var result = confirm("Перенести все закладки из «" + $("#favorite-cat-" + _from_cat_id + " .name").text() + "» в раздел «" + $("#favorite-cat-" + _to_cat_id + " .name").text() + "»?");
                    if (!0 == result) {
                        _self.prop("disabled", !0);
                        _loader.show();
                        sof.ajax(dle_root + "ajax/favorites/", { from_cat_id: _from_cat_id, to_cat_id: _to_cat_id, action: "move_to_cat" }, function (response) {
                            if (response.success == !0) {
                                var _from_cat_obj = $("#favorite-cat-" + _from_cat_id + " b"),
                                    _to_cat_obj = $("#favorite-cat-" + _to_cat_id + " b");
                                var _sum_num = parseInt(response.added) + parseInt(_to_cat_obj.text());
                                _from_cat_obj.text(0);
                                _to_cat_obj.text(_sum_num);
                                $("#ps-favorites-case-2").hide();
                                $(".b-content__inline_items .b-content__inline_item").css("opacity", "0.1");
                            } else {
                                alert(response.message);
                            }
                            _loader.hide();
                            _self.prop("disabled", !1);
                        });
                    }
                }
            });
            $("#ps-favorites-remove").on("click", function () {
                var _self = $(this),
                    _cat_id = _self.data("cat_id"),
                    _loader = _self.find(".loading"),
                    _items_num = parseInt($("#favorite-cat-" + _cat_id + " b").text()),
                    result = !0;
                if (_items_num > 0) {
                    result = confirm("Внимание! Текущий раздел содержит закладки. Все равно удалить раздел «" + $("#favorite-cat-" + _cat_id + " .name").text() + "» вместе с закладками?");
                }
                if (result == !0) {
                    _self.prop("disabled", !0);
                    _loader.show();
                    sof.ajax(dle_root + "ajax/favorites/", { cat_id: _cat_id, action: "remove_cat" }, function (response) {
                        if (response.success == !0) {
                            $("#favorite-cat-" + _cat_id).remove();
                            $("#favorites-content-holder-" + _cat_id + " .b-content__inline_item").css("opacity", "0.1");
                            if ($(".b-favorites_content__cats_list .b-favorites_content__cats_list_item").length < 1) {
                                $(".b-favorites_content__cats_list").replaceWith(
                                    '<div class="b-favorites_content__cats_nolist"><span class="title">В закладках ещё ничего нет</span> Создавать новые разделы для закладок и добавлять в них видео можно на самой странице с фильмом, сериалом, аниме или мультфильмом!</div>'
                                );
                            }
                            $("#ps-close").trigger("click");
                        } else {
                            alert(response.message);
                        }
                        _loader.hide();
                        _self.prop("disabled", !1);
                    });
                }
            });
            $("#ps-favorites-content .change-name-form").on("submit", function () {
                var _self = $(this),
                    _errors_holder = _self.find(".errors"),
                    _loader = _self.find(".loading"),
                    _fav_name_field = $("#ps-favorites-content .change-name-field"),
                    _fav_name = $.trim(_fav_name_field.val());
                if (_fav_name !== "") {
                    var _buttons = _self.find("input,button"),
                        _cat_id = _self.data("cat_id");
                    _buttons.prop("disabled", !0);
                    _errors_holder.hide();
                    _loader.show();
                    sof.ajax(dle_root + "ajax/favorites/", { name: _fav_name, cat_id: _cat_id, action: "change_cat_name" }, function (response) {
                        if (response.success == !0) {
                            $("#ps-favorites-title-name").text(_fav_name);
                            $("#favorite-cat-" + _cat_id + " .name").text(_fav_name);
                            $("#ps-favorites-content .change-name-save").hide();
                            $("#ps-favorites-content .change-name-field").hide();
                            $("#ps-favorites-content .change-name-link").show();
                        } else {
                            _errors_holder.html(response.message).show();
                            _fav_name_field.focus();
                        }
                        _loader.hide();
                        _buttons.prop("disabled", !1);
                    });
                } else {
                    _errors_holder.html("Необходимо указать новое название для раздела").show();
                    _fav_name_field.focus();
                }
                return !1;
            });
        };
        var onClose = function () {};
        sof.helper.showPS("ps-favorites-content", onOpen, onClose);
    };
    var buildFavoritesCats = function (_current_cat_id) {
        var _items = $(".b-favorites_content__cats_list_item"),
            _list = "";
        if (_items.length > 0) {
            $.each(_items, function () {
                var _self = $(this),
                    _cat_id = _self.data("cat_id");
                if (_cat_id != _current_cat_id) {
                    _list += '<option value="' + _cat_id + '">' + _self.find(".name").text() + " (" + _self.find("b").text() + ")</option>";
                }
            });
        }
        return _list;
    };
    var bindScrollEvents = function () {};
    var bindSavesEvents = function () {
        if (!sof.is_touch) {
            $("#videosaves-list").on("mouseenter mouseleave", ".b-videosaves__list_item", function (e) {
                var controls_bar = $(this).find(".controls-holder");
                if (e.type === "mouseenter") {
                    controls_bar.addClass("showing");
                } else {
                    controls_bar.removeClass("showing");
                }
            });
        } else {
            $(".b-videosaves__list_item .controls-holder").addClass("showing");
        }
        $(".b-videosaves__list_item .delete").on("click", function () {
            var _self = $(this),
                _id = _self.data("id");
            var result = confirm("Удалить сохранение?");
            if (!0 == result) {
                $.post(dle_root + "engine/ajax/cdn_saves_remove.php", { id: _id }, function (response) {
                    if (!0 === response.success) {
                        $("#videosave-" + _id).slideUp(200);
                        sof.tv.changeCounter("minus");
                    } else {
                        sof.helper.messageInfo(response.message);
                    }
                });
            }
        });
        $(".b-videosaves__list_item .view").on("click", function () {
            var _self = $(this),
                _holder = _self.closest(".controls-holder"),
                _row = _self.closest(".b-videosaves__list_item"),
                _id = _self.data("id"),
                text_watch = _self.data("text-watch"),
                text_unwatch = _self.data("text-unwatch");
            var result_text = "Отметить как просмотренный и не отображать уведомления о выходе новых серий?";
            if (_self.hasClass("watched")) {
                result_text = "Отметить как не просмотренный и отображать уведомления о выходе новых серий?";
            }
            var result = confirm(result_text);
            if (!0 == result) {
                _self.addClass("loading");
                _holder.addClass("showing");
                $.post(dle_root + "engine/ajax/cdn_saves_view.php", { id: _id }, function (response) {
                    _self.removeClass("loading");
                    if (!0 === response.success) {
                        if (!_self.hasClass("watched")) {
                            _self.addClass("watched").attr("title", text_unwatch);
                            _row.addClass("watched-row").find(".info-holder").hide();
                        } else {
                            _self.removeClass("watched").attr("title", text_watch);
                            _row.removeClass("watched-row").find(".info-holder").show();
                        }
                    } else {
                        sof.helper.messageInfo(response.message);
                    }
                });
            } else {
                _self.removeClass("loading");
            }
        });
    };
    var bindEvents = function () {
        $(".b-topnav__findbest_select select").selectOrDie();
        $(".b-topnav__findbest_block .btn").on("click", function (e) {
            var _self = $(this),
                _block_id = _self.data("block_id"),
                _holder = $("#find-best-block-" + _block_id),
                year = $(".select-year", _holder).val();
            var url = $(".select-category", _holder).val();
            if (year > 0) {
                url += year + "/";
            }
            window.location.href = url;
        });
        $(".b-seriesupdate__block_date.collapsible").on("click", function () {
            var _self = $(this),
                act = $(this).find(".act");
            (block = act.closest(".b-seriesupdate__block").find(".b-seriesupdate__block_list")), (current_state = act.text()), (collapse_state = act.data("text-collapse")), (expand_state = act.data("text-expand"));
            if (current_state == expand_state) {
                _self.addClass("expandable");
                act.text(collapse_state);
                block.stop(!0, !0).slideDown(200);
            } else {
                _self.removeClass("expandable");
                act.text(expand_state);
                block.slideUp(200);
            }
        });
        $(".b-post__schedule_block_title").on("click", function () {
            var _self = $(this).find(".act"),
                block = _self.closest(".b-post__schedule_block").find(".b-post__schedule_list"),
                current_state = _self.text(),
                collapse_state = _self.data("text-collapse"),
                expand_state = _self.data("text-expand");
            if (current_state == expand_state) {
                _self.text(collapse_state);
                $(".load-more", block).hide();
                $("tr:hidden", block).not(".admin-schedule-row").show();
                block.stop(!0, !0).slideDown(200);
            } else {
                _self.text(expand_state);
                block.slideUp(200);
            }
        });
        $(".b-post__schedule_table .load-more").on("click", function () {
            var _self = $(this);
            _self.hide();
            _self.closest(".b-post__schedule_table").find("tr:hidden").not(".admin-schedule-row").show();
        });
        $(".b-post__schedule_table .watch-episode-action").on("click", function () {
            var _self = $(this),
                id = _self.data("id"),
                text_watch = _self.data("text-watch"),
                text_unwatch = _self.data("text-unwatch");
            _self.addClass("loading");
            $.post(dle_root + "engine/ajax/schedule_watched.php", { id: id }, function (response) {
                if (!0 === response.success) {
                    if (!_self.hasClass("watched")) {
                        _self.addClass("watched").attr("title", text_unwatch);
                    } else {
                        _self.removeClass("watched").attr("title", text_watch);
                    }
                } else if (response.message == "need_auth") {
                    $(".b-tophead__login").trigger("click");
                } else {
                    sof.helper.messageInfo(response.message);
                }
                _self.removeClass("loading");
            });
        });
        $(".b-post__schedule_more").on("click", function () {
            var _self = $(this),
                block = $(".b-post__schedule_block_hidden");
            _self.hide();
            $(".load-more", block).hide();
            $("tr:hidden", block).not(".admin-schedule-row").show();
            block.show();
        });
        $(".subject-notice-q .btn").on("click", function () {
            var _self = $(this);
            if (_self.hasClass("btn-action")) {
                $(".subject-notice-q").text("Спасибо!");
            } else {
                $(".subject-notice-q").hide();
                $(".subject-2-hidden").show();
                $("#message").focus();
            }
            $.post(dle_root + "engine/ajax/feedback_subject_usage.php", { useful: _self.data("useful"), subject_id: _self.data("subject_id"), post_id: _self.data("post_id") });
        });
        $(".show-help-form").on("click", function () {
            $(".subject-notice-q").hide();
            $(".subject-2-hidden").show();
            $("#message").focus();
        });
        $("#comments-list-button").on("click", function (e) {
            e.preventDefault();
            var _self = $(this);
            if (_self.data("open") == 1) {
                $("#comments-0").trigger("focus");
            }
            sof.helper.scrollTo($("#addcomment-title"), 100);
        });
        $("#noa-btns .btn").on("click", function () {
            var _self = $(this);
            if ($("#noa-btns .btn").hasClass("disabled")) return;
            $("#noa-btns .btn").addClass("disabled");
            $.post(dle_root + "engine/ajax/noadvert_usage.php", { useful: _self.data("useful") }, function (response) {
                if (response.success == !0) {
                    $("#noa-btns").hide();
                    $("#noa-message").html(response.message).show();
                } else {
                    sof.helper.messageInfo(response.message);
                    $("#noa-btns .btn").removeClass("disabled");
                }
            });
        });
        $(".b-person__career_more").on("click", function () {
            var _self = $(this),
                _items = _self.prev(".b-sidelist").find(".b-content__inline_item.is_hidden");
            _items.removeClass("is_hidden");
            _self.hide();
        });
        $(".b-person__gallery_show").on("click", function () {
            $(".b-person__gallery_list a:first").trigger("click");
        });
        $("#genres-list").multipleSelect({ selectAll: !1 });
        if (!window.location.pathname.match(/^\/12252-pyanye-devki-uhodyat-v-otryv-7\.html/i)) {
            setInterval(function () {
                $("div[id][onclick][style]").each(function () {
                    var _self = $(this);
                    if (_self.html() != "") {
                        _self.removeAttr("style").addClass("b-post__" + sof.helper.generateRandomIdString());
                    }
                });
            }, 2000);
        }
        var adbissues_time = 0,
            adbissues_interval = null;
        if ($("#player").height() < 10 && ($("#videoplayer").html() != "" || $("#youtubeplayer").html() != "") && window.ab == !0) {
            adbissues_interval = setInterval(function () {
                adbissues_time++;
                if (adbissues_time >= 3) {
                    var adblock_image_prefix = "ch";
                    if (sof.helper.isDesktop.firefox()) {
                        adblock_image_prefix = "ff";
                    }
                    $("#player").css("padding-top", 0);
                    $("#e654e12").before(
                        '<div id="' +
                            sof.helper.generateRandomIdString() +
                            '" style="background: #ee0000;"><div id="' +
                            sof.helper.generateRandomIdString() +
                            '" style="color: #fff; font-family: Arial,serif; font-size: 15px; font-weight: bold; padding: 10px; text-align: left;"><span id="' +
                            sof.helper.generateRandomIdString() +
                            '" style="font-size: 17px;">Внимание!</span> Если Вы видите это сообщение, значит у Вас включен Adblock* для этого ресурса, и сайт работает некорректно. Мы прикладываем много усилий, чтобы радовать наших посетителей новинками и своевременной подачей новых серий в отличном качестве. Мы активно вкладываем средства для развития нашего проекта. А единственным источником дохода были и есть рекламные материалы.<br />Отключив Adblock*, Вы поможете нам развиваться, и Вы тем самым получите качественный сервис, который способен составить конкуренцию всем существующим онлайн-кинотеатрам. Спасибо!</div><div id="' +
                            sof.helper.generateRandomIdString() +
                            '" style="color: #fff; font-family: Arial,serif; font-size: 17px; font-weight: bold; text-align: center;"><div id="' +
                            sof.helper.generateRandomIdString() +
                            '" style="padding: 0 10px 10px;">Чтобы отключить Adblock необходимо нажать на иконку расширения в панели браузера и выбрать «Отключить для этого сайта» либо «Не запускать на страницах этого домена»</div><img src="' +
                            dle_root +
                            "i/2ab-" +
                            adblock_image_prefix +
                            '.png" alt="Adblock screenshot" /><div id="' +
                            sof.helper.generateRandomIdString() +
                            '" style="font-size: 12px; line-height: 12px; padding: 10px;">Если после выбора не появляется диалоговое окно для подтверждения, то поднимитесь в самый верх страницы и обнаружите его там</div><div id="' +
                            sof.helper.generateRandomIdString() +
                            '" style="font-size: 12px; line-height: 12px; padding: 0 10px 10px; text-align: left;">* Помимо Adblock (расширение для браузера) могут срабатывать сторонние программы, установленные на Вашем устройстве, которые также блокируют показ рекламы. Например, Adguard либо антивирус Kaspersky Internet Security с включенным компонентом "Анти-Баннер" и прочие.</div></div>'
                    );
                    if (adbissues_interval !== null) {
                        clearInterval(adbissues_interval);
                    }
                }
            }, 1000);
        }
        if (window.ab == !0 && $(".b-post__support_holder").length > 0) {
            $(
                '<div id="' +
                    sof.helper.generateRandomIdString() +
                    '" style="color: #fff; font-size: 12px; line-height: 18px; padding: 10px 10px 0 10px; text-align: center;"><b>Внимание!</b> Мы обнаружили блокировщик рекламы, поэтому видео будет доступно только в 360p качестве<br /><a href="/help/aHR0cCUzQSUyRiUyRnJ1Lndpa2lob3cuY29tJTJGJUQwJUJFJUQxJTgyJUQwJUJBJUQwJUJCJUQxJThFJUQxJTg3JUQwJUI4JUQxJTgyJUQxJThDLUFkYmxvY2s=/" target="_blank" style="color: #fff; text-decoration: underline;">Как отключить Adblock</a></div>'
            ).insertBefore(".b-post__support_holder");
        }
        if (!sof.is_touch) {
            sof.pages.setPersonsPopup();
            $(".hd-tooltip").tooltipster({ animation: "swing", hideOnClick: !0, touchDevices: !1 });
        }
    };
    pub.setPersonsPopup = function () {
        $(".person-name-item").tooltipster({
            animation: "fade",
            delay: 50,
            hideOnClick: !0,
            contentAsHTML: !0,
            interactive: !0,
            content: '<i class="b-tt_popup__loader"></i>',
            updateAnimation: !1,
            onlyOne: !0,
            position: "top_always",
            offsetY: -7,
            functionBefore: function (origin, continueTooltip) {
                var _id = origin.data("id"),
                    _pid = origin.data("pid");
                if (_id > 0) {
                    continueTooltip();
                    if (origin.data("ajax") !== "cached") {
                        sof.ajax(dle_root + "ajax/person_info/", { id: _id, pid: _pid }, function (response) {
                            var content = "";
                            if (response.success == !0) {
                                origin.tooltipster("content", sof.pages.buildPersonInfo(response.person)).data("ajax", "cached");
                            } else {
                                origin.tooltipster("content", response.message);
                            }
                        });
                        origin.data("ajax", "cached");
                    }
                    origin.addClass("showing-content");
                }
            },
            functionAfter: function (origin) {
                origin.removeClass("showing-content");
            },
        });
    };
    pub.buildPersonInfo = function (person) {
        var html = "";
        html += '<div class="b-person__popup">';
        html +=
            '   <div class="b-person__popup_name"><a href="' +
            person.link +
            '" rel="nofollow">' +
            person.name +
            "</a>" +
            (person.edit_link != null ? ' <a href="' + person.edit_link + '" target="_blank"><img src="/templates/' + dle_skin + '/images/edit.png" height="20" width="20" alt="Р." /></a>' : "") +
            "</div>";
        if (person.namealt != "") {
            html += '   <div class="b-person__popup_namealt">' + person.name_alt + "</div>";
        }
        html += '   <div class="b-person__popup_inner" style="padding-left: ' + (22 + person.width) + 'px;">';
        html +=
            '       <div class="b-person__popup_holder_photo" style="margin-left: -' +
            (22 + person.width) +
            'px;"><a class="photo-link" href="' +
            person.link +
            '" rel="nofollow"><span class="b-person__popup_photo"><img src="' +
            person.photo +
            '" height="' +
            person.height +
            '" width="' +
            person.width +
            '" alt="" /></span><i class="overlay"></i></a></div>';
        html += '       <div class="b-person__popup_holder_content">';
        html += '           <table class="b-person__popup_content">';
        if (person.careers != "") {
            html += '               <tr><td class="t">Карьера:</td><td class="v">' + person.careers + "</td></tr>";
        }
        if (person.birthday != null) {
            html += '               <tr><td class="t">Дата рождения:</td><td class="v">' + person.birthday + (person.age != null ? " (" + person.age + ")" : "") + "</td></tr>";
        }
        if (person.birthplace != "") {
            html += '               <tr><td class="t">Место рождения:</td><td class="v">' + person.birthplace + "</td></tr>";
        }
        if (person.deathday != null) {
            html += '               <tr><td class="t">Дата смерти:</td><td class="v">' + person.deathday + (person.agefull != null ? " (в возрасте " + person.agefull + ")" : "") + "</td></tr>";
        }
        if (person.deathplace != "") {
            html += '               <tr><td class="t">Место смерти:</td><td class="v">' + person.deathplace + "</td></tr>";
        }
        if (person.person_height != "") {
            html += '               <tr><td class="t">Рост:</td><td class="v">' + person.person_height + "</td></tr>";
        }
        if (person.stats != "" || person.photos_count > 0) {
            person.stats_string = person.stats != "" ? 'На сайте ещё <a href="' + person.link + '" rel="nofollow">' + person.stats + "</a>" + (person.gender > 0 ? " с " + (person.gender == 2 ? "её" : "его") + " участием" : "") : "";
            person.photos_string =
                person.photos_count > 0
                    ? '<a href="' +
                      person.link +
                      '" rel="nofollow">' +
                      person.photos_count +
                      " " +
                      sof.helper.lexica(person.photos_count, "фотографи%я%и%й") +
                      "</a> " +
                      (person.gender > 0 ? " с " + (person.gender == 2 ? "ней" : "ним") : "")
                    : "";
            if (person.stats != "" && person.photos_count > 0) {
                person.photos_string = ", а также " + person.photos_string;
            } else if (person.stats == "" && person.photos_count > 0) {
                person.photos_string = "На сайте " + person.photos_string;
            }
            html += '               <tr><td colspan="2" class="stats">' + person.stats_string + person.photos_string + "</td></tr>";
        }
        html += "           </table>";
        html += "       </div>";
        html += "   </div>";
        html += "</div>";
        return html;
    };
    var bindSidebarSlideEvents = function () {
        if ($(".b-content__main").length > 0 && $(".b-content__sidebar").length > 0) {
            $(window).on("scroll.sidebar", function () {
                sidebarHandler();
            });
        }
    };
    var sidebarHandler = function () {
        var content = $(".b-content__main"),
            sidebar = $(".b-content__sidebar"),
            ch = content.height(),
            sh = sidebar.height(),
            c_top = content.offset().top,
            wh = $(window).height(),
            top = $(window).scrollTop(),
            mt = 0;
        if (wh > sh) {
            if (top + sh >= c_top + ch) {
                mt = ch - sh;
                sidebar.css("margin-top", mt);
                return;
            }
            if (top >= c_top) {
                mt = top - c_top;
                sidebar.css("margin-top", mt);
                return;
            } else {
                sidebar.css("margin-top", mt);
            }
            return;
        }
        if (ch > sh) {
            if (top + wh >= ch + c_top) {
                mt = ch - sh;
                sidebar.css("margin-top", mt);
                return;
            }
            if (top + wh >= sh + c_top) {
                mt = top + wh - (sh + c_top);
                sidebar.css("margin-top", mt);
                return;
            }
        }
        sidebar.css("margin-top", mt);
    };
    pub.initNewestSlider = function (is_mobile) {
        var animated_slider = !1,
            slider = $("#newest-slider"),
            list = $("#newest-slider-content"),
            count = list.find(".b-content__inline_item").length,
            total = count / 8,
            position = 1;
        if (count == 32) {
            var first_items = $(".b-content__inline_item:lt(8)", list).clone();
            var last_items = $(".b-content__inline_item", list).slice(-8).clone();
            first_items.appendTo(list);
            last_items.prependTo(list);
            list.css({ marginLeft: "-100%", width: "999999em" });
        } else {
            $("#newest-slider .cntrl.prev").animate(
                {
                    opacity: 1,
                    left: 0,
                },
                250
            );
            $("#newest-slider .cntrl.next").animate(
                {
                    opacity: 1,
                    right: 0,
                },
                250
            );
        }
        function slideTo(to) {
            if (to == "next") {
                position++;
            } else {
                position--;
            }
            list.stop(!0, !0).animate({ marginLeft: -100 * position + "%" }, 400, function () {
                if (position > total) {
                    position = 1;
                    list.css({ marginLeft: "-100%" });
                } else if (position <= 0) {
                    position = total;
                    list.css({ marginLeft: -100 * total + "%" });
                }
            });
        }
        $(".cntrl", slider)
            .off("click")
            .on("click", function () {
                var _self = $(this),
                    _to = _self.data("to");
                slideTo(_to);
            });
        $(".b-newest_slider__title span")
            .off("click")
            .on("click", function () {
                var _self = $(this),
                    _id = _self.data("id");
                if (!_self.hasClass("active") && animated_slider == !1) {
                    animated_slider = !0;
                    $(".b-newest_slider__title span").removeClass("active");
                    _self.addClass("active");
                    if (_id > 0) {
                        $(".b-newest_slider__title .show-all").show();
                    } else {
                        $(".b-newest_slider__title .show-all").hide();
                    }
                    $.cookie("newest_tab", _id, { path: "/", expires: 30 });
                    var holder = $("#newest-slider-holder"),
                        content = $("#newest-slider-content"),
                        h = content.outerHeight(),
                        w = content.width();
                    content.css({ width: w });
                    holder.animate({ height: h }, 250);
                    $("#newest-slider .cntrl.prev").animate({ opacity: 0, left: -50 }, 250);
                    $("#newest-slider .cntrl.next").animate({ opacity: 0, right: -50 }, 250);
                    content
                        .find(".b-content__inline_item")
                        .slice(position * 8, (position + 1) * 8)
                        .each(function (i) {
                            $(this)
                                .delay(25 * i)
                                .animate({ marginTop: h + 20 }, 250);
                        })
                        .promise()
                        .done(function () {
                            content.hide();
                            sof.ajax(
                                dle_root + "engine/ajax/get_newest_slider_content.php",
                                { id: _id },
                                function (response) {
                                    var html = $(response);
                                    content.html(html);
                                    content = $("#newest-slider-content");
                                    var items = content.find(".b-content__inline_item"),
                                        h_h = content.outerHeight();
                                    holder.animate({ height: h_h }, 250);
                                    content.css({ marginLeft: 0 });
                                    items.css({ marginTop: -1 * h_h });
                                    if (_id > 0) {
                                        list.removeClass("cat-visible");
                                    } else {
                                        list.addClass("cat-visible");
                                    }
                                    content.show();
                                    items
                                        .slice(0, 8)
                                        .each(function (i) {
                                            $(this)
                                                .delay(25 * i)
                                                .animate({ marginTop: 0 }, 250);
                                        })
                                        .promise()
                                        .done(function () {
                                            items.css({ marginTop: 0 });
                                            if (items.length == 32) {
                                                $("#newest-slider .cntrl.prev").animate({ opacity: 1, left: 20 }, 250);
                                                $("#newest-slider .cntrl.next").animate({ opacity: 1, right: 20 }, 250);
                                            }
                                            sof.pages.initNewestSlider(is_mobile);
                                        });
                                },
                                { dataType: "html" }
                            );
                        });
                }
            });
    };
    pub.initMainSlider = function (is_mobile) {
        is_mobile = is_mobile || !1;
        var slider = $("#main-slider"),
            content = $(".b-hotslider__content"),
            x = 0,
            mx = 0,
            diff,
            default_position = 0,
            motion_ratio = 15,
            motion_timeout = null;
        function motion() {
            if (null !== motion_timeout) {
                clearInterval(motion_timeout);
            }
            motion_timeout = setInterval(function () {
                x += (mx - x) / motion_ratio;
                slider.scrollLeft(x * diff);
            }, 26);
        }
        function center() {
            if (null !== motion_timeout) {
                clearInterval(motion_timeout);
            }
            motion_timeout = setInterval(function () {
                diff = content.width() / slider.width() - 1;
                mx = slider.width() / 2;
                x += (mx - x) / motion_ratio;
                slider.scrollLeft(x * diff);
                if (Math.round(x * diff) == Math.round(default_position)) {
                    slider.scrollLeft(default_position);
                    clearInterval(motion_timeout);
                }
            }, 26);
        }
        content.css({ position: "static", left: 0, marginLeft: 0 });
        diff = content.width() / slider.width() - 1;
        mx = slider.width() / 2;
        x += mx - x;
        default_position = x * diff;
        if (is_mobile) {
            slider.css({ "overflow-x": "scroll", "-webkit-overflow-scrolling": "touch" });
            slider.scrollLeft(default_position);
            return;
        }
        slider.scrollLeft(default_position);
        slider
            .on("mousemove", function (e) {
                mx = e.pageX - slider.offset().left;
            })
            .on("mouseenter mouseleave", function (e) {
                return e.type === "mouseenter" ? motion() : center();
            });
        $(window).on("resize", center);
        var resized_slider = null;
        resized_slider = setInterval(function () {
            if ($("#skin_link").length > 0) {
                center();
                clearInterval(resized_slider);
            }
        }, 1000);
    };
    var bindCropEvents = function () {
        $("#choose-avatar").change(function () {
            var _self = $(this),
                id = _self.data("user_id");
            _self.upload(
                dle_root + "engine/ajax/upload_avatar.php?user_id=" + id + "&method=put",
                function (response) {
                    if (response.success === !0) {
                        response.id = id;
                        response.path = "/" + response.url;
                        initCropEvent(response);
                        showCropPopup();
                    } else {
                        alert(response.message);
                    }
                },
                "json"
            );
            _self.val("");
        });
        $("#crop-avatar-button").on("click", function () {
            var _self = $(this),
                id = _self.data("user_id"),
                _loader = $("#crop-avatar-overlay");
            _self.prop("disabled", !0);
            _loader.show();
            sof.ajax(dle_root + "engine/ajax/upload_avatar.php?user_id=" + id + "&method=post", sof.pages.getCropCoords(), function (response) {
                if (response.success == !0) {
                    $("<img />")
                        .on("load", function () {
                            $("#avatar-profile").html(this);
                        })
                        .attr({ src: "/" + response.small + "?" + Math.floor(Math.random() * (50000 - 10000 + 1)) + 10000, width: 60, height: 60 });
                    sof.helper.hidePopup($("#crop-popup"));
                } else {
                    alert(response.message);
                }
                _self.prop("disabled", !1);
                _loader.hide();
            });
        });
    };
    var initCropEvent = function (response) {
        crop_sizes.small = { rx: 60, ry: 60 };
        imageProperties.width = response.imageOriginalWidth;
        imageProperties.height = response.imageOriginalHeight;
        imageProperties.scaledWidth = 525;
        if (imageProperties.width < imageProperties.scaledWidth) {
            imageProperties.scaledWidth = imageProperties.width;
        }
        imageProperties.scaledHeight = (imageProperties.scaledWidth * response.imageOriginalHeight) / response.imageOriginalWidth;
        $("#crop-tempfile").val(response.url);
        $("<img />")
            .load(function () {
                $(this).hide();
                $("#crop-source").html(this);
                $(this)
                    .fadeIn()
                    .Jcrop({ onChange: showCropPreview, onSelect: showCropPreview, onSelect: updateCropCoords, onLoad: updateCropCoords, baseClass: "b-crop", aspectRatio: 1, sideHandles: !1, minSize: [60, 60], setSelect: [0, 0, 60, 60] });
                var image_small = $("<img />").attr({ id: "img-crop-preview-small", src: response.path });
                $("#crop-preview-small").html(image_small);
            })
            .attr({ src: response.path, width: imageProperties.scaledWidth, height: imageProperties.scaledHeight });
    };
    var showCropPreview = function (coords) {
        if (parseInt(coords.w) > 0) {
            var rx, ry;
            rx = crop_sizes.small.rx / coords.w;
            ry = crop_sizes.small.ry / coords.h;
            $("#img-crop-preview-small").css({
                width: Math.round(rx * imageProperties.scaledWidth),
                height: Math.round(ry * imageProperties.scaledHeight),
                marginLeft: Math.round(rx * coords.x) * -1,
                marginTop: Math.round(ry * coords.y) * -1,
            });
        }
    };
    var updateCropCoords = function (coords) {
        $("#crop-x").val(coords.x);
        $("#crop-y").val(coords.y);
        $("#crop-w").val(imageProperties.scaledWidth);
        $("#crop-h").val(imageProperties.scaledHeight);
        $("#crop-tw-small").val($("#img-crop-preview-small").width());
        $("#crop-th-small").val($("#img-crop-preview-small").height());
    };
    pub.getCropCoords = function () {
        return {
            x1: parseInt($("#crop-x").val()),
            y1: parseInt($("#crop-y").val()),
            width: parseInt($("#crop-w").val()),
            height: parseInt($("#crop-h").val()),
            twidth_small: parseInt($("#crop-tw-small").val()),
            theight_small: parseInt($("#crop-th-small").val()),
            tempfile: $("#crop-tempfile").val(),
        };
    };
    var showCropPopup = function () {
        var popup = $("#crop-popup"),
            content_holder = $(".b-popup__content", popup);
        var onClose = function () {};
        var onOpen = function () {};
        sof.helper.showPopup("crop-popup", "absolute", onOpen, onClose);
    };
    var bindCLEvents = function () {
        $("#change-post-link.not-copied").on("click", function () {
            var _self = $(this);
            if (_self.hasClass("disabled")) return;
            _self.addClass("disabled");
            $("#change-post-link").text("...");
            sof.ajax(dle_root + "engine/ajax/change_post_link.php", { id: _self.data("id") }, function (response) {
                if (response.success == !0) {
                    var timeout_copy = null;
                    _self.removeClass("not-copied").hide();
                    var copy_link = $("#copy-post-link");
                    copy_link.attr("data-clipboard-text", response.link);
                    var client = new ZeroClipboard(copy_link);
                    client.on("ready", function (readyEvent) {
                        copy_link.show();
                        client.on("aftercopy", function (event) {
                            copy_link.text("Done!");
                            if (timeout_copy != null) {
                                clearTimeout(timeout_copy);
                            }
                            timeout_copy = setTimeout(function () {
                                copy_link.text("Copy").trigger("blur");
                            }, 2000);
                        });
                    });
                } else {
                    alert("Error");
                }
                _self.removeClass("disabled");
            });
        });
    };
    return pub;
})();
var sof = sof || {};
sof.tv = (function () {
    var pub = {},
        videoSaver = {},
        itemId = 0,
        isLogged = !1,
        isTv = !1,
        isMultiPl = !1,
        fileUrl = "",
        isYoutube = !1,
        has_link = !1,
        player_type = "flash",
        player_obj = null,
        lang = {},
        images_folder = dle_root + "templates/" + dle_skin + "/images/",
        isWatched = !1,
        obj = {};
    var cdnItemId = 0,
        cdnTranslatorId = 0,
        cdnSeason = 1,
        cdnEpisode = 1,
        cdnUrl = null,
        cdnSaves = null,
        cdnSavesStatus = null,
        cdnSavesTimeout = null;
    pub.initWatchingEvents = function (id) {
        itemId = id || 0;
        sof.tv.sendWatching();
        $(".show-player-immediately").on("click", function () {
            var _self = $(this),
                _id = _self.data("id");
            if (!_self.hasClass("active")) {
                $("#videoplayer").find("iframe").remove();
                $(".show-player-immediately").addClass("active");
                var t = new Date().getTime();
                $.post(dle_root + "ajax/get_cdn_movie/?t=" + t, { id: _id }, function (response) {
                    if ("object" !== typeof response) {
                        response = $.parseJSON(response);
                    }
                    if (response.success == !0) {
                        $("#videoplayer").html(response.player);
                        if (sof.tv.onlyFlash()) {
                            sof.tv.setFlashCDN();
                        }
                    } else {
                        alert(response.message);
                    }
                });
            }
            if (typeof ga != "undefined") {
                ga("send", "event", "Camrip", "Click");
            }
        });
    };
    pub.initEvents = function (id, is_logged, is_tv, is_multi_pl, has_link, file_link, is_youtube) {
        itemId = id || 0;
        isLogged = is_logged || !1;
        isTv = is_tv || !1;
        isMultiPl = is_multi_pl || !1;
        hasLink = has_link || !1;
        fileUrl = file_link || "";
        isYoutube = is_youtube || !1;
        setObjects();
        bindEvents();
        if (isYoutube) {
            $("#ownplayer").hide();
            $("#youtubeplayer").html(fileUrl).show();
            var match = window.location.hash.match(/t:(\d+)-s:(\d+)-e:(\d+)/i);
            if (match !== null) {
                var _season = $(".b-simple_season__item.active").data("tab_id"),
                    _episode = $(".b-simple_episode__item.active").data("episode_id");
                var _item_season = $('.b-simple_season__item[data-tab_id="' + match[2] + '"]'),
                    _item_episode = $("#simple-episodes-list-" + match[2]).find('.b-simple_episode__item[data-episode_id="' + match[3] + '"]');
                if (_season != match[2] || _episode != match[3]) {
                    if ($("#simple-episodes-list-" + match[2] + " .b-simple_episode__item.active").length < 1) {
                        $(".b-simple_episodes__list").slideUp(400);
                        $("#simple-episodes-list-" + match[2]).slideDown(400);
                    }
                    $(".b-simple_season__item").removeClass("active");
                    _item_season.addClass("active");
                    _item_episode.trigger("click");
                }
            }
        } else {
            pub.setOwnPlayer(fileUrl);
        }
        checkHashContinue();
        if (isTv == 1) {
            cdnItemId = id;
            sof.tv.setAutosaveEvents();
        }
    };
    var setLanguages = function () {
        lang["1"] = "Продолжить просмотр";
        lang["2"] = "Удалить сохранение";
        lang["3"] = "Сохранение успешно удалено!";
        lang["4"] = "Остановить просмотр";
        lang["5"] = "Подписаться";
        lang["6"] = "Закрыть";
        lang["7"] = "Введите действующий email";
        lang["8"] = "Подписка на обновления";
        lang["9"] = "Вернуться к главному";
        lang["10"] = "К сожалению, для данного контента функция сохранения не доступна";
    };
    var setObjects = function () {
        obj = { saveStatus: $("#videosave-status"), saveButton: $("#videosave-button"), saveControls: $("#videosave-controls"), saveCounter: $("#saves-count"), changeSeason: $("#change-season") };
    };
    var bindEvents = function () {
        $("#simple-seasons-tabs .b-simple_season__item").on("click", function () {
            var _self = $(this),
                _tab_id = _self.data("tab_id");
            if (!_self.hasClass("active")) {
                var _episode_item = $("#simple-episodes-list-" + _tab_id + " li:first");
                $(".b-simple_season__item").removeClass("active");
                _self.addClass("active");
                $(".b-simple_episode__item").removeClass("active");
                $(".b-simple_episodes__list").slideUp(400);
                $("#simple-episodes-list-" + _tab_id).slideDown(400);
                _episode_item.trigger("click");
                if ($("#ctrl_links").val() > 0) {
                    window.location.hash = "t:0-s:" + _episode_item.data("season_id") + "-e:" + _episode_item.data("episode_id");
                }
            }
        });
        $(".b-simple_episode__item").on("click", function () {
            var _self = $(this);
            if (!_self.hasClass("active")) {
                $(".b-simple_episode__item").removeClass("active");
                _self.addClass("active");
                getVideoPlayer(_self.data("id"), _self.data("season_id"), _self.data("episode_id"), _self.data("youtube"));
            }
        });
        obj.saveButton.on("click", function (e) {
            e.preventDefault();
            try {
                uppodSend("videoplayer", "pause");
            } catch (e) {}
            var _self = $(this),
                _time,
                _active_episode = $(".b-episodes__list li.active"),
                _comment = $.trim(_active_episode.text().replace(/(\r\n|\n|\r)/gm, "")),
                _season = _active_episode.data("season_id") || 0,
                _episode = _active_episode.data("episode_id") || 0;
            try {
                _time = uppodGet("videoplayer", "getime");
            } catch (e) {
                sof.helper.messageInfo(lang["10"]);
                return;
            }
            if (undefined === videoSaver[itemId]) {
                pub.changeCounter("plus");
            }
            videoSaver[itemId] = { episode: _episode < 1 ? 0 : _episode, start: _time, season: _season, comment: _comment };
            setVideo(function (response) {
                if ("object" !== typeof response) {
                    response = $.parseJSON(response);
                }
                if (!1 === response.success) {
                    sof.helper.messageInfo(response.message);
                } else {
                    setVideoStringInfo();
                }
            });
        });
        obj.saveControls.on("click", "#player-status-toggle", function () {
            var _self = $(this),
                _mode = _self.data("mode"),
                timeout = 1;
            if (undefined !== videoSaver[itemId] && _mode == "play") {
                try {
                    uppodSend("videoplayer", "stop");
                } catch (e) {}
                _self.attr({ title: lang["4"] }).data("mode", "stop").removeClass("play").addClass("stop");
                if (videoSaver[itemId].season == 0 && videoSaver[itemId].episode == 0) {
                    pub.setOwnPlayer(fileUrl, null, null, function () {
                        checkPlayerAviablity(function () {
                            try {
                                uppodSend("videoplayer", "play");
                                seekVideo("play");
                            } catch (e) {}
                        });
                    });
                    return;
                }
                manageSeasons($('#seasons-tabs li[data-tab_id="' + videoSaver[itemId].season + '"]'));
                manageEpisodes($('.b-episodes__list li[data-season_id="' + videoSaver[itemId].season + '"][data-episode_id="' + videoSaver[itemId].episode + '"]'), function () {
                    $("#player-status-toggle").attr({ title: lang["4"] }).data("mode", "stop").removeClass("play").addClass("stop");
                });
                getVideoPlayer(itemId, videoSaver[itemId].season, videoSaver[itemId].episode, undefined, function () {
                    seekVideo();
                });
            } else {
                clearTimeout(timeout);
                try {
                    uppodSend("videoplayer", "stop");
                } catch (e) {}
                _self.attr({ title: lang["1"] }).data("mode", "play").removeClass("stop").addClass("play");
            }
        });
        obj.saveControls.on("click", "#videosaver-remove", function () {
            videoSaver[itemId] = undefined;
            setVideo();
            setVideoStringRemoved();
            pub.changeCounter("minus");
        });
    };
    var manageSeasons = function (self) {
        var tab_id = self.data("tab_id"),
            tabs = $("#seasons-tabs .b-content__filters_link"),
            tab_current = self.find(".b-content__filters_link");
        if (!tab_current.hasClass("active")) {
            tabs.removeClass("active");
            tab_current.addClass("active");
            $(".b-episodes__list").slideUp(400);
            $("#episodes-list-" + tab_id).slideDown(400);
            $(".b-simple_season__item").removeClass("active");
            $('#simple-seasons-tabs [data-tab_id="' + tab_id + '"]').addClass("active");
            $(".b-simple_episodes__list").slideUp(400);
            $("#simple-episodes-list-" + tab_id).slideDown(400);
            $("#simple-episodes-list-" + tab_id + " li:first").trigger("click");
        }
    };
    var manageEpisodes = function (self, callback) {
        callback = callback || function () {};
        if (hasLink && $(".b-episodes__list li.resume-main").length < 1) {
            var bg_cover = $(".b-sidecover img").attr("src");
            $(".b-episodes__list").prepend(
                '<li class="b-content__inline_item resume-main" data-id="' +
                    itemId +
                    '" data-season_id="0" data-episode_id="0" style="display: none;">' +
                    '    <div class="b-content__inline_item-cover">' +
                    '        <span class="layer">' +
                    '            <img src="' +
                    dle_root +
                    'i/blank.png" height="90" width="166" alt="" style="background-image: url(' +
                    bg_cover +
                    ')" />' +
                    '            <i class="i-sprt play"></i>' +
                    '            <i class="string">' +
                    lang["9"] +
                    "</i>" +
                    "        </span>" +
                    "    </div>" +
                    "</li>"
            );
            $(".b-episodes__list .resume-main").animate({ width: "toggle" }, 1000);
        }
        var episode_items = $(".b-episodes__list li");
        if (!self.hasClass("resume-main")) {
            $("#player-status-toggle").attr({ title: lang["1"] }).data("mode", "play").removeClass("stop").addClass("play");
        } else {
            self.animate({ width: "toggle" }, 1000, function () {
                self.remove();
            });
        }
        if (!self.hasClass("active")) {
            episode_items.removeClass("active");
            self.addClass("active");
            $(".b-simple_episodes__list li").removeClass("active");
            $("#simple-episodes-list-" + self.data("season_id") + ' li[data-episode_id="' + self.data("episode_id") + '"]').addClass("active");
            callback();
        }
    };
    var checkFlashAvailability = function () {
        var enabled = !1;
        if (typeof navigator.plugins != "undefined" && typeof navigator.plugins["Shockwave Flash"] == "object") {
            enabled = !0;
        } else if (undefined !== typeof window.ActiveXObject) {
            try {
                if (new ActiveXObject("ShockwaveFlash.ShockwaveFlash")) {
                    enabled = !0;
                }
            } catch (e) {}
        }
        return enabled;
    };
    var getAndroidVersion = function (ua) {
        var ua = ua || navigator.userAgent.toLowerCase(),
            match = ua.match(/android\s([0-9\.]*)/);
        return match ? parseFloat(match[1]) : !1;
    };
    pub.setOwnPlayer = function (file, swf_url, style_url, callback) {
        callback = callback || function () {};
        swf_url = swf_url || dle_root + "player/uppod.swf?v=23";
        style_url = style_url || dle_root + "player/video.txt?v=23";
        var ua = navigator.userAgent.toLowerCase(),
            flash_available = checkFlashAvailability();
        $("#ownplayer").show();
        $("#youtubeplayer").empty().hide();
        var stream_type = "flash";
        if (ua.indexOf("android") != -1 && !flash_available) {
            stream_type = "mp4";
        }
        if ((ua.indexOf("iphone") != -1 || ua.indexOf("ipad") != -1 || ua.indexOf("ipod") != -1) && !flash_available) {
            stream_type = "hls";
        }
        if (ua.indexOf("windows phone") != -1 && !flash_available) {
            stream_type = "mp4";
        }
        if (stream_type == "flash") {
            if (!flash_available) {
                document.getElementById("videoplayer").innerHTML = '<a href="http://www.adobe.com/go/getflashplayer">Требуется обновить Flash-плеер</a>';
            } else {
                var flashvars = { uid: "videoplayer", m: "video", st: style_url, file: "" + file.hds + " or " + file.mp4 + "", bufferproc: 1, bufferproc2: 1, preloader: 1, buffersec2: 90 };
                var params = { bgcolor: "#000000", allowFullScreen: "true", allowScriptAccess: "always", wmode: "transparent" };
                var attributes = { id: "videoplayer", name: "videoplayer" };
                document.getElementById("ownplayer").style.display = "block";
                swfobject.embedSWF(swf_url, "videoplayer", "640", "360", "10.0.0", !1, flashvars, params, attributes, callback);
            }
        } else {
            player_type = "html5";
            initHLSPlayer(file.hls, file.mp4);
        }
    };
    var checkHLSsupport = function () {
        var a = document.createElement("video");
        return !!(a.canPlayType && a.canPlayType("vnd.apple.mpegurl").replace(/^no$/, ""));
    };
    var initHLSPlayer = function (file_hls, file_mp4) {
        var ua = navigator.userAgent.toLowerCase();
        if (ua.indexOf("windows phone") != -1) {
            file = file_mp4;
        } else if (ua.indexOf("android") != -1 && getAndroidVersion() >= 4.2) {
            if (checkHLSsupport()) {
                file = file_hls;
            } else {
                file = file_mp4;
            }
        } else if (ua.indexOf("android") != -1 && getAndroidVersion() < 4.2) {
            file = file_mp4;
        } else if (ua.indexOf("iphone") != -1 || ua.indexOf("ipad") != -1 || ua.indexOf("ipod") != -1) {
            file = file_hls;
        } else {
            file = file_mp4;
        }
        player_obj = new Uppod({ uid: "videoplayer", m: "video", w: 640, h: 360, file: file });
    };
    pub.changeCounter = function (action) {
        var counter = $("#saves-count"),
            num = parseInt(counter.text());
        if (!isNaN(num)) {
            action === "plus" ? num++ : num--;
        } else {
            num = 0;
        }
        counter.text(num);
    };
    pub.sendWatching = function () {
        if (isWatched) return;
        if (Math.random() < 0.5) return;
        var time = 60000,
            now = new Date().getHours();
        if (now >= 18 && now <= 23) {
            return;
        }
        if (now >= 16 && now < 18) {
            time = 300000;
        } else if ((now >= 18 && now < 20) || (now >= 0 && now <= 1)) {
            time = 600000;
        } else if (now >= 20 && now <= 23) {
            time = 1800000;
        }
        var t = new Date().getTime();
        $.post(dle_root + "ajax/send_watching/?t=" + t, { action: "add", id: itemId }, function (response) {
            if (!0 === response.success) {
                isWatched = !0;
            }
        });
    };
    pub.updateWatching = function (id) {
        var t = new Date().getTime();
        $.post(dle_root + "ajax/send_watching/?t=" + t, { action: "update", id: id }, function (response) {
            if (!0 === response.success) {
            }
        });
    };
    var getVideoJSON = function (callback) {
        callback = callback || function () {};
        var code = null;
        $.post(dle_root + "engine/ajax/saves.php", { action: "get" }, function (response) {
            if (!0 === response.success && response.message !== "") {
                code = $.parseJSON(response.message);
            }
            videoSaver = code || {};
            callback();
        });
    };
    var setVideo = function (callback) {
        callback = callback || function () {};
        $.post(dle_root + "engine/ajax/saves.php", { action: "set", code: JSON.stringify(videoSaver) }, function (response) {
            callback(response);
        });
    };
    var setVideoStringInfo = function () {
        if (undefined !== videoSaver[itemId]) {
            var string, string_controls;
            if (isTv) {
                string =
                    "Вы остановились на " +
                    toFormattedTime(videoSaver[itemId].start, !0, !0) +
                    (videoSaver[itemId].comment ? ", " + videoSaver[itemId].comment : "") +
                    " " +
                    (videoSaver[itemId].season > 0 && isMultiPl ? videoSaver[itemId].season + " сезона" : "");
            } else {
                string = "Вы остановились на " + toFormattedTime(videoSaver[itemId].start, !0, !0) + (videoSaver[itemId].comment ? ", " + videoSaver[itemId].comment : "");
            }
            string_controls =
                '<i id="player-status-toggle" title="' +
                lang["1"] +
                '" data-mode="play" class="i-sprt b-savebar__controls_item play"></i> ' +
                '<i id="videosaver-remove" title="' +
                lang["2"] +
                '" class="i-sprt b-savebar__controls_item delete"></i>';
            obj.saveStatus.stop(!0).show().html(string);
            obj.saveControls.show().html(string_controls);
        }
    };
    var setVideoStringRemoved = function () {
        obj.saveStatus.text(lang["3"]).delay(4000).fadeOut(400);
        obj.saveControls.hide();
    };
    var toFormattedTime = function (input, withHours, roundSeconds) {
        if (roundSeconds) {
            input = Math.ceil(input);
        }
        var hoursString = "00";
        var minutesString = "00";
        var secondsString = "00";
        var hours = 0;
        var minutes = 0;
        var seconds = 0;
        hours = Math.floor(input / (60 * 60));
        input = input % (60 * 60);
        minutes = Math.floor(input / 60);
        input = input % 60;
        seconds = input;
        hoursString = hours >= 10 ? hours.toString() : "0" + hours.toString();
        minutesString = minutes >= 10 ? minutes.toString() : "0" + minutes.toString();
        secondsString = seconds >= 10 ? seconds.toString() : "0" + seconds.toString();
        return (withHours ? hoursString + ":" : "") + minutesString + ":" + secondsString;
    };
    var checkHashContinue = function () {
        var hash = window.location.hash.replace(/\//g, ""),
            hashName = hash.substring(1, hash.length);
        if (hashName === "continue") {
            sof.tv.scrollToPlayer("player");
        }
    };
    var checkPlayerAviablity = function (callback) {
        callback = callback || function () {};
        var _checker, _aviablity;
        if (player_type == "html5") {
            callback();
            return;
        }
        _checker = setInterval(function () {
            _aviablity = document.getElementById("videoplayer").getUppod;
            if (undefined !== _aviablity) {
                clearInterval(_checker);
                callback();
            }
        }, 100);
    };
    var getVideoPlayer = function (id, season, episode, is_youtube, callback) {
        callback = callback || function () {};
        $("#youtubeplayer").empty();
        try {
            var t = new Date().getTime();
            $.ajax({
                url: dle_root + "ajax/get_f_video/?t=" + t,
                type: "POST",
                data: { id: id, season: season, episode: episode, youtube: is_youtube },
                cache: !1,
                dataType: "text",
                success: function (response) {
                    if ("object" !== typeof response) {
                        response = $.parseJSON(response);
                    }
                    if (!0 !== response.success) {
                        sof.helper.messageInfo(response.message);
                    } else {
                        if (is_youtube) {
                            if (player_type == "html5") {
                                player_obj.Stop();
                            } else {
                                try {
                                    uppodSend("videoplayer", "stop");
                                } catch (e) {}
                            }
                            $("#ownplayer").hide();
                            $("#youtubeplayer").html(response.link).show();
                            if ($("#ctrl_links").val() > 0) {
                                window.location.hash = "t:0-s:" + season + "-e:" + episode;
                            }
                        } else {
                            $("#ownplayer").show();
                            $("#youtubeplayer").empty().hide();
                            if ("object" !== typeof response.link) {
                                response.link = $.parseJSON(response.link);
                            }
                            var ua = navigator.userAgent.toLowerCase();
                            if (player_type == "html5") {
                                if (ua.indexOf("iphone") != -1 || ua.indexOf("ipad") != -1 || ua.indexOf("ipod") != -1) {
                                    response.link = response.link.hls;
                                } else {
                                    response.link = response.link.mp4;
                                }
                                player_obj.Play(response.link);
                                player_obj.Seek(0);
                                callback();
                            } else {
                                checkPlayerAviablity(function () {
                                    try {
                                        uppodSend("videoplayer", "file:" + response.link.hds);
                                        uppodSend("videoplayer", "seek:0");
                                    } catch (e) {}
                                    callback();
                                });
                            }
                        }
                    }
                },
            });
        } catch (e) {}
    };
    pub.scrollToPlayer = function (id) {
        var player_obj;
        if (id) {
            player_obj = $("#" + id).not(":hidden");
        } else {
            player_obj = $("#miscplayer").not(":hidden");
        }
        if (player_obj.length == 0) {
            player_obj = $("#ownplayer").not(":hidden");
        }
        if (player_obj.length == 0) {
            player_obj = $("#youtubeplayer").not(":hidden");
        }
        if (player_obj.length == 0) {
            player_obj = $("#player").not(":hidden");
        }
        if (player_obj.length > 0) {
            $("html:not(:animated)" + (sof.browser.opera ? "" : ",body:not(:animated)")).animate({ scrollTop: player_obj.offset().top - 150 }, 300);
        }
    };
    var seekVideo = function (play) {
        if (undefined !== play) {
            if (player_type == "html5") {
                player_obj.Play();
            } else {
                try {
                    uppodSend("videoplayer", "play");
                } catch (e) {}
            }
        }
        var _checker_time, _processed_time;
        if (player_type == "html5") {
            player_obj.Seek(videoSaver[itemId].start);
        } else {
            _checker_time = setInterval(function () {
                _processed_time = uppodGet("videoplayer", "getime");
                if (_processed_time > 0) {
                    clearInterval(_checker_time);
                    try {
                        uppodSend("videoplayer", "seek:" + videoSaver[itemId].start);
                    } catch (e) {}
                }
            }, 100);
        }
    };
    pub.initChangePlayersEvents = function () {
        $(".b-changeplayer__list li").on("click", function () {
            var _self = $(this);
            if (!_self.hasClass("active")) {
                $(".b-changeplayer__list li").removeClass("active");
                _self.addClass("active");
                var t = new Date().getTime();
                $("#videoplayer")
                    .find("iframe")
                    .attr({ src: _self.data("link"), name: "it" + t });
            }
        });
    };
    pub.onlyFlash = function () {
        var _support_ws = "WebSocket" in window || "MozWebSocket" in window;
        if ((sof.helper.isSmartTv() && sof.helper.flashEnabled()) || !_support_ws) {
            return !0;
        }
        return !1;
    };
    pub.setFlashCDN = function () {
        var _url = $("#cdn-player").attr("src");
        if (_url.indexOf("player_engine") > 0) {
            return;
        }
        var _iframe_block = $("#videoplayer").find("iframe").clone();
        $("#videoplayer").find("iframe").remove();
        var t = new Date().getTime();
        _iframe_block.attr({ src: _url + "&player_engine=flash", name: "it" + t });
        $("#videoplayer").html(_iframe_block);
    };
    pub.initCDNMoviesEvents = function (id) {
        cdnItemId = id || 0;
        checkHashContinue();
        $("#translators-list").on("click", ".b-translator__item", function () {
            var _self = $(this),
                _url = _self.data("cdn_url");
            if (!_self.hasClass("active")) {
                var _iframe_block = $("#videoplayer").find("iframe").clone();
                $("#videoplayer").find("iframe").remove();
                $(".b-translator__item").removeClass("active");
                _self.addClass("active");
                var t = new Date().getTime();
                var _flash_param = "";
                if (sof.tv.onlyFlash()) {
                    _flash_param = "&player_engine=flash";
                }
                _iframe_block.attr({ src: _url + "?nocontrols=1" + _flash_param, name: "it" + t });
                $("#videoplayer").html(_iframe_block);
            }
        });
        if (sof.tv.onlyFlash()) {
            sof.tv.setFlashCDN();
        }
    };
    pub.initCDNSeriesEvents = function (id, translator_id, url, callback) {
        cdnItemId = id || 0;
        cdnTranslatorId = translator_id || 0;
        cdnUrl = url || null;
        callback = callback || function () {};
        checkHashContinue();
        $("#player")
            .off("click.player_season")
            .on("click.player_season", ".b-simple_season__item", function () {
                var _self = $(this),
                    _restricted = _self.data("restricted"),
                    _season = _self.data("tab_id"),
                    _episode = 1;
                if (!_self.hasClass("active")) {
                    var _iframe_block = $("#videoplayer").find("iframe").clone();
                    $("#videoplayer").find("iframe").remove();
                    $(".b-simple_season__item").removeClass("active");
                    $(".b-simple_episode__item").removeClass("active");
                    _self.addClass("active");
                    $(".b-simple_episodes__list").slideUp(400);
                    $("#simple-episodes-list-" + _season)
                        .slideDown(400)
                        .find(".b-simple_episode__item:first")
                        .addClass("active");
                    _episode = $("#simple-episodes-list-" + _season)
                        .find(".b-simple_episode__item:first")
                        .data("episode_id");
                    cdnSeason = _season;
                    cdnEpisode = _episode;
                    var t = new Date().getTime();
                    if (_restricted == 1) {
                        _iframe_block.attr({ src: "http://craftapponline.com/restricted/?nocontrols=1&season=" + _season + "&episode=" + _episode, name: "it" + t });
                    } else {
                        var _flash_param = "";
                        if (sof.tv.onlyFlash()) {
                            _flash_param = "&player_engine=flash";
                        }
                        _iframe_block.attr({ src: cdnUrl + "?nocontrols=1&season=" + _season + "&episode=" + _episode + _flash_param, name: "it" + t });
                    }
                    $("#videoplayer").html(_iframe_block);
                    if ($("#ctrl_links").val() > 0) {
                        window.location.hash = "t:" + cdnTranslatorId + "-s:" + cdnSeason + "-e:" + cdnEpisode;
                    }
                }
            });
        $("#player")
            .off("click.player_episode")
            .on("click.player_episode", ".b-simple_episode__item", function () {
                var _self = $(this),
                    _restricted = _self.data("restricted"),
                    _season = _self.data("season_id"),
                    _episode = _self.data("episode_id");
                if (!_self.hasClass("active")) {
                    var _iframe_block = $("#videoplayer").find("iframe").clone();
                    $("#videoplayer").find("iframe").remove();
                    cdnSeason = _season;
                    cdnEpisode = _episode;
                    $(".b-simple_episode__item").removeClass("active");
                    _self.addClass("active");
                    var t = new Date().getTime();
                    if (_restricted == 1) {
                        _iframe_block.attr({ src: "http://craftapponline.com/restricted/?nocontrols=1&season=" + _season + "&episode=" + _episode, name: "it" + t });
                    } else {
                        var _flash_param = "";
                        if (sof.tv.onlyFlash()) {
                            _flash_param = "&player_engine=flash";
                        }
                        _iframe_block.attr({ src: cdnUrl + "?nocontrols=1&season=" + _season + "&episode=" + _episode + _flash_param, name: "it" + t });
                    }
                    $("#videoplayer").html(_iframe_block);
                    if ($("#ctrl_links").val() > 0) {
                        window.location.hash = "t:" + cdnTranslatorId + "-s:" + cdnSeason + "-e:" + cdnEpisode;
                    }
                }
            });
        $("#translators-list")
            .off("click.player_translator")
            .on("click.player_translator", ".b-translator__item", function () {
                var _self = $(this),
                    translator_id = _self.data("translator_id");
                if (!_self.hasClass("active")) {
                    $("#videoplayer").find("iframe").remove();
                    cdnTranslatorId = translator_id;
                    $(".b-translator__item").removeClass("active");
                    _self.addClass("active");
                    var t = new Date().getTime();
                    $.post(dle_root + "ajax/get_cdn_series/?t=" + t, { id: cdnItemId, translator_id: cdnTranslatorId }, function (response) {
                        if ("object" !== typeof response) {
                            response = $.parseJSON(response);
                        }
                        if (response.success == !0) {
                            if (response.seasons != !1) {
                                $("#simple-seasons-tabs").html(response.seasons);
                            }
                            $("#simple-episodes-tabs").html(response.episodes);
                            $("#videoplayer").html(response.player);
                            if (sof.tv.onlyFlash()) {
                                sof.tv.setFlashCDN();
                            }
                            cdnUrl = response.url;
                            var fstitem = $("#simple-episodes-tabs .b-simple_episode__item:first");
                            cdnSeason = fstitem.data("season_id");
                            cdnEpisode = fstitem.data("episode_id");
                            if ($("#ctrl_links").val() > 0) {
                                window.location.hash = "t:" + cdnTranslatorId + "-s:" + cdnSeason + "-e:" + cdnEpisode;
                            }
                        }
                    });
                }
            });
        sof.tv.setAutosaveEvents();
        var match = window.location.hash.match(/t:(\d+)-s:(\d+)-e:(\d+)/i);
        if (match !== null) {
            cdnTranslatorId = match[1];
            cdnSeason = match[2];
            cdnEpisode = match[3];
            var t = new Date().getTime();
            var _tr_count = $(".b-translator__item").length;
            var _item_translator = $('.b-translator__item[data-translator_id="' + cdnTranslatorId + '"]:first');
            if (_item_translator.length < 1 && _tr_count > 0) {
                return !1;
            }
            var _iframe_block = $("#videoplayer").find("iframe").clone();
            $("#videoplayer").find("iframe").remove();
            if (_item_translator.hasClass("active") || _tr_count == 0) {
                var _item_season = $('.b-simple_season__item[data-tab_id="' + cdnSeason + '"]'),
                    _item_episode = $("#simple-episodes-list-" + cdnSeason).find('.b-simple_episode__item[data-episode_id="' + cdnEpisode + '"]'),
                    _restricted = _item_season.data("restricted");
                if (_item_season.length < 1 || _item_episode.length < 1) {
                    var fstitem = $("#simple-episodes-tabs .b-simple_episode__item:first");
                    cdnSeason = fstitem.data("season_id");
                    cdnEpisode = fstitem.data("episode_id");
                    _item_season = $('.b-simple_season__item[data-tab_id="' + cdnSeason + '"]');
                    _item_episode = $("#simple-episodes-list-" + cdnSeason).find('.b-simple_episode__item[data-episode_id="' + cdnEpisode + '"]');
                    _restricted = _item_season.data("restricted");
                }
                if ($("#simple-episodes-list-" + cdnSeason + " .b-simple_episode__item.active").length < 1) {
                    $(".b-simple_episodes__list").slideUp(400);
                    $("#simple-episodes-list-" + cdnSeason).slideDown(400);
                }
                $(".b-simple_season__item").removeClass("active");
                $(".b-simple_episode__item").removeClass("active");
                _item_season.addClass("active");
                _item_episode.addClass("active");
                if (_restricted == 1) {
                    _iframe_block.attr({ src: "http://craftapponline.com/restricted/?nocontrols=1&season=" + cdnSeason + "&episode=" + cdnEpisode, name: "it" + t });
                } else {
                    var _flash_param = "";
                    if (sof.tv.onlyFlash()) {
                        _flash_param = "&player_engine=flash";
                    }
                    _iframe_block.attr({ src: cdnUrl + "?nocontrols=1&season=" + cdnSeason + "&episode=" + cdnEpisode + _flash_param, name: "it" + t });
                }
                $("#videoplayer").html(_iframe_block);
                return !1;
            }
            $(".b-translator__item").removeClass("active");
            _item_translator.addClass("active");
            $("#simple-seasons-tabs").empty();
            $("#simple-episodes-tabs").empty();
            $.post(dle_root + "ajax/get_cdn_series/?t=" + t, { id: cdnItemId, translator_id: cdnTranslatorId }, function (response) {
                if ("object" !== typeof response) {
                    response = $.parseJSON(response);
                }
                if (response.success == !0) {
                    if (response.seasons != !1) {
                        $("#simple-seasons-tabs").html(response.seasons);
                    }
                    $("#simple-episodes-tabs").html(response.episodes);
                    var _item_season = $('.b-simple_season__item[data-tab_id="' + cdnSeason + '"]'),
                        _item_episode = $("#simple-episodes-list-" + cdnSeason).find('.b-simple_episode__item[data-episode_id="' + cdnEpisode + '"]'),
                        _restricted = _item_season.data("restricted");
                    if (_item_season.length > 0 && _item_episode.length > 0) {
                        if ($("#simple-episodes-list-" + cdnSeason + " .b-simple_episode__item.active").length < 1) {
                            $(".b-simple_episodes__list").slideUp(400);
                            $("#simple-episodes-list-" + cdnSeason).slideDown(400);
                        }
                        $(".b-simple_season__item").removeClass("active");
                        $(".b-simple_episode__item").removeClass("active");
                        _item_season.addClass("active");
                        _item_episode.addClass("active");
                        if (_restricted == 1) {
                            _iframe_block.attr({ src: "http://craftapponline.com/restricted/?nocontrols=1&season=" + cdnSeason + "&episode=" + cdnEpisode, name: "it" + t });
                        } else {
                            var _flash_param = "";
                            if (sof.tv.onlyFlash()) {
                                _flash_param = "&player_engine=flash";
                            }
                            _iframe_block.attr({ src: response.url + "?nocontrols=1&season=" + cdnSeason + "&episode=" + cdnEpisode + _flash_param, name: "it" + t });
                        }
                        $("#videoplayer").html(_iframe_block);
                    } else {
                        var fstitem = $("#simple-episodes-tabs .b-simple_episode__item:first");
                        cdnSeason = fstitem.data("season_id");
                        cdnEpisode = fstitem.data("episode_id");
                        $("#videoplayer").html(response.player);
                    }
                    if (sof.tv.onlyFlash()) {
                        sof.tv.setFlashCDN();
                    }
                    cdnUrl = response.url;
                }
            });
        } else {
            if (sof.tv.onlyFlash()) {
                sof.tv.setFlashCDN();
            }
        }
    };
    pub.setAutosaveEvents = function () {
        $("#videoplayer, #youtubeplayer")
            .off("mouseenter.player_save mouseleave.player_save")
            .on("mouseenter.player_save mouseleave.player_save", function (e) {
                if (e.type == "mouseenter") {
                    var _self = $(this),
                        _item = $("#simple-episodes-tabs .b-simple_episode__item.active");
                    cdnSaves = { post_id: cdnItemId, translator_id: cdnTranslatorId, season: _item.data("season_id"), episode: _item.data("episode_id") };
                    cdnSavesStatus = !0;
                } else {
                    cdnSavesStatus = null;
                }
            });
        $(window)
            .off("blur.player_save")
            .on("blur.player_save", function () {
                if (null != cdnSavesTimeout) {
                    clearTimeout(cdnSavesTimeout);
                }
                if (null != cdnSaves) {
                    cdnSavesTimeout = setTimeout(function () {
                        var t = new Date().getTime();
                        $.post(dle_root + "ajax/send_save/?t=" + t, cdnSaves, function (response) {
                            if (!0 == response.success) {
                                pub.changeCounter(response.iterator);
                            }
                            clearTimeout(cdnSavesTimeout);
                        });
                    }, 300000);
                }
            });
    };
    return pub;
})();
var sof = sof || {};
sof.comments = (function () {
    var pub = {};
    pub.initEvents = function () {
        bindEvents();
        bindLikeEvents();
        bindYoutubeEvents();
    };
    var bindEvents = function () {
        setCommentsExpandEvents(0);
        $(".b-content__main").on("click", ".addcomment-success-box i", function () {
            var _self = $(this);
            _self.closest(".addcomment-success-box").hide();
        });
        $(".b-content__main")
            .off("submit")
            .on("submit", ".comments-form", function () {
                var _form = $(this),
                    _form_id = _form.data("id"),
                    _form_parent_id = _form.data("parent_id"),
                    _form_indent = _form.data("indent"),
                    _submit_btn = _form.find('button[type="submit"]'),
                    _loader = _form.find(".b-addcomment__actions .loading");
                if (!_submit_btn.prop("disabled")) {
                    _submit_btn.prop("disabled", !0);
                    _loader.show();
                    var data = {
                        name: $("#comment-name-" + _form_id).val(),
                        mail: $("#comment-email-" + _form_id).val(),
                        comments: $("#comments-" + _form_id).val(),
                        post_id: $("#post_id").val(),
                        type: $("#type_id").val(),
                        parent: _form_parent_id,
                        sec_code: $("#sec-code").val(),
                        question_answer: $("#question-answer").val(),
                        g_recaptcha_response: typeof grecaptcha != "undefined" ? grecaptcha.getResponse() : "",
                        is_admin: $("#is-admin-checkbox-" + _form_id + ":checked").val(),
                        has_adb: $("#has_adb").val(),
                    };
                    sof.ajax(dle_root + "ajax/add_comment/", data, function (response) {
                        if (response.success == !0) {
                            var html = $('<li id="comments-tree-item-' + response.comment_id + '" class="comments-tree-item" data-id="' + response.comment_id + '" data-indent="' + _form_indent + '">' + response.message + "</li>");
                            html.hide();
                            if (_form_parent_id == 0) {
                                if ($("#hd-comments-list > .comments-tree-list:first").length < 1) {
                                    html.wrap('<ol class="comments-tree-list"></ol>');
                                    $("#hd-comments-list").append(html.parent());
                                } else {
                                    $("#hd-comments-list > .comments-tree-list:first").prepend(html);
                                }
                            } else {
                                if ($("#comments-tree-item-" + _form_parent_id).find(".comments-tree-list").length < 1) {
                                    html.wrap('<ol class="comments-tree-list"></ol>');
                                    $("#comments-tree-item-" + _form_parent_id).append(html.parent());
                                } else {
                                    $("#comments-tree-item-" + _form_parent_id + " > .comments-tree-list:first").append(html);
                                }
                                _form.remove();
                            }
                            if (_form.find(".addcomment-success-box").length > 0) {
                                _form.find(".addcomment-success-box").show();
                            } else {
                                _form.find(".addcomment-layer").prepend('<div class="addcomment-success-box"><span>Сообщение успешно добавлено<br /><i>Закрыть</i></span></div>');
                            }
                            _form.find(".addcomment-more").hide();
                            _form.find(".bb-panel").hide();
                            $("#comments-" + _form_id).removeClass("expanded");
                            setCommentsExpandEvents(_form_id);
                            $("#comments-tree-item-" + response.comment_id).slideDown(400);
                            $("#comments-tree-item-" + response.comment_id + " > div:not(:animated)")
                                .addClass("now-added")
                                .animate({ backgroundColor: "transparent" }, 2000, function () {
                                    $(this).removeClass("now-added").removeAttr("style");
                                });
                            $("#comments-" + _form_id).val("");
                            if (typeof grecaptcha != "undefined") {
                                grecaptcha.reset();
                            }
                        } else {
                            var html = "Возникла неизвестная ошибка";
                            if ($.isArray(response.message)) {
                                html = '<ul class="simple-list">';
                                $.each(response.message, function (k, v) {
                                    html += "<li>" + v + "</li>";
                                });
                                html += "</ul>";
                            }
                            sof.helper.messagePS(html, "Ошибка");
                        }
                        _submit_btn.prop("disabled", !1);
                        _loader.hide();
                    });
                }
                return !1;
            });
        $("#hd-comments-list").on("click", ".share-link", function (e) {
            e.preventDefault();
            $("#comments-tree-item-" + $(this).data("id") + " > div:not(:animated)")
                .addClass("now-added")
                .animate({ backgroundColor: "transparent" }, 2000, function () {
                    $(this).removeClass("now-added").removeAttr("style");
                });
        });
        $(document).on("click", "#ps-agreement-link-spoilerbutton", function () {
            sof.home.showReportPopup($("#send-video-issue"));
            return !1;
        });
        if (!sof.is_touch) {
            $("#hd-comments-list").on("mouseenter mouseleave", ".b-comment", function (e) {
                var _self = $(this).closest(".comments-tree-item");
                var _parent_comments = _self.find(".comments-tree-list"),
                    _answ = $(this).find(".b-comment__answers_ctrl");
                if (e.type === "mouseenter") {
                    if ($(".comments-tree-list > .comments-tree-item", _self).length > 0) {
                        _self.addClass("highlight current");
                    }
                    _parent_comments.addClass("highlight parent");
                } else {
                    _self.removeClass("highlight current");
                    _parent_comments.removeClass("highlight parent");
                }
            });
            $("#hd-comments-list").on("click", ".b-comment__answers_ctrl", function (e) {
                var _self = $(this),
                    _comments = _self.closest(".comments-tree-item").find(".comments-tree-list");
                if (_self.data("show") == 1) {
                    _self.text("показать ответы");
                    _self.data("show", 0);
                    _comments.stop(!0, !0).slideUp(200);
                } else {
                    _self.text("скрыть ответы");
                    _self.data("show", 1);
                    _comments.slideDown(200);
                }
            });
        }
        if (typeof ga != "undefined") {
            if (window.ab == !0) {
                $("#has_adb").val("1");
                ga("send", "event", "Adblock", "Yes");
            } else {
                $("#has_adb").val("2");
                ga("send", "event", "Adblock", "No");
            }
        }
    };
    var buildReplyForm = function (id, indent) {
        var html = $("#comments-form").clone();
        html.prop("id", "comments-form-" + id).data({ id: id, parent_id: id });
        html.find("#addcomment-layer-0").prop("id", "addcomment-layer-" + id);
        html.find('label[for="comments-0"]').prop("for", "comments-" + id);
        html.find('label[for="comment-name-0"]').prop("for", "comment-name-" + id);
        html.find('label[for="comment-email-0"]').prop("for", "comment-email-" + id);
        html.find('label[for="question-answer-0"]').prop("for", "question-answer-" + id);
        html.find('label[for="sec-code-0"]').prop("for", "sec-code-" + id);
        html.find('label[for="is-admin-checkbox-0"]').prop("for", "is-admin-checkbox-" + id);
        html.find('textarea[id="comments-0"]').prop("placeholder", "Написать комментарий");
        html.find('textarea[id="comments-0"]').prop("id", "comments-" + id);
        html.find('input[id="comment-name-0"]').prop("id", "comment-name-" + id);
        html.find('input[id="comment-email-0"]').prop("id", "comment-email-" + id);
        html.find('input[id="question-answer-0"]').prop("id", "question-answer-" + id);
        html.find('input[id="sec-code-0"]').prop("id", "sec-code-" + id);
        html.find('input[id="is-admin-checkbox-0"]').prop("id", "is-admin-checkbox-" + id);
        html.find('button[type="submit"]').addClass("btn-small").text("Отправить");
        html.find(".b-comment__attention_rules, .addcomment-success-box").remove();
        if ($("#addcomment-layer-" + id).length < 1) {
            var comment_holder;
            if (indent < 5) {
                comment_holder = $("#comments-tree-item-" + id);
                html.data("indent", indent + 1);
            } else {
                comment_holder = $("#comments-tree-item-" + id).closest(".comments-tree-item:not(#comments-tree-item-" + id + ")");
                html.data({ parent_id: comment_holder.data("id"), indent: 5 });
            }
            comment_holder.append(html);
        }
    };
    var setCommentsExpandEvents = function (id) {
        $("#comments-" + id)
            .off("focus")
            .on("focus", function () {
                if ($.cookie("allowed_comments") != 1) {
                    sof.helper.messagePS(
                        '<div class="ps-agreement-content">В отзывах (или комментариях) категорически <b>ЗАПРЕЩЕНО</b>:<ul class="simple-list"><li>разжигание межнациональной розни или действий, направленных на возбуждение национальной, расовой вражды, унижение национального достоинства, а также высказывания об исключительности, превосходстве либо неполноценности пользователей по признаку их отношения к национальной принадлежности или политических взглядов;</li><li>оскорбление других участников сайта, включая администрацию сайта (и даже самого себя);</li><li>мат, в любом его виде (имеется ввиду сокращения, вырезание букв: звездочки, точки и тому подобное);</li><li>раскрытие важных сюжетных линий - <a href="https://ru.wikipedia.org/wiki/Спойлер_(художественные_произведения)" target="_blank">спойлеры</a> (подобный текст берется под <b>[spoiler][/spoiler]</b> соответствующей кнопкой <b>SPOILER!</b>, которая находится над полем ввода комментария);</li><li>оставлять односоставные фразы, не имеющие смысловой нагрузки;</li><li>любые вопросы, связанные с датой выхода новых серий к произведению либо датой выхода самого произведения при наличии такой информации на странице с произведением;</li><li>любые ссылки на сторонние ресурсы;</li><li>упоминание каких либо сторонних ресурсов;</li><li>любые проблемы личного характера, связанные с воспроизведением либо отображением (для этого есть соответствующая <a href="javascript:void(0)" id="ps-agreement-link-spoilerbutton">кнопка</a> под плеером).</li></ul><div class="ps-agreement-link"><a href="/comments-rules.html" target="_blank">Постоянная ссылка</a> на данные правила от 11 апреля 2016 года</div><div class="ps-agreement-buttons"><button type="button" class="btn btn-action btn-small" onclick="sof.comments.acceptCommentsAgreements();">Принимаю данные правила</button></div></div>',
                        "Внимание!"
                    );
                    return !1;
                }
                var self = $(this);
                self.addClass("expanded").off("focus");
                $("#addcomment-layer-" + id + " .addcomment-more").slideDown(400);
                $("#addcomment-layer-" + id + " .bb-panel").slideDown(400);
            });
    };
    pub.acceptCommentsAgreements = function () {
        $.cookie("allowed_comments", 1, { path: "/", expires: 30 });
        $("#ps-close").trigger("click");
    };
    var bindLikeEvents = function () {
        $("#hd-comments-list, #dle-comments-list").on("click", ".b-comment__like_it", function () {
            var _self = $(this),
                _id = _self.data("comment_id");
            if (_self.hasClass("guest")) {
                $(".b-tophead__login").trigger("click");
                return;
            }
            if (_self.hasClass("disabled")) return;
            $.ajax({
                url: dle_root + "engine/ajax/comments_like.php",
                data: { id: _id },
                method: "get",
                dataType: "json",
                success: function (response) {
                    if (response.success === !0) {
                        var _count_holder = $("#comment-id-" + _id + " .b-comment__likes_count")
                            .show()
                            .find("i");
                        _self.addClass("disabled").prop("title", "");
                        _count_holder.text(response.count);
                        $("#comment-id-" + _id + " .b-comment__like_it").data({ likes_num: response.count, ajax: "" });
                        if (response.count > 0) {
                            _count_holder.addClass("positive");
                        }
                        sof.comments.getLikesContent(_self, "update");
                    } else {
                        alert(response.message);
                    }
                },
            });
        });
    };
    var moveCursorToEnd = function (el) {
        if (typeof el.selectionStart == "number") {
            el.selectionStart = el.selectionEnd = el.value.length;
        } else if (typeof el.createTextRange != "undefined") {
            el.focus();
            var range = el.createTextRange();
            range.collapse(!1);
            range.select();
        }
    };
    var insertBB = function (ibTag, ibClsTag, isSingle, from_obj) {
        var uagent = navigator.userAgent.toLowerCase();
        var is_ie = uagent.indexOf("msie") >= 0 ? !0 : !1;
        var isClose = !1;
        var obj_ta = $(from_obj).closest(".addcomment-layer").find('textarea[name="comments"]');
        obj_ta = eval(obj_ta[0]);
        obj_ta.focus();
        if (is_ie) {
            if (obj_ta.isTextEdit) {
                var sel = document.selection;
                var rng = ie_range_cache ? ie_range_cache : sel.createRange();
                rng.colapse;
                if ((sel.type == "Text" || sel.type == "None") && rng != null) {
                    if (ibClsTag != "" && rng.text.length > 0) {
                        ibTag += rng.text + ibClsTag;
                    } else if (isSingle) {
                        ibTag += rng.text + ibClsTag;
                    }
                    rng.text = ibTag;
                }
            } else {
                obj_ta.value += ibTag + ibClsTag;
            }
            rng.select();
            ie_range_cache = null;
        } else if (obj_ta.selectionEnd != null) {
            var ss = obj_ta.selectionStart;
            var st = obj_ta.scrollTop;
            var es = obj_ta.selectionEnd;
            var start = obj_ta.value.substring(0, ss);
            var middle = obj_ta.value.substring(ss, es);
            var end = obj_ta.value.substring(es, obj_ta.textLength);
            if (!isSingle) middle = "";
            if (obj_ta.selectionEnd - obj_ta.selectionStart > 0) {
                middle = ibTag + middle + ibClsTag;
            } else {
                middle = ibTag + middle + ibClsTag;
            }
            obj_ta.value = start + middle + end;
            var cpos = ss + middle.length;
            obj_ta.selectionStart = cpos;
            obj_ta.selectionEnd = cpos;
            obj_ta.scrollTop = st;
        } else {
            obj_ta.value += ibTag + ibClsTag;
        }
        return isClose;
    };
    pub.quoteUser = function (name, id, indent) {
        if ($("#comments-form").length < 1) return;
        if (id > 0) {
            $('form[id^="comments-form-"]')
                .not("#comments-form-" + id)
                .remove();
            indent = parseInt(indent);
            var live_indent = parseInt($("#comments-tree-item-" + id).data("indent"));
            if (live_indent > indent) {
                indent = live_indent;
            }
            buildReplyForm(id, indent);
            setCommentsExpandEvents(id);
            var field = $("#comments-" + id),
                offset_top = parseInt($("#top-nav.fixed").outerHeight(!0));
            field.trigger("focus");
            if (indent >= 5) {
                var val = $.trim(field.val());
                if (val == "") {
                    field.val(val + "[b]" + name + "[/b], ");
                } else {
                    field.val(val + "\n[b]" + name + "[/b], ");
                }
                moveCursorToEnd(field[0]);
            }
            sof.helper.scrollTo($("#comments-form-" + id), offset_top);
        }
    };
    pub.bb = function (tag, el) {
        insertBB("[" + tag + "]", "[/" + tag + "]", !0, el);
    };
    pub.deleteComment = function (id, hash, type, area) {
        type = type || 0;
        var confirmed = confirm("Удалить комментарий?");
        if (confirmed) {
            $.get(dle_root + "engine/ajax/deletecomments.php", { id: id, dle_allow_hash: hash, type: type, area: area }, function (response) {
                if (response.success == !0) {
                    if (response.parent == !0) {
                        $("#comment-id-" + response.comment_id)
                            .addClass("b-comment__removed")
                            .html("Комментарий был удален");
                    } else {
                        if ($("#comments-tree-item-" + response.comment_id).length > 0) {
                            $("#comments-tree-item-" + response.comment_id).hide(400, function () {
                                $(this).remove();
                            });
                        } else {
                            $("#comment-id-" + response.comment_id).hide(400, function () {
                                $(this).remove();
                            });
                        }
                    }
                } else {
                    if (response.parent_id > 0 && response.link != "") {
                        sof.helper.messagePS(response.message, "Ошибка");
                    }
                }
            });
        }
        return !1;
    };
    pub.loadComments = function (id, page, scroll, type, comment_id, callback) {
        page = page || 1;
        scroll = scroll || !1;
        type = type || 0;
        comment_id = comment_id || 0;
        callback = callback || function () {};
        if (!id) return;
        var list = $("#hd-comments-list"),
            navigation = $("#hd-comments-navigation");
        list.empty().addClass("loading");
        navigation.css("visibility", "hidden");
        var t = new Date().getTime();
        $.ajax({
            url: dle_root + "ajax/get_comments/?t=" + t,
            data: { news_id: id, cstart: page, type: type, comment_id: comment_id, skin: dle_skin },
            method: "get",
            dataType: "json",
            success: function (response) {
                list.removeClass("loading").html(response.comments);
                if (!scroll) {
                    sof.helper.scrollTo(list);
                }
                navigation.html(response.navigation).css("visibility", "visible");
                sof.comments.setLikesPopup();
                if (!sof.is_touch) {
                    sof.comments.setTooltips();
                }
                callback();
            },
        });
    };
    pub.setTooltips = function () {
        $("#hd-comments-list .hd-tooltip").tooltipster({ animation: "swing", hideOnClick: !0, touchDevices: !1 });
    };
    pub.setLikesPopup = function () {
        $(".show-likes-comment").tooltipster({
            animation: "fade",
            hideOnClick: !0,
            contentAsHTML: !0,
            interactive: !0,
            content: '<i class="b-tt_popup__loader"></i>',
            updateAnimation: !1,
            onlyOne: !0,
            position: "top_always",
            offsetY: -7,
            functionBefore: function (origin, continueTooltip) {
                if (origin.data("likes_num") > 0) {
                    continueTooltip();
                    if (origin.data("ajax") !== "cached") {
                        sof.comments.getLikesContent(origin);
                        origin.data("ajax", "cached");
                    }
                }
            },
            functionAfter: function (origin) {},
        });
    };
    pub.getLikesContent = function (origin, action, callback) {
        callback = callback || function () {};
        action = action || "none";
        if (action == "update") {
            origin.tooltipster("content", '<i class="b-tt_popup__loader"></i>');
            origin.tooltipster("show");
        }
        sof.ajax(dle_root + "ajax/comments_likes/", { comment_id: origin.data("comment_id") }, function (response) {
            var content = "";
            if (response.success == !0) {
                if (response.message == "") {
                    response.message = "Все данные куда-то пропали :(";
                }
                origin.tooltipster("content", response.message).data("ajax", "cached");
            } else {
                origin.tooltipster("content", response.message);
            }
        });
        origin.data("ajax", "cached");
    };
    var bindYoutubeEvents = function () {
        $("#hd-comments-list, #dle-comments-list").on("click", ".youtu-link", function (e) {
            $("#trailer-popup").remove();
            var html = '<div id="trailer-popup" class="b-popup b-popup__fixed"><div class="b-popup__content"></div><i title="Закрыть" class="b-popup__close"></i></div>';
            $("body").append(html);
            var _self = $(this),
                popup = $("#trailer-popup"),
                content_holder = $(".b-popup__content", popup);
            var onClose = function () {
                content_holder.html("");
            };
            var onOpen = function () {
                content_holder.html(buildYoutubePlayer(_self.data("youtube-id")));
            };
            sof.helper.setOverlayEvent(function () {
                onClose();
                sof.helper.hidePopup(popup);
                sof.helper.setOverlayEvent();
            });
            sof.helper.setClosePopupEvent(function () {
                onClose();
                sof.helper.hidePopup(popup);
                sof.helper.setOverlayEvent();
            });
            sof.helper.showPopup("trailer-popup", "fixed", onOpen, onClose);
            e.preventDefault();
        });
    };
    var buildYoutubePlayer = function (id) {
        return '<iframe width="640" height="360" src="//www.youtube.com/embed/' + id + '?iv_load_policy=3&hd=1&rel=0&showinfo=0&autoplay=1" frameborder="0" allowfullscreen style="background: #000000;"></iframe>';
    };
    return pub;
})();
$(function () {
    sof.init();
    sof.helper.initEvents();
    sof.home.stickFooter();
    sof.home.bindEvents();
    sof.home.bindSearch();
    sof.home.bindTopMenu();
    sof.home.bindGuestEvents();
    sof.home.bindSubmitLogin();
    sof.home.bindSubmitRegister();
    sof.home.bindQuickContent();
    sof.gallery.initEvents();
    sof.pages.initEvents();
    sof.comments.initEvents();
});
